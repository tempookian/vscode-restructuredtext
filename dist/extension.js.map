{
  "version": 3,
  "sources": ["../node_modules/inversify/src/constants/metadata_keys.ts", "../node_modules/inversify/src/constants/literal_types.ts", "../node_modules/inversify/src/utils/id.ts", "../node_modules/inversify/src/bindings/binding.ts", "../node_modules/inversify/src/constants/error_msgs.ts", "../node_modules/inversify/src/planning/metadata_reader.ts", "../node_modules/inversify/src/bindings/binding_count.ts", "../node_modules/inversify/src/utils/exceptions.ts", "../node_modules/inversify/src/utils/serialization.ts", "../node_modules/inversify/src/planning/context.ts", "../node_modules/inversify/src/planning/metadata.ts", "../node_modules/inversify/src/planning/plan.ts", "../node_modules/inversify/src/annotation/lazy_service_identifier.ts", "../node_modules/inversify/src/planning/queryable_string.ts", "../node_modules/inversify/src/planning/target.ts", "../node_modules/inversify/src/planning/reflection_utils.ts", "../node_modules/inversify/src/planning/request.ts", "../node_modules/inversify/src/planning/planner.ts", "../node_modules/inversify/src/utils/async.ts", "../node_modules/inversify/src/scope/scope.ts", "../node_modules/inversify/src/utils/factory_type.ts", "../node_modules/inversify/src/utils/binding_utils.ts", "../node_modules/inversify/src/resolution/instantiation.ts", "../node_modules/inversify/src/resolution/resolver.ts", "../node_modules/inversify/src/syntax/constraint_helpers.ts", "../node_modules/inversify/src/syntax/binding_when_syntax.ts", "../node_modules/inversify/src/syntax/binding_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_when_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_in_syntax.ts", "../node_modules/inversify/src/syntax/binding_in_when_on_syntax.ts", "../node_modules/inversify/src/syntax/binding_to_syntax.ts", "../node_modules/inversify/src/container/container_snapshot.ts", "../node_modules/inversify/src/utils/clonable.ts", "../node_modules/inversify/src/container/lookup.ts", "../node_modules/inversify/src/container/module_activation_store.ts", "../node_modules/inversify/src/container/container.ts", "../node_modules/inversify/src/container/container_module.ts", "../node_modules/inversify/src/utils/js.ts", "../node_modules/inversify/src/annotation/decorator_utils.ts", "../node_modules/inversify/src/annotation/injectable.ts", "../node_modules/inversify/src/annotation/tagged.ts", "../node_modules/inversify/src/annotation/named.ts", "../node_modules/inversify/src/annotation/inject_base.ts", "../node_modules/inversify/src/annotation/inject.ts", "../node_modules/inversify/src/annotation/optional.ts", "../node_modules/inversify/src/annotation/unmanaged.ts", "../node_modules/inversify/src/annotation/multi_inject.ts", "../node_modules/inversify/src/annotation/target_name.ts", "../node_modules/inversify/src/annotation/property_event_decorator.ts", "../node_modules/inversify/src/annotation/post_construct.ts", "../node_modules/inversify/src/annotation/pre_destroy.ts", "../node_modules/inversify/src/interfaces/interfaces.ts", "../node_modules/inversify/src/inversify.ts", "../node_modules/rollbar/src/merge.js", "../node_modules/rollbar/src/utility.js", "../node_modules/rollbar/src/rateLimiter.js", "../node_modules/rollbar/src/queue.js", "../node_modules/rollbar/src/notifier.js", "../node_modules/rollbar/src/rollbar.js", "../node_modules/rollbar/src/apiUtility.js", "../node_modules/rollbar/src/api.js", "../node_modules/rollbar/src/server/logger.js", "../node_modules/rollbar/src/utility/traverse.js", "../node_modules/rollbar/src/truncation.js", "../node_modules/json-stringify-safe/stringify.js", "../node_modules/rollbar/src/server/transport.js", "../node_modules/rollbar/src/telemetry.js", "../node_modules/rollbar/src/server/telemetry/urlHelpers.js", "../node_modules/rollbar/src/server/telemetry.js", "../node_modules/async/dist/async.js", "../node_modules/rollbar/node_modules/lru-cache/lib/lru-cache.js", "../node_modules/source-map/lib/base64.js", "../node_modules/source-map/lib/base64-vlq.js", "../node_modules/source-map/lib/util.js", "../node_modules/source-map/lib/array-set.js", "../node_modules/source-map/lib/mapping-list.js", "../node_modules/source-map/lib/source-map-generator.js", "../node_modules/source-map/lib/binary-search.js", "../node_modules/source-map/lib/quick-sort.js", "../node_modules/source-map/lib/source-map-consumer.js", "../node_modules/source-map/lib/source-node.js", "../node_modules/source-map/source-map.js", "../node_modules/rollbar/src/server/sourceMap/stackTrace.js", "../node_modules/rollbar/src/server/parser.js", "../node_modules/is_js/is.js", "../node_modules/request-ip/index.js", "../node_modules/rollbar/src/scrub.js", "../node_modules/rollbar/src/server/transforms.js", "../node_modules/rollbar/src/transforms.js", "../node_modules/rollbar/src/predicates.js", "../node_modules/rollbar/vendor/JSON-js/json3.js", "../node_modules/rollbar/src/server/rollbar.js", "../node_modules/@jedithepro/system-info/lib/util.js", "../node_modules/@jedithepro/system-info/lib/system.js", "../node_modules/@jedithepro/system-info/lib/osinfo.js", "../node_modules/@jedithepro/system-info/lib/cpu.js", "../node_modules/@jedithepro/system-info/lib/memory.js", "../node_modules/@jedithepro/system-info/lib/battery.js", "../node_modules/@jedithepro/system-info/lib/graphics.js", "../node_modules/@jedithepro/system-info/lib/filesystem.js", "../node_modules/@jedithepro/system-info/lib/network.js", "../node_modules/@jedithepro/system-info/lib/wifi.js", "../node_modules/@jedithepro/system-info/lib/processes.js", "../node_modules/@jedithepro/system-info/lib/users.js", "../node_modules/@jedithepro/system-info/lib/internet.js", "../node_modules/@jedithepro/system-info/lib/dockerSocket.js", "../node_modules/@jedithepro/system-info/lib/docker.js", "../node_modules/@jedithepro/system-info/lib/virtualbox.js", "../node_modules/@jedithepro/system-info/lib/index.js", "../node_modules/webidl-conversions/lib/index.js", "../node_modules/whatwg-url/lib/utils.js", "../node_modules/tr46/index.js", "../node_modules/whatwg-url/lib/url-state-machine.js", "../node_modules/whatwg-url/lib/URL-impl.js", "../node_modules/whatwg-url/lib/URL.js", "../node_modules/whatwg-url/lib/public-api.js", "../node_modules/node-fetch/lib/index.js", "../node_modules/meaw/src/defs.js", "../node_modules/meaw/src/get-eaw.js", "../node_modules/meaw/src/compute-width.js", "../node_modules/semver/internal/debug.js", "../node_modules/semver/internal/constants.js", "../node_modules/semver/internal/re.js", "../node_modules/semver/internal/parse-options.js", "../node_modules/semver/internal/identifiers.js", "../node_modules/semver/classes/semver.js", "../node_modules/semver/functions/minor.js", "../src/extension.ts", "../src/util/commandManager.ts", "../src/commands/openDocumentLink.ts", "../src/util/file.ts", "../src/commands/moveCursorToPosition.ts", "../src/editor/extension.ts", "../src/editor/commands.ts", "../src/editor/util.ts", "../src/editor/i18n.ts", "../src/editor/tableEditor.ts", "../node_modules/reflect-metadata/Reflect.js", "../src/inversify.config.ts", "../src/types.ts", "../src/util/logger.ts", "../src/util/python.ts", "../src/util/configuration.ts", "../src/util/stateUtils.ts", "../src/util/config.ts", "../src/constants.ts", "../src/editor/link.ts", "../src/editor/underline.ts", "../src/editor/listEditing.ts", "../src/editor/setContext.ts", "../src/linter/rstLinter.ts", "../src/linter/lintingProvider.ts", "../src/util/async.ts", "../src/util/lineDecoder.ts", "../src/linter/extension.ts", "../src/rating.ts"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nfunction merge() {\n  var i, src, copy, clone, name,\n      result = {},\n     current = null,\n      length = arguments.length;\n\n  for (i=0; i < length; i++) {\n    current = arguments[i];\n    if (current == null) {\n      continue;\n    }\n\n    for (name in current) {\n      src = result[name];\n      copy = current[name];\n      if (result !== copy) {\n        if (copy && isPlainObject(copy)) {\n          clone = src && isPlainObject(src) ? src : {};\n          result[name] = merge(clone, copy);\n        } else if (typeof copy !== 'undefined') {\n          result[name] = copy;\n        }\n      }\n    }\n  }\n  return result;\n}\n\nmodule.exports = merge;\n", "var merge = require('./merge');\n\nvar RollbarJSON = {};\nfunction setupJSON(polyfillJSON) {\n  if (isFunction(RollbarJSON.stringify) && isFunction(RollbarJSON.parse)) {\n    return;\n  }\n\n  if (isDefined(JSON)) {\n    // If polyfill is provided, prefer it over existing non-native shims.\n    if(polyfillJSON) {\n      if (isNativeFunction(JSON.stringify)) {\n        RollbarJSON.stringify = JSON.stringify;\n      }\n      if (isNativeFunction(JSON.parse)) {\n        RollbarJSON.parse = JSON.parse;\n      }\n    } else { // else accept any interface that is present.\n      if (isFunction(JSON.stringify)) {\n        RollbarJSON.stringify = JSON.stringify;\n      }\n      if (isFunction(JSON.parse)) {\n        RollbarJSON.parse = JSON.parse;\n      }\n    }\n  }\n  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {\n    polyfillJSON && polyfillJSON(RollbarJSON);\n  }\n}\n\n/*\n * isType - Given a Javascript value and a string, returns true if the type of the value matches the\n * given string.\n *\n * @param x - any value\n * @param t - a lowercase string containing one of the following type names:\n *    - undefined\n *    - null\n *    - error\n *    - number\n *    - boolean\n *    - string\n *    - symbol\n *    - function\n *    - object\n *    - array\n * @returns true if x is of type t, otherwise false\n */\nfunction isType(x, t) {\n  return t === typeName(x);\n}\n\n/*\n * typeName - Given a Javascript value, returns the type of the object as a string\n */\nfunction typeName(x) {\n  var name = typeof x;\n  if (name !== 'object') {\n    return name;\n  }\n  if (!x) {\n    return 'null';\n  }\n  if (x instanceof Error) {\n    return 'error';\n  }\n  return ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n/* isFunction - a convenience function for checking if a value is a function\n *\n * @param f - any value\n * @returns true if f is a function, otherwise false\n */\nfunction isFunction(f) {\n  return isType(f, 'function');\n}\n\n/* isNativeFunction - a convenience function for checking if a value is a native JS function\n *\n * @param f - any value\n * @returns true if f is a native JS function, otherwise false\n */\nfunction isNativeFunction(f) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)\n    .replace(reRegExpChar, '\\\\$&')\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?');\n  var reIsNative = RegExp('^' + funcMatchString + '$');\n  return isObject(f) && reIsNative.test(f);\n}\n\n/* isObject - Checks if the argument is an object\n *\n * @param value - any value\n * @returns true is value is an object function is an object)\n*/\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* isString - Checks if the argument is a string\n *\n * @param value - any value\n * @returns true if value is a string\n*/\nfunction isString(value) {\n  return typeof value === 'string' || value instanceof String\n}\n\n/**\n * isFiniteNumber - determines whether the passed value is a finite number\n *\n * @param {*} n - any value\n * @returns true if value is a finite number\n */\n function isFiniteNumber(n) {\n  return Number.isFinite(n);\n}\n\n/*\n * isDefined - a convenience function for checking if a value is not equal to undefined\n *\n * @param u - any value\n * @returns true if u is anything other than undefined\n */\nfunction isDefined(u) {\n  return !isType(u, 'undefined');\n}\n\n/*\n * isIterable - convenience function for checking if a value can be iterated, essentially\n * whether it is an object or an array.\n *\n * @param i - any value\n * @returns true if i is an object or an array as determined by `typeName`\n */\nfunction isIterable(i) {\n  var type = typeName(i);\n  return (type === 'object' || type === 'array');\n}\n\n/*\n * isError - convenience function for checking if a value is of an error type\n *\n * @param e - any value\n * @returns true if e is an error\n */\nfunction isError(e) {\n  // Detect both Error and Firefox Exception type\n  return isType(e, 'error') || isType(e, 'exception');\n}\n\n/* isPromise - a convenience function for checking if a value is a promise\n *\n * @param p - any value\n * @returns true if f is a function, otherwise false\n */\nfunction isPromise(p) {\n  return isObject(p) && isType(p.then, 'function');\n}\n\nfunction redact() {\n  return '********';\n}\n\n// from http://stackoverflow.com/a/8809472/1138191\nfunction uuid4() {\n  var d = now();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\nvar LEVELS = {\n  debug: 0,\n  info: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n\nfunction sanitizeUrl(url) {\n  var baseUrlParts = parseUri(url);\n  if (!baseUrlParts) {\n    return '(unknown)';\n  }\n\n  // remove a trailing # if there is no anchor\n  if (baseUrlParts.anchor === '') {\n    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n  }\n\n  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n  return url;\n}\n\nvar parseUriOptions = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\nfunction parseUri(str) {\n  if (!isType(str, 'string')) {\n    return undefined;\n  }\n\n  var o = parseUriOptions;\n  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  var uri = {};\n\n  for (var i = 0, l = o.key.length; i < l; ++i) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\nfunction addParamsAndAccessTokenToPath(accessToken, options, params) {\n  params = params || {};\n  params.access_token = accessToken;\n  var paramsArray = [];\n  var k;\n  for (k in params) {\n    if (Object.prototype.hasOwnProperty.call(params, k)) {\n      paramsArray.push([k, params[k]].join('='));\n    }\n  }\n  var query = '?' + paramsArray.sort().join('&');\n\n  options = options || {};\n  options.path = options.path || '';\n  var qs = options.path.indexOf('?');\n  var h = options.path.indexOf('#');\n  var p;\n  if (qs !== -1 && (h === -1 || h > qs)) {\n    p = options.path;\n    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);\n  } else {\n    if (h !== -1) {\n      p = options.path;\n      options.path = p.substring(0,h) + query + p.substring(h);\n    } else {\n      options.path = options.path + query;\n    }\n  }\n}\n\nfunction formatUrl(u, protocol) {\n  protocol = protocol || u.protocol;\n  if (!protocol && u.port) {\n    if (u.port === 80) {\n      protocol = 'http:';\n    } else if (u.port === 443) {\n      protocol = 'https:';\n    }\n  }\n  protocol = protocol || 'https:';\n\n  if (!u.hostname) {\n    return null;\n  }\n  var result = protocol + '//' + u.hostname;\n  if (u.port) {\n    result = result + ':' + u.port;\n  }\n  if (u.path) {\n    result = result + u.path;\n  }\n  return result;\n}\n\nfunction stringify(obj, backup) {\n  var value, error;\n  try {\n    value = RollbarJSON.stringify(obj);\n  } catch (jsonError) {\n    if (backup && isFunction(backup)) {\n      try {\n        value = backup(obj);\n      } catch (backupError) {\n        error = backupError;\n      }\n    } else {\n      error = jsonError;\n    }\n  }\n  return {error: error, value: value};\n}\n\nfunction maxByteSize(string) {\n  // The transport will use utf-8, so assume utf-8 encoding.\n  //\n  // This minimal implementation will accurately count bytes for all UCS-2 and\n  // single code point UTF-16. If presented with multi code point UTF-16,\n  // which should be rare, it will safely overcount, not undercount.\n  //\n  // While robust utf-8 encoders exist, this is far smaller and far more performant.\n  // For quickly counting payload size for truncation, smaller is better.\n\n  var count = 0;\n  var length = string.length;\n\n  for (var i = 0; i < length; i++) {\n    var code = string.charCodeAt(i);\n    if (code < 128) { // up to 7 bits\n      count = count + 1;\n    } else if (code < 2048) { // up to 11 bits\n      count = count + 2;\n    } else if (code < 65536) { // up to 16 bits\n      count = count + 3;\n    }\n  }\n\n  return count;\n}\n\nfunction jsonParse(s) {\n  var value, error;\n  try {\n    value = RollbarJSON.parse(s);\n  } catch (e) {\n    error = e;\n  }\n  return {error: error, value: value};\n}\n\nfunction makeUnhandledStackInfo(\n  message,\n  url,\n  lineno,\n  colno,\n  error,\n  mode,\n  backupMessage,\n  errorParser\n) {\n  var location = {\n    url: url || '',\n    line: lineno,\n    column: colno\n  };\n  location.func = errorParser.guessFunctionName(location.url, location.line);\n  location.context = errorParser.gatherContext(location.url, location.line);\n  var href = typeof document !== 'undefined' && document && document.location && document.location.href;\n  var useragent = typeof window !== 'undefined' && window && window.navigator && window.navigator.userAgent;\n  return {\n    'mode': mode,\n    'message': error ? String(error) : (message || backupMessage),\n    'url': href,\n    'stack': [location],\n    'useragent': useragent\n  };\n}\n\nfunction wrapCallback(logger, f) {\n  return function(err, resp) {\n    try {\n      f(err, resp);\n    } catch (e) {\n      logger.error(e);\n    }\n  };\n}\n\nfunction nonCircularClone(obj) {\n  var seen = [obj];\n\n  function clone(obj, seen) {\n    var value, name, newSeen, result = {};\n\n    try {\n      for (name in obj) {\n        value = obj[name];\n\n        if (value && (isType(value, 'object') || isType(value, 'array'))) {\n          if (seen.includes(value)) {\n            result[name] = 'Removed circular reference: ' + typeName(value);\n          } else {\n            newSeen = seen.slice();\n            newSeen.push(value);\n            result[name] = clone(value, newSeen);\n          }\n          continue;\n        }\n\n        result[name] = value;\n      }\n    } catch (e) {\n      result = 'Failed cloning custom data: ' + e.message;\n    }\n    return result;\n  }\n  return clone(obj, seen);\n}\n\nfunction createItem(args, logger, notifier, requestKeys, lambdaContext) {\n  var message, err, custom, callback, request;\n  var arg;\n  var extraArgs = [];\n  var diagnostic = {};\n  var argTypes = [];\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    argTypes.push(typ);\n    switch (typ) {\n      case 'undefined':\n        break;\n      case 'string':\n        message ? extraArgs.push(arg) : message = arg;\n        break;\n      case 'function':\n        callback = wrapCallback(logger, arg);\n        break;\n      case 'date':\n        extraArgs.push(arg);\n        break;\n      case 'error':\n      case 'domexception':\n      case 'exception': // Firefox Exception type\n        err ? extraArgs.push(arg) : err = arg;\n        break;\n      case 'object':\n      case 'array':\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        if (requestKeys && typ === 'object' && !request) {\n          for (var j = 0, len = requestKeys.length; j < len; ++j) {\n            if (arg[requestKeys[j]] !== undefined) {\n              request = arg;\n              break;\n            }\n          }\n          if (request) {\n            break;\n          }\n        }\n        custom ? extraArgs.push(arg) : custom = arg;\n        break;\n      default:\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        extraArgs.push(arg);\n    }\n  }\n\n  // if custom is an array this turns it into an object with integer keys\n  if (custom) custom = nonCircularClone(custom);\n\n  if (extraArgs.length > 0) {\n    if (!custom) custom = nonCircularClone({});\n    custom.extraArgs = nonCircularClone(extraArgs);\n  }\n\n  var item = {\n    message: message,\n    err: err,\n    custom: custom,\n    timestamp: now(),\n    callback: callback,\n    notifier: notifier,\n    diagnostic: diagnostic,\n    uuid: uuid4()\n  };\n\n  setCustomItemKeys(item, custom);\n\n  if (requestKeys && request) {\n    item.request = request;\n  }\n  if (lambdaContext) {\n    item.lambdaContext = lambdaContext;\n  }\n  item._originalArgs = args;\n  item.diagnostic.original_arg_types = argTypes;\n  return item;\n}\n\nfunction setCustomItemKeys(item, custom) {\n  if (custom && custom.level !== undefined) {\n    item.level = custom.level;\n    delete custom.level;\n  }\n  if (custom && custom.skipFrames !== undefined) {\n    item.skipFrames = custom.skipFrames;\n    delete custom.skipFrames;\n  }\n}\n\nfunction addErrorContext(item, errors) {\n  var custom = item.data.custom || {};\n  var contextAdded = false;\n\n  try {\n    for (var i = 0; i < errors.length; ++i) {\n      if (errors[i].hasOwnProperty('rollbarContext')) {\n        custom = merge(custom, nonCircularClone(errors[i].rollbarContext));\n        contextAdded = true;\n      }\n    }\n\n    // Avoid adding an empty object to the data.\n    if (contextAdded) {\n      item.data.custom = custom;\n    }\n  } catch (e) {\n    item.diagnostic.error_context = 'Failed: ' + e.message;\n  }\n}\n\nvar TELEMETRY_TYPES = ['log', 'network', 'dom', 'navigation', 'error', 'manual'];\nvar TELEMETRY_LEVELS = ['critical', 'error', 'warning', 'info', 'debug'];\n\nfunction arrayIncludes(arr, val) {\n  for (var k = 0; k < arr.length; ++k) {\n    if (arr[k] === val) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction createTelemetryEvent(args) {\n  var type, metadata, level;\n  var arg;\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    switch (typ) {\n      case 'string':\n        if (!type && arrayIncludes(TELEMETRY_TYPES, arg)) {\n          type = arg;\n        } else if (!level && arrayIncludes(TELEMETRY_LEVELS, arg)) {\n          level = arg;\n        }\n        break;\n      case 'object':\n        metadata = arg;\n        break;\n      default:\n        break;\n    }\n  }\n  var event = {\n    type: type || 'manual',\n    metadata: metadata || {},\n    level: level\n  };\n\n  return event;\n}\n\n/*\n * get - given an obj/array and a keypath, return the value at that keypath or\n *       undefined if not possible.\n *\n * @param obj - an object or array\n * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'\n *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`\n */\nfunction get(obj, path) {\n  if (!obj) {\n    return undefined;\n  }\n  var keys = path.split('.');\n  var result = obj;\n  try {\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      result = result[keys[i]];\n    }\n  } catch (e) {\n    result = undefined;\n  }\n  return result;\n}\n\nfunction set(obj, path, value) {\n  if (!obj) {\n    return;\n  }\n  var keys = path.split('.');\n  var len = keys.length;\n  if (len < 1) {\n    return;\n  }\n  if (len === 1) {\n    obj[keys[0]] = value;\n    return;\n  }\n  try {\n    var temp = obj[keys[0]] || {};\n    var replacement = temp;\n    for (var i = 1; i < len - 1; ++i) {\n      temp[keys[i]] = temp[keys[i]] || {};\n      temp = temp[keys[i]];\n    }\n    temp[keys[len-1]] = value;\n    obj[keys[0]] = replacement;\n  } catch (e) {\n    return;\n  }\n}\n\nfunction formatArgsAsString(args) {\n  var i, len, arg;\n  var result = [];\n  for (i = 0, len = args.length; i < len; ++i) {\n    arg = args[i];\n    switch (typeName(arg)) {\n      case 'object':\n        arg = stringify(arg);\n        arg = arg.error || arg.value;\n        if (arg.length > 500) {\n          arg = arg.substr(0, 497) + '...';\n        }\n        break;\n      case 'null':\n        arg = 'null';\n        break;\n      case 'undefined':\n        arg = 'undefined';\n        break;\n      case 'symbol':\n        arg = arg.toString();\n        break;\n    }\n    result.push(arg);\n  }\n  return result.join(' ');\n}\n\nfunction now() {\n  if (Date.now) {\n    return +Date.now();\n  }\n  return +new Date();\n}\n\nfunction filterIp(requestData, captureIp) {\n  if (!requestData || !requestData['user_ip'] || captureIp === true) {\n    return;\n  }\n  var newIp = requestData['user_ip'];\n  if (!captureIp) {\n    newIp = null;\n  } else {\n    try {\n      var parts;\n      if (newIp.indexOf('.') !== -1) {\n        parts = newIp.split('.');\n        parts.pop();\n        parts.push('0');\n        newIp = parts.join('.');\n      } else if (newIp.indexOf(':') !== -1) {\n        parts = newIp.split(':');\n        if (parts.length > 2) {\n          var beginning = parts.slice(0, 3);\n          var slashIdx = beginning[2].indexOf('/');\n          if (slashIdx !== -1) {\n            beginning[2] = beginning[2].substring(0, slashIdx);\n          }\n          var terminal = '0000:0000:0000:0000:0000';\n          newIp = beginning.concat(terminal).join(':');\n        }\n      } else {\n        newIp = null;\n      }\n    } catch (e) {\n      newIp = null;\n    }\n  }\n  requestData['user_ip'] = newIp;\n}\n\nfunction handleOptions(current, input, payload, logger) {\n  var result = merge(current, input, payload);\n  result = updateDeprecatedOptions(result, logger);\n  if (!input || input.overwriteScrubFields) {\n    return result;\n  }\n  if (input.scrubFields) {\n    result.scrubFields = (current.scrubFields || []).concat(input.scrubFields);\n  }\n  return result;\n}\n\nfunction updateDeprecatedOptions(options, logger) {\n  if(options.hostWhiteList && !options.hostSafeList) {\n    options.hostSafeList = options.hostWhiteList;\n    options.hostWhiteList = undefined;\n    logger && logger.log('hostWhiteList is deprecated. Use hostSafeList.');\n  }\n  if(options.hostBlackList && !options.hostBlockList) {\n    options.hostBlockList = options.hostBlackList;\n    options.hostBlackList = undefined;\n    logger && logger.log('hostBlackList is deprecated. Use hostBlockList.');\n  }\n  return options;\n}\n\nmodule.exports = {\n  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,\n  createItem: createItem,\n  addErrorContext: addErrorContext,\n  createTelemetryEvent: createTelemetryEvent,\n  filterIp: filterIp,\n  formatArgsAsString: formatArgsAsString,\n  formatUrl: formatUrl,\n  get: get,\n  handleOptions: handleOptions,\n  isError: isError,\n  isFiniteNumber: isFiniteNumber,\n  isFunction: isFunction,\n  isIterable: isIterable,\n  isNativeFunction: isNativeFunction,\n  isObject: isObject,\n  isString: isString,\n  isType: isType,\n  isPromise: isPromise,\n  jsonParse: jsonParse,\n  LEVELS: LEVELS,\n  makeUnhandledStackInfo: makeUnhandledStackInfo,\n  merge: merge,\n  now: now,\n  redact: redact,\n  RollbarJSON: RollbarJSON,\n  sanitizeUrl: sanitizeUrl,\n  set: set,\n  setupJSON: setupJSON,\n  stringify: stringify,\n  maxByteSize: maxByteSize,\n  typeName: typeName,\n  uuid4: uuid4\n};\n", "var _ = require('./utility');\n\n/*\n * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar\n *\n * @param options - the same options that are accepted by configureGlobal offered as a convenience\n */\nfunction RateLimiter(options) {\n  this.startTime = _.now();\n  this.counter = 0;\n  this.perMinCounter = 0;\n  this.platform = null;\n  this.platformOptions = {};\n  this.configureGlobal(options);\n}\n\nRateLimiter.globalSettings = {\n  startTime: _.now(),\n  maxItems: undefined,\n  itemsPerMinute: undefined\n};\n\n/*\n * configureGlobal - set the global rate limiter options\n *\n * @param options - Only the following values are recognized:\n *    startTime: a timestamp of the form returned by (new Date()).getTime()\n *    maxItems: the maximum items\n *    itemsPerMinute: the max number of items to send in a given minute\n */\nRateLimiter.prototype.configureGlobal = function(options) {\n  if (options.startTime !== undefined) {\n    RateLimiter.globalSettings.startTime = options.startTime;\n  }\n  if (options.maxItems !== undefined) {\n    RateLimiter.globalSettings.maxItems = options.maxItems;\n  }\n  if (options.itemsPerMinute !== undefined) {\n    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;\n  }\n};\n\n/*\n * shouldSend - determine if we should send a given item based on rate limit settings\n *\n * @param item - the item we are about to send\n * @returns An object with the following structure:\n *  error: (Error|null)\n *  shouldSend: bool\n *  payload: (Object|null)\n *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and\n *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will\n *  describe the situation, but it means that we were already over a rate limit (either globally or\n *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it\n *  means this item put us over the global rate limit and the payload should be sent to Rollbar in\n *  place of the passed in item.\n */\nRateLimiter.prototype.shouldSend = function(item, now) {\n  now = now || _.now();\n  var elapsedTime = now - this.startTime;\n  if (elapsedTime < 0 || elapsedTime >= 60000) {\n    this.startTime = now;\n    this.perMinCounter = 0;\n  }\n\n  var globalRateLimit = RateLimiter.globalSettings.maxItems;\n  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;\n\n  if (checkRate(item, globalRateLimit, this.counter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);\n  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);\n  }\n  this.counter++;\n  this.perMinCounter++;\n\n  var shouldSend = !checkRate(item, globalRateLimit, this.counter);\n  var perMinute = shouldSend;\n  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);\n  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);\n};\n\nRateLimiter.prototype.setPlatformOptions = function(platform, options) {\n  this.platform = platform;\n  this.platformOptions = options;\n};\n\n/* Helpers */\n\nfunction checkRate(item, limit, counter) {\n  return !item.ignoreRateLimit && limit >= 1 && counter > limit;\n}\n\nfunction shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {\n  var payload = null;\n  if (error) {\n    error = new Error(error);\n  }\n  if (!error && !shouldSend) {\n    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);\n  }\n  return {error: error, shouldSend: shouldSend, payload: payload};\n}\n\nfunction rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {\n  var environment = options.environment || (options.payload && options.payload.environment);\n  var msg;\n  if (perMinute) {\n    msg = 'item per minute limit reached, ignoring errors until timeout';\n  } else {\n    msg = 'maxItems has been hit, ignoring errors until reset.';\n  }\n  var item = {\n    body: {\n      message: {\n        body: msg,\n        extra: {\n          maxItems: globalRateLimit,\n          itemsPerMinute: limitPerMin\n        }\n      }\n    },\n    language: 'javascript',\n    environment: environment,\n    notifier: {\n      version: (options.notifier && options.notifier.version) || options.version\n    }\n  };\n  if (platform === 'browser') {\n    item.platform = 'browser';\n    item.framework = 'browser-js';\n    item.notifier.name = 'rollbar-browser-js';\n  } else if (platform === 'server') {\n    item.framework = options.framework || 'node-js';\n    item.notifier.name = options.notifier.name;\n  } else if (platform === 'react-native') {\n    item.framework = options.framework || 'react-native';\n    item.notifier.name = options.notifier.name;\n  }\n  return item;\n}\n\nmodule.exports = RateLimiter;\n", "var _ = require('./utility');\n\n/*\n * Queue - an object which handles which handles a queue of items to be sent to Rollbar.\n *   This object handles rate limiting via a passed in rate limiter, retries based on connection\n *   errors, and filtering of items based on a set of configurable predicates. The communication to\n *   the backend is performed via a given API object.\n *\n * @param rateLimiter - An object which conforms to the interface\n *    rateLimiter.shouldSend(item) -> bool\n * @param api - An object which conforms to the interface\n *    api.postItem(payload, function(err, response))\n * @param logger - An object used to log verbose messages if desired\n * @param options - see Queue.prototype.configure\n */\nfunction Queue(rateLimiter, api, logger, options) {\n  this.rateLimiter = rateLimiter;\n  this.api = api;\n  this.logger = logger;\n  this.options = options;\n  this.predicates = [];\n  this.pendingItems = [];\n  this.pendingRequests = [];\n  this.retryQueue = [];\n  this.retryHandle = null;\n  this.waitCallback = null;\n  this.waitIntervalID = null;\n}\n\n/*\n * configure - updates the options this queue uses\n *\n * @param options\n */\nQueue.prototype.configure = function(options) {\n  this.api && this.api.configure(options);\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  return this;\n};\n\n/*\n * addPredicate - adds a predicate to the end of the list of predicates for this queue\n *\n * @param predicate - function(item, options) -> (bool|{err: Error})\n *  Returning true means that this predicate passes and the item is okay to go on the queue\n *  Returning false means do not add the item to the queue, but it is not an error\n *  Returning {err: Error} means do not add the item to the queue, and the given error explains why\n *  Returning {err: undefined} is equivalent to returning true but don't do that\n */\nQueue.prototype.addPredicate = function(predicate) {\n  if (_.isFunction(predicate)) {\n    this.predicates.push(predicate);\n  }\n  return this;\n};\n\nQueue.prototype.addPendingItem = function(item) {\n  this.pendingItems.push(item);\n};\n\nQueue.prototype.removePendingItem = function(item) {\n  var idx = this.pendingItems.indexOf(item);\n  if (idx !== -1) {\n    this.pendingItems.splice(idx, 1);\n  }\n};\n\n/*\n * addItem - Send an item to the Rollbar API if all of the predicates are satisfied\n *\n * @param item - The payload to send to the backend\n * @param callback - function(error, repsonse) which will be called with the response from the API\n *  in the case of a success, otherwise response will be null and error will have a value. If both\n *  error and response are null then the item was stopped by a predicate which did not consider this\n *  to be an error condition, but nonetheless did not send the item to the API.\n *  @param originalError - The original error before any transformations that is to be logged if any\n */\nQueue.prototype.addItem = function(item, callback, originalError, originalItem) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() { return; };\n  }\n  var predicateResult = this._applyPredicates(item);\n  if (predicateResult.stop) {\n    this.removePendingItem(originalItem);\n    callback(predicateResult.err);\n    return;\n  }\n  this._maybeLog(item, originalError);\n  this.removePendingItem(originalItem);\n  if (!this.options.transmit) {\n    callback(new Error('Transmit disabled'));\n    return;\n  }\n  this.pendingRequests.push(item);\n  try {\n    this._makeApiRequest(item, function(err, resp) {\n      this._dequeuePendingRequest(item);\n      callback(err, resp);\n    }.bind(this));\n  } catch (e) {\n    this._dequeuePendingRequest(item);\n    callback(e);\n  }\n};\n\n/*\n * wait - Stop any further errors from being added to the queue, and get called back when all items\n *   currently processing have finished sending to the backend.\n *\n * @param callback - function() called when all pending items have been sent\n */\nQueue.prototype.wait = function(callback) {\n  if (!_.isFunction(callback)) {\n    return;\n  }\n  this.waitCallback = callback;\n  if (this._maybeCallWait()) {\n    return;\n  }\n  if (this.waitIntervalID) {\n    this.waitIntervalID = clearInterval(this.waitIntervalID);\n  }\n  this.waitIntervalID = setInterval(function() {\n    this._maybeCallWait();\n  }.bind(this), 500);\n};\n\n/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the\n *   given item with the currently configured options.\n *\n * @param item - An item in the queue\n * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,\n *   the error value should be passed up to a callbak if we are stopping.\n */\nQueue.prototype._applyPredicates = function(item) {\n  var p = null;\n  for (var i = 0, len = this.predicates.length; i < len; i++) {\n    p = this.predicates[i](item, this.options);\n    if (!p || p.err !== undefined) {\n      return {stop: true, err: p.err};\n    }\n  }\n  return {stop: false, err: null};\n};\n\n/*\n * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an\n *   effort to retry if we are configured to do so.\n *\n * @param item - an item ready to send to the backend\n * @param callback - function(err, response)\n */\nQueue.prototype._makeApiRequest = function(item, callback) {\n  var rateLimitResponse = this.rateLimiter.shouldSend(item);\n  if (rateLimitResponse.shouldSend) {\n    this.api.postItem(item, function(err, resp) {\n      if (err) {\n        this._maybeRetry(err, item, callback);\n      } else {\n        callback(err, resp);\n      }\n    }.bind(this));\n  } else if (rateLimitResponse.error) {\n    callback(rateLimitResponse.error);\n  } else {\n    this.api.postItem(rateLimitResponse.payload, callback);\n  }\n};\n\n// These are errors basically mean there is no internet connection\nvar RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];\n\n/*\n * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback\n *   with the error.\n *\n * @param err - an error returned by the API transport\n * @param item - the item that was trying to be sent when this error occured\n * @param callback - function(err, response)\n */\nQueue.prototype._maybeRetry = function(err, item, callback) {\n  var shouldRetry = false;\n  if (this.options.retryInterval) {\n    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {\n      if (err.code === RETRIABLE_ERRORS[i]) {\n        shouldRetry = true;\n        break;\n      }\n    }\n    if (shouldRetry && _.isFiniteNumber(this.options.maxRetries)) {\n      item.retries = item.retries ? item.retries + 1 : 1;\n      if (item.retries > this.options.maxRetries) {\n        shouldRetry = false;\n      }\n    }\n  }\n  if (shouldRetry) {\n    this._retryApiRequest(item, callback);\n  } else {\n    callback(err);\n  }\n};\n\n/*\n * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process\n *   that queue based on the retryInterval in the options for this queue.\n *\n * @param item - an item that failed to send due to an error we deem retriable\n * @param callback - function(err, response)\n */\nQueue.prototype._retryApiRequest = function(item, callback) {\n  this.retryQueue.push({item: item, callback: callback});\n\n  if (!this.retryHandle) {\n    this.retryHandle = setInterval(function() {\n      while (this.retryQueue.length) {\n        var retryObject = this.retryQueue.shift();\n        this._makeApiRequest(retryObject.item, retryObject.callback);\n      }\n    }.bind(this), this.options.retryInterval);\n  }\n};\n\n/*\n * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to\n *   enable to functionality of providing a callback that clients can pass to `wait` to be notified\n *   when the pending request queue has been emptied. This must be called when the API finishes\n *   processing this item. If a `wait` callback is configured, it is called by this function.\n *\n * @param item - the item previously added to the pending request queue\n */\nQueue.prototype._dequeuePendingRequest = function(item) {\n  var idx = this.pendingRequests.indexOf(item);\n  if (idx !== -1) {\n    this.pendingRequests.splice(idx, 1);\n    this._maybeCallWait();\n  }\n};\n\nQueue.prototype._maybeLog = function(data, originalError) {\n  if (this.logger && this.options.verbose) {\n    var message = originalError;\n    message = message || _.get(data, 'body.trace.exception.message');\n    message = message || _.get(data, 'body.trace_chain.0.exception.message');\n    if (message) {\n      this.logger.error(message);\n      return;\n    }\n    message = _.get(data, 'body.message.body');\n    if (message) {\n      this.logger.log(message);\n    }\n  }\n};\n\nQueue.prototype._maybeCallWait = function() {\n  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {\n    if (this.waitIntervalID) {\n      this.waitIntervalID = clearInterval(this.waitIntervalID);\n    }\n    this.waitCallback();\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = Queue;\n", "var _ = require('./utility');\n\n/*\n * Notifier - the internal object responsible for delegating between the client exposed API, the\n * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the\n * queue which handles the communcation with the Rollbar API servers.\n *\n * @param queue - an object that conforms to the interface: addItem(item, callback)\n * @param options - an object representing the options to be set for this notifier, this should have\n * any defaults already set by the caller\n */\nfunction Notifier(queue, options) {\n  this.queue = queue;\n  this.options = options;\n  this.transforms = [];\n  this.diagnostic = {};\n}\n\n/*\n * configure - updates the options for this notifier with the passed in object\n *\n * @param options - an object which gets merged with the current options set on this notifier\n * @returns this\n */\nNotifier.prototype.configure = function(options) {\n  this.queue && this.queue.configure(options);\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  return this;\n};\n\n/*\n * addTransform - adds a transform onto the end of the queue of transforms for this notifier\n *\n * @param transform - a function which takes three arguments:\n *    * item: An Object representing the data to eventually be sent to Rollbar\n *    * options: The current value of the options for this notifier\n *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this\n *    callback with a null value for error if it wants the processing chain to continue, otherwise\n *    with an error to terminate the processing. The item should be the updated item after this\n *    transform is finished modifying it.\n */\nNotifier.prototype.addTransform = function(transform) {\n  if (_.isFunction(transform)) {\n    this.transforms.push(transform);\n  }\n  return this;\n};\n\n/*\n * log - the internal log function which applies the configured transforms and then pushes onto the\n * queue to be sent to the backend.\n *\n * @param item - An object with the following structure:\n *    message [String] - An optional string to be sent to rollbar\n *    error [Error] - An optional error\n *\n * @param callback - A function of type function(err, resp) which will be called with exactly one\n * null argument and one non-null argument. The callback will be called once, either during the\n * transform stage if an error occurs inside a transform, or in response to the communication with\n * the backend. The second argument will be the response from the backend in case of success.\n */\nNotifier.prototype.log = function(item, callback) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!this.options.enabled) {\n    return callback(new Error('Rollbar is not enabled'));\n  }\n\n  this.queue.addPendingItem(item);\n  var originalError = item.err;\n  this._applyTransforms(item, function(err, i) {\n    if (err) {\n      this.queue.removePendingItem(item);\n      return callback(err, null);\n    }\n    this.queue.addItem(i, callback, originalError, item);\n  }.bind(this));\n};\n\n/* Internal */\n\n/*\n * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See\n * `addTransform` for more information.\n *\n * @param item - An item to be transformed\n * @param callback - A function of type function(err, item) which will be called with a non-null\n * error and a null item in the case of a transform failure, or a null error and non-null item after\n * all transforms have been applied.\n */\nNotifier.prototype._applyTransforms = function(item, callback) {\n  var transformIndex = -1;\n  var transformsLength = this.transforms.length;\n  var transforms = this.transforms;\n  var options = this.options;\n\n  var cb = function(err, i) {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    transformIndex++;\n\n    if (transformIndex === transformsLength) {\n      callback(null, i);\n      return;\n    }\n\n    transforms[transformIndex](i, options, cb);\n  };\n\n  cb(null, item);\n};\n\nmodule.exports = Notifier;\n", "var RateLimiter = require('./rateLimiter');\nvar Queue = require('./queue');\nvar Notifier = require('./notifier');\nvar _ = require('./utility');\n\n/*\n * Rollbar - the interface to Rollbar\n *\n * @param options\n * @param api\n * @param logger\n */\nfunction Rollbar(options, api, logger, telemeter, platform) {\n  this.options = _.merge(options);\n  this.logger = logger;\n  Rollbar.rateLimiter.configureGlobal(this.options);\n  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);\n  this.api = api;\n  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);\n\n  // This must happen before the Notifier is created\n  var tracer = this.options.tracer || null;\n  if (validateTracer(tracer)) {\n    this.tracer = tracer;\n    // set to a string for api response serialization\n    this.options.tracer = 'opentracing-tracer-enabled';\n    this.options._configuredOptions.tracer = 'opentracing-tracer-enabled';\n  } else {\n    this.tracer = null;\n  }\n\n  this.notifier = new Notifier(this.queue, this.options);\n  this.telemeter = telemeter;\n  setStackTraceLimit(options);\n  this.lastError = null;\n  this.lastErrorHash = 'none';\n}\n\nvar defaultOptions = {\n  maxItems: 0,\n  itemsPerMinute: 60\n};\n\nRollbar.rateLimiter = new RateLimiter(defaultOptions);\n\nRollbar.prototype.global = function (options) {\n  Rollbar.rateLimiter.configureGlobal(options);\n  return this;\n};\n\nRollbar.prototype.configure = function (options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = { payload: payloadData };\n  }\n\n  this.options = _.merge(oldOptions, options, payload);\n\n  // This must happen before the Notifier is configured\n  var tracer = this.options.tracer || null;\n  if (validateTracer(tracer)) {\n    this.tracer = tracer;\n    // set to a string for api response serialization\n    this.options.tracer = 'opentracing-tracer-enabled';\n    this.options._configuredOptions.tracer = 'opentracing-tracer-enabled';\n  } else {\n    this.tracer = null;\n  }\n\n  this.notifier && this.notifier.configure(this.options);\n  this.telemeter && this.telemeter.configure(this.options);\n  setStackTraceLimit(options);\n  this.global(this.options);\n\n  if (validateTracer(options.tracer)) {\n    this.tracer = options.tracer\n  }\n\n  return this;\n};\n\nRollbar.prototype.log = function (item) {\n  var level = this._defaultLogLevel();\n  return this._log(level, item);\n};\n\nRollbar.prototype.debug = function (item) {\n  this._log('debug', item);\n};\n\nRollbar.prototype.info = function (item) {\n  this._log('info', item);\n};\n\nRollbar.prototype.warn = function (item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.warning = function (item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.error = function (item) {\n  this._log('error', item);\n};\n\nRollbar.prototype.critical = function (item) {\n  this._log('critical', item);\n};\n\nRollbar.prototype.wait = function (callback) {\n  this.queue.wait(callback);\n};\n\nRollbar.prototype.captureEvent = function (type, metadata, level) {\n  return this.telemeter && this.telemeter.captureEvent(type, metadata, level);\n};\n\nRollbar.prototype.captureDomContentLoaded = function (ts) {\n  return this.telemeter && this.telemeter.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function (ts) {\n  return this.telemeter && this.telemeter.captureLoad(ts);\n};\n\nRollbar.prototype.buildJsonPayload = function (item) {\n  return this.api.buildJsonPayload(item);\n};\n\nRollbar.prototype.sendJsonPayload = function (jsonPayload) {\n  this.api.postJsonPayload(jsonPayload);\n};\n\n/* Internal */\n\nRollbar.prototype._log = function (defaultLevel, item) {\n  var callback;\n  if (item.callback) {\n    callback = item.callback;\n    delete item.callback;\n  }\n  if (this.options.ignoreDuplicateErrors && this._sameAsLastError(item)) {\n    if (callback) {\n      var error = new Error('ignored identical item');\n      error.item = item;\n      callback(error);\n    }\n    return;\n  }\n  try {\n    this._addTracingInfo(item);\n    item.level = item.level || defaultLevel;\n    this.telemeter && this.telemeter._captureRollbarItem(item);\n    item.telemetryEvents = (this.telemeter && this.telemeter.copyEvents()) || [];\n    this.notifier.log(item, callback);\n  } catch (e) {\n    if (callback) {\n      callback(e);\n    }\n    this.logger.error(e);\n  }\n};\n\nRollbar.prototype._defaultLogLevel = function () {\n  return this.options.logLevel || 'debug';\n};\n\nRollbar.prototype._sameAsLastError = function (item) {\n  if (!item._isUncaught) {\n    return false;\n  }\n  var itemHash = generateItemHash(item);\n  if (this.lastErrorHash === itemHash) {\n    return true;\n  }\n  this.lastError = item.err;\n  this.lastErrorHash = itemHash;\n  return false;\n};\n\nRollbar.prototype._addTracingInfo = function (item) {\n  // Tracer validation occurs in the constructor\n  // or in the Rollbar.prototype.configure methods\n  if (this.tracer) {\n    // add rollbar occurrence uuid to span\n    var span = this.tracer.scope().active();\n\n    if (validateSpan(span)) {\n      span.setTag('rollbar.error_uuid', item.uuid);\n      span.setTag('rollbar.has_error', true);\n      span.setTag('error', true);\n      span.setTag('rollbar.item_url', `https://rollbar.com/item/uuid/?uuid=${item.uuid}`);\n      span.setTag('rollbar.occurrence_url', `https://rollbar.com/occurrence/uuid/?uuid=${item.uuid}`);\n\n      // add span ID & trace ID to occurrence\n      var opentracingSpanId = span.context().toSpanId();\n      var opentracingTraceId = span.context().toTraceId();\n\n      if (item.custom) {\n        item.custom.opentracing_span_id = opentracingSpanId;\n        item.custom.opentracing_trace_id = opentracingTraceId;\n      } else {\n        item.custom = {\n          opentracing_span_id: opentracingSpanId,\n          opentracing_trace_id: opentracingTraceId\n        };\n      }\n    }\n  }\n}\n\nfunction generateItemHash(item) {\n  var message = item.message || '';\n  var stack = (item.err || {}).stack || String(item.err);\n  return message + '::' + stack;\n}\n\n// Node.js, Chrome, Safari, and some other browsers support this property\n// which globally sets the number of stack frames returned in an Error object.\n// If a browser can't use it, no harm done.\nfunction setStackTraceLimit(options) {\n  if (options.stackTraceLimit) {\n    Error.stackTraceLimit = options.stackTraceLimit;\n  }\n}\n\n/**\n * Validate the Tracer object provided to the Client\n * is valid for our Opentracing use case.\n * @param {opentracer.Tracer} tracer\n */\nfunction validateTracer(tracer) {\n  if (!tracer) {\n    return false;\n  }\n\n  if (!tracer.scope || typeof tracer.scope !== 'function') {\n    return false;\n  }\n\n  var scope = tracer.scope();\n\n  if (!scope || !scope.active || typeof scope.active !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Validate the Span object provided\n * @param {opentracer.Span} span\n */\nfunction validateSpan(span) {\n  if (!span || !span.context || typeof span.context !== 'function') {\n    return false;\n  }\n\n  var spanContext = span.context();\n\n  if (!spanContext\n    || !spanContext.toSpanId\n    || !spanContext.toTraceId\n    || typeof spanContext.toSpanId !== 'function'\n    || typeof spanContext.toTraceId !== 'function') {\n    return false\n  }\n\n  return true;\n}\n\nmodule.exports = Rollbar;\n", "var _ = require('./utility');\n\nfunction buildPayload(accessToken, data, jsonBackup) {\n  if (!_.isType(data.context, 'string')) {\n    var contextResult = _.stringify(data.context, jsonBackup);\n    if (contextResult.error) {\n      data.context = 'Error: could not serialize \\'context\\'';\n    } else {\n      data.context = contextResult.value || '';\n    }\n    if (data.context.length > 255) {\n      data.context = data.context.substr(0, 255);\n    }\n  }\n  return {\n    access_token: accessToken,\n    data: data\n  };\n}\n\nfunction getTransportFromOptions(options, defaults, url) {\n  var hostname = defaults.hostname;\n  var protocol = defaults.protocol;\n  var port = defaults.port;\n  var path = defaults.path;\n  var search = defaults.search;\n  var timeout = options.timeout;\n\n  var proxy = options.proxy;\n  if (options.endpoint) {\n    var opts = url.parse(options.endpoint);\n    hostname = opts.hostname;\n    protocol = opts.protocol;\n    port = opts.port;\n    path = opts.pathname;\n    search = opts.search;\n  }\n  return {\n    timeout: timeout,\n    hostname: hostname,\n    protocol: protocol,\n    port: port,\n    path: path,\n    search: search,\n    proxy: proxy\n  };\n}\n\nfunction transportOptions(transport, method) {\n  var protocol = transport.protocol || 'https:';\n  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);\n  var hostname = transport.hostname;\n  var path = transport.path;\n  var timeout = transport.timeout;\n  if (transport.search) {\n    path = path + transport.search;\n  }\n  if (transport.proxy) {\n    path = protocol + '//' + hostname + path;\n    hostname = transport.proxy.host || transport.proxy.hostname;\n    port = transport.proxy.port;\n    protocol = transport.proxy.protocol || protocol;\n  }\n  return {\n    timeout: timeout,\n    protocol: protocol,\n    hostname: hostname,\n    path: path,\n    port: port,\n    method: method\n  };\n}\n\nfunction appendPathToPath(base, path) {\n  var baseTrailingSlash = /\\/$/.test(base);\n  var pathBeginningSlash = /^\\//.test(path);\n\n  if (baseTrailingSlash && pathBeginningSlash) {\n    path = path.substring(1);\n  } else if (!baseTrailingSlash && !pathBeginningSlash) {\n    path = '/' + path;\n  }\n\n  return base + path;\n}\n\nmodule.exports = {\n  buildPayload: buildPayload,\n  getTransportFromOptions: getTransportFromOptions,\n  transportOptions: transportOptions,\n  appendPathToPath: appendPathToPath\n};\n", "var _ = require('./utility');\nvar helpers = require('./apiUtility');\n\nvar defaultOptions = {\n  hostname: 'api.rollbar.com',\n  path: '/api/1/item/',\n  search: null,\n  version: '1',\n  protocol: 'https:',\n  port: 443\n};\n\n/**\n * Api is an object that encapsulates methods of communicating with\n * the Rollbar API.  It is a standard interface with some parts implemented\n * differently for server or browser contexts.  It is an object that should\n * be instantiated when used so it can contain non-global options that may\n * be different for another instance of RollbarApi.\n *\n * @param options {\n *    accessToken: the accessToken to use for posting items to rollbar\n *    endpoint: an alternative endpoint to send errors to\n *        must be a valid, fully qualified URL.\n *        The default is: https://api.rollbar.com/api/1/item\n *    proxy: if you wish to proxy requests provide an object\n *        with the following keys:\n *          host or hostname (required): foo.example.com\n *          port (optional): 123\n *          protocol (optional): https\n * }\n */\nfunction Api(options, transport, urllib, truncation, jsonBackup) {\n  this.options = options;\n  this.transport = transport;\n  this.url = urllib;\n  this.truncation = truncation;\n  this.jsonBackup = jsonBackup;\n  this.accessToken = options.accessToken;\n  this.transportOptions = _getTransport(options, urllib);\n}\n\n/**\n *\n * @param data\n * @param callback\n */\nApi.prototype.postItem = function(data, callback) {\n  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n  this.transport.post(this.accessToken, transportOptions, payload, callback);\n};\n\n/**\n *\n * @param data\n * @param callback\n */\nApi.prototype.buildJsonPayload = function(data, callback) {\n  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n\n  var stringifyResult;\n  if (this.truncation) {\n    stringifyResult = this.truncation.truncate(payload);\n  } else {\n    stringifyResult = _.stringify(payload)\n  }\n\n  if (stringifyResult.error) {\n    if (callback) {\n      callback(stringifyResult.error);\n    }\n    return null;\n  }\n\n  return stringifyResult.value;\n};\n\n/**\n *\n * @param jsonPayload\n * @param callback\n */\nApi.prototype.postJsonPayload = function(jsonPayload, callback) {\n  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n  this.transport.postJsonPayload(this.accessToken, transportOptions, jsonPayload, callback);\n};\n\nApi.prototype.configure = function(options) {\n  var oldOptions = this.oldOptions;\n  this.options = _.merge(oldOptions, options);\n  this.transportOptions = _getTransport(this.options, this.url);\n  if (this.options.accessToken !== undefined) {\n    this.accessToken = this.options.accessToken;\n  }\n  return this;\n};\n\nfunction _getTransport(options, url) {\n  return helpers.getTransportFromOptions(options, defaultOptions, url);\n}\n\nmodule.exports = Api;\n", "'use strict';\n\nvar verbose = true;\n\nvar logger = {\n  /* eslint-disable no-console */\n  log: function() {\n    if (verbose) {\n      console.log.apply(console, arguments);\n    }\n  },\n  error: function() {\n    if (verbose) {\n      console.error.apply(console, arguments);\n    }\n  },\n  /* eslint-enable no-console */\n  setVerbose: function(val) {\n    verbose = val;\n  }\n};\n\nmodule.exports = logger;\n", "var _ = require('../utility');\n\nfunction traverse(obj, func, seen) {\n  var k, v, i;\n  var isObj = _.isType(obj, 'object');\n  var isArray = _.isType(obj, 'array');\n  var keys = [];\n  var seenIndex;\n\n  // Best might be to use Map here with `obj` as the keys, but we want to support IE < 11.\n  seen = seen || { obj: [], mapped: []};\n\n  if (isObj) {\n    seenIndex = seen.obj.indexOf(obj);\n\n    if (isObj && seenIndex !== -1) {\n      // Prefer the mapped object if there is one.\n      return seen.mapped[seenIndex] || seen.obj[seenIndex];\n    }\n\n    seen.obj.push(obj);\n    seenIndex = seen.obj.length - 1;\n  }\n\n  if (isObj) {\n    for (k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        keys.push(k);\n      }\n    }\n  } else if (isArray) {\n    for (i = 0; i < obj.length; ++i) {\n      keys.push(i);\n    }\n  }\n\n  var result = isObj ? {} : [];\n  var same = true;\n  for (i = 0; i < keys.length; ++i) {\n    k = keys[i];\n    v = obj[k];\n    result[k] = func(k, v, seen);\n    same = same && result[k] === obj[k];\n  }\n\n  if (isObj && !same) {\n    seen.mapped[seenIndex] = result;\n  }\n\n  return !same ? result : obj;\n}\n\nmodule.exports = traverse;\n", "var _ = require('./utility');\nvar traverse = require('./utility/traverse');\n\nfunction raw(payload, jsonBackup) {\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction selectFrames(frames, range) {\n  var len = frames.length;\n  if (len > range * 2) {\n    return frames.slice(0, range).concat(frames.slice(len - range));\n  }\n  return frames;\n}\n\nfunction truncateFrames(payload, jsonBackup, range) {\n  range = (typeof range === 'undefined') ? 30 : range;\n  var body = payload.data.body;\n  var frames;\n  if (body.trace_chain) {\n    var chain = body.trace_chain;\n    for (var i = 0; i < chain.length; i++) {\n      frames = chain[i].frames;\n      frames = selectFrames(frames, range);\n      chain[i].frames = frames;\n    }\n  } else if (body.trace) {\n    frames = body.trace.frames;\n    frames = selectFrames(frames, range);\n    body.trace.frames = frames;\n  }\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction maybeTruncateValue(len, val) {\n  if (!val) {\n    return val;\n  }\n  if (val.length > len) {\n    return val.slice(0, len - 3).concat('...');\n  }\n  return val;\n}\n\nfunction truncateStrings(len, payload, jsonBackup) {\n  function truncator(k, v, seen) {\n    switch (_.typeName(v)) {\n      case 'string':\n        return maybeTruncateValue(len, v);\n      case 'object':\n      case 'array':\n        return traverse(v, truncator, seen);\n      default:\n        return v;\n    }\n  }\n  payload = traverse(payload, truncator);\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction truncateTraceData(traceData) {\n  if (traceData.exception) {\n    delete traceData.exception.description;\n    traceData.exception.message = maybeTruncateValue(255, traceData.exception.message);\n  }\n  traceData.frames = selectFrames(traceData.frames, 1);\n  return traceData;\n}\n\nfunction minBody(payload, jsonBackup) {\n  var body = payload.data.body;\n  if (body.trace_chain) {\n    var chain = body.trace_chain;\n    for (var i = 0; i < chain.length; i++) {\n      chain[i] = truncateTraceData(chain[i]);\n    }\n  } else if (body.trace) {\n    body.trace = truncateTraceData(body.trace);\n  }\n  return [payload, _.stringify(payload, jsonBackup)];\n}\n\nfunction needsTruncation(payload, maxSize) {\n  return _.maxByteSize(payload) > maxSize;\n}\n\nfunction truncate(payload, jsonBackup, maxSize) {\n  maxSize = (typeof maxSize === 'undefined') ? (512 * 1024) : maxSize;\n  var strategies = [\n    raw,\n    truncateFrames,\n    truncateStrings.bind(null, 1024),\n    truncateStrings.bind(null, 512),\n    truncateStrings.bind(null, 256),\n    minBody\n  ];\n  var strategy, results, result;\n\n  while ((strategy = strategies.shift())) {\n    results = strategy(payload, jsonBackup);\n    payload = results[0];\n    result = results[1];\n    if (result.error || !needsTruncation(result.value, maxSize)) {\n      return result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = {\n  truncate: truncate,\n\n  /* for testing */\n  raw: raw,\n  truncateFrames: truncateFrames,\n  truncateStrings: truncateStrings,\n  maybeTruncateValue: maybeTruncateValue\n};\n", "exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n", "var _ = require('../utility');\nvar truncation = require('../truncation');\nvar logger = require('./logger');\n\nvar http = require('http');\nvar https = require('https');\nvar jsonBackup = require('json-stringify-safe');\n\nvar MAX_RATE_LIMIT_INTERVAL = 60;\n\n/*\n * accessToken may be embedded in payload but that should not be assumed\n *\n * options: {\n *   hostname\n *   protocol\n *   path\n *   port\n *   method\n * }\n *\n * params is an object containing key/value pairs to be\n *    appended to the path as 'key=value&key=value'\n *\n * payload is an unserialized object\n */\nfunction Transport() {\n  this.rateLimitExpires = 0;\n}\n\nTransport.prototype.get = function(accessToken, options, params, callback, transportFactory) {\n  var t;\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n  options = options || {};\n  _.addParamsAndAccessTokenToPath(accessToken, options, params);\n  options.headers = _headers(accessToken, options);\n  if (transportFactory) {\n    t = transportFactory(options);\n  } else {\n    t = _transport(options);\n  }\n  if (!t) {\n    logger.error('Unknown transport based on given protocol: ' + options.protocol);\n    return callback(new Error('Unknown transport'));\n  }\n  var req = t.request(options, function(resp) {\n    this.handleResponse(resp, callback);\n  }.bind(this));\n  req.on('error', function(err) {\n    callback(err);\n  });\n  req.end();\n}\n\nTransport.prototype.post = function(accessToken, options, payload, callback, transportFactory) {\n  var t;\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n  if (_currentTime() < this.rateLimitExpires) {\n    return callback(new Error('Exceeded rate limit'));\n  }\n  options = options || {};\n  if (!payload) {\n    return callback(new Error('Cannot send empty request'));\n  }\n  var stringifyResult = truncation.truncate(payload, jsonBackup);\n  if (stringifyResult.error) {\n    logger.error('Problem stringifying payload. Giving up');\n    return callback(stringifyResult.error);\n  }\n  var writeData = stringifyResult.value;\n  options.headers = _headers(accessToken, options, writeData);\n  if (transportFactory) {\n    t = transportFactory(options);\n  } else {\n    t = _transport(options);\n  }\n  if (!t) {\n    logger.error('Unknown transport based on given protocol: ' + options.protocol);\n    return callback(new Error('Unknown transport'));\n  }\n  var req = t.request(options, function(resp) {\n    this.handleResponse(resp, _wrapPostCallback(callback));\n  }.bind(this));\n  req.on('error', function(err) {\n    callback(err);\n  });\n  if (writeData) {\n    req.write(writeData);\n  }\n  req.end();\n}\n\nTransport.prototype.updateRateLimit = function(resp) {\n  var remaining = parseInt(resp.headers['x-rate-limit-remaining'] || 0);\n  var remainingSeconds = Math.min(MAX_RATE_LIMIT_INTERVAL, resp.headers['x-rate-limit-remaining-seconds'] || 0);\n  var currentTime = _currentTime();\n\n  if ((resp.statusCode === 429) && (remaining === 0)) {\n    this.rateLimitExpires = currentTime + remainingSeconds;\n  } else {\n    this.rateLimitExpires = currentTime;\n  }\n}\n\nTransport.prototype.handleResponse = function(resp, callback) {\n  this.updateRateLimit(resp);\n\n  var respData = [];\n  resp.setEncoding('utf8');\n  resp.on('data', function(chunk) {\n    respData.push(chunk);\n  });\n\n  resp.on('end', function() {\n    respData = respData.join('');\n    _parseApiResponse(respData, callback);\n  });\n}\n\n/** Helpers **/\n\nfunction _headers(accessToken, options, data) {\n  var headers = (options && options.headers) || {};\n  headers['Content-Type'] = 'application/json';\n  if (data) {\n    try {\n      headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n    } catch (e) {\n      logger.error('Could not get the content length of the data');\n    }\n  }\n  headers['X-Rollbar-Access-Token'] = accessToken;\n  return headers;\n}\n\nfunction _transport(options) {\n  return {'http:': http, 'https:': https}[options.protocol];\n}\n\nfunction _parseApiResponse(data, callback) {\n  var parsedData = _.jsonParse(data);\n  if (parsedData.error) {\n    logger.error('Could not parse api response, err: ' + parsedData.error);\n    return callback(parsedData.error);\n  }\n  data = parsedData.value;\n\n  if (data.err) {\n    logger.error('Received error: ' + data.message);\n    return callback(new Error('Api error: ' + (data.message || 'Unknown error')));\n  }\n\n  callback(null, data);\n}\n\nfunction _wrapPostCallback(callback) {\n  return function(err, data) {\n    if (err) {\n      return callback(err);\n    }\n    if (data.result && data.result.uuid) {\n      logger.log([\n          'Successful api response.',\n          ' Link: https://rollbar.com/occurrence/uuid/?uuid=' + data.result.uuid\n      ].join(''));\n    } else {\n      logger.log('Successful api response');\n    }\n    callback(null, data.result);\n  }\n}\n\nfunction _currentTime() {\n  return Math.floor(Date.now() / 1000);\n}\n\nmodule.exports = Transport;\n", "var _ = require('./utility');\n\nvar MAX_EVENTS = 100;\n\nfunction Telemeter(options) {\n  this.queue = [];\n  this.options = _.merge(options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n}\n\nTelemeter.prototype.configure = function(options) {\n  var oldOptions = this.options;\n  this.options = _.merge(oldOptions, options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n  var deleteCount = 0;\n  if (this.maxQueueSize > newMaxEvents) {\n    deleteCount = this.maxQueueSize - newMaxEvents;\n  }\n  this.maxQueueSize = newMaxEvents;\n  this.queue.splice(0, deleteCount);\n};\n\nTelemeter.prototype.copyEvents = function() {\n  var events = Array.prototype.slice.call(this.queue, 0);\n  if (_.isFunction(this.options.filterTelemetry)) {\n    try {\n      var i = events.length;\n      while (i--) {\n        if (this.options.filterTelemetry(events[i])) {\n          events.splice(i, 1);\n        }\n      }\n    } catch (e) {\n      this.options.filterTelemetry = null;\n    }\n  }\n  return events;\n};\n\nTelemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {\n  var e = {\n    level: getLevel(type, level),\n    type: type,\n    timestamp_ms: timestamp || _.now(),\n    body: metadata,\n    source: 'client'\n  };\n  if (rollbarUUID) {\n    e.uuid = rollbarUUID;\n  }\n\n  try {\n    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {\n      return false;\n    }\n  } catch (exc) {\n    this.options.filterTelemetry = null;\n  }\n\n  this.push(e);\n  return e;\n};\n\nTelemeter.prototype.captureEvent = function(type, metadata, level, rollbarUUID) {\n  return this.capture(type, metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {\n  var metadata = {\n    message: err.message || String(err)\n  };\n  if (err.stack) {\n    metadata.stack = err.stack;\n  }\n  return this.capture('error', metadata, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {\n  return this.capture('log', {\n    message: message\n  }, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {\n  subtype = subtype || 'xhr';\n  metadata.subtype = metadata.subtype || subtype;\n  if (requestData) {\n    metadata.request = requestData;\n  }\n  var level = this.levelFromStatus(metadata.status_code);\n  return this.capture('network', metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.levelFromStatus = function(statusCode) {\n  if (statusCode >= 200 && statusCode < 400) {\n    return 'info';\n  }\n  if (statusCode === 0 || statusCode >= 400) {\n    return 'error';\n  }\n  return 'info';\n};\n\nTelemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {\n  var metadata = {\n    subtype: subtype,\n    element: element\n  };\n  if (value !== undefined) {\n    metadata.value = value;\n  }\n  if (checked !== undefined) {\n    metadata.checked = checked;\n  }\n  return this.capture('dom', metadata, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {\n  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureDomContentLoaded = function(ts) {\n  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  */\n};\nTelemeter.prototype.captureLoad = function(ts) {\n  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  */\n};\n\nTelemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {\n  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);\n};\n\n// Only intended to be used internally by the notifier\nTelemeter.prototype._captureRollbarItem = function(item) {\n  if (!this.options.includeItemsInTelemetry) {\n    return;\n  }\n  if (item.err) {\n    return this.captureError(item.err, item.level, item.uuid, item.timestamp);\n  }\n  if (item.message) {\n    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);\n  }\n  if (item.custom) {\n    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);\n  }\n};\n\nTelemeter.prototype.push = function(e) {\n  this.queue.push(e);\n  if (this.queue.length > this.maxQueueSize) {\n    this.queue.shift();\n  }\n};\n\nfunction getLevel(type, level) {\n  if (level) {\n    return level;\n  }\n  var defaultLevel = {\n    error: 'error',\n    manual: 'info'\n  };\n  return defaultLevel[type] || 'info';\n}\n\nmodule.exports = Telemeter;\n", "var url = require('url');\nvar { URL } = require('url');\nvar merge = require('../../merge');\n\n// This function replicates the relevant logic in node/lib/http.js as closely\n// as possible in order to produce the same result. Therefore, the code is\n// replicated as is, favoring the closest match to the original code without style changes.\n//\n// The code here is only used to build telemetry metadata and is not used to\n// build actual http requests.\nfunction mergeOptions(input, options, cb) {\n  if (typeof input === 'string') {\n    const urlStr = input;\n    input = urlToHttpOptions(new URL(urlStr));\n  } else if (input && input[url.searchParamsSymbol] &&\n             input[url.searchParamsSymbol][url.searchParamsSymbol]) {\n    // url.URL instance\n    input = urlToHttpOptions(input);\n  } else {\n    cb = options;\n    options = input;\n    input = null;\n  }\n\n  if (typeof options === 'function') {\n    cb = options;\n    options = input || {};\n  } else {\n    options = merge(input || {}, options);\n  }\n  return {options: options, cb: cb};\n}\n\n// This function replicates the relevant logic in node/lib/url.js as closely\n// as possible in order to produce the same result. Therefore, the code is\n// replicated as is, favoring the closest match to the original code without style changes.\n//\n// The code here is only used to build telemetry metadata and is not used to\n// build actual http requests.\nfunction urlToHttpOptions(url) {\n  const options = {\n    protocol: url.protocol,\n    hostname: typeof url.hostname === 'string' &&\n              url.hostname.startsWith('[') ?\n      url.hostname.slice(1, -1) :\n      url.hostname,\n    hash: url.hash,\n    search: url.search,\n    pathname: url.pathname,\n    path: `${url.pathname || ''}${url.search || ''}`,\n    href: url.href\n  };\n  if (url.port !== '') {\n    options.port = Number(url.port);\n  }\n  if (url.username || url.password) {\n    options.auth = `${url.username}:${url.password}`;\n  }\n  return options;\n}\n\nfunction constructUrl(options) {\n  var url = options.protocol || 'http:';\n  url += '//';\n  if (options.auth) {\n    url += `${options.auth}@`;\n  }\n  url += options.hostname || options.host || 'localhost';\n  if (options.port) {\n    url += `:${options.port}`\n  }\n  url += options.path || '/';\n\n  return url;\n}\n\nmodule.exports = {\n  mergeOptions,\n  constructUrl\n};\n", "var http = require('http');\nvar https = require('https');\nvar _ = require('../utility');\nvar urlHelpers = require('./telemetry/urlHelpers');\n\nvar defaults = {\n  network: true,\n  networkResponseHeaders: false,\n  networkRequestHeaders: false,\n  log: true\n};\n\nfunction Instrumenter(options, telemeter, rollbar) {\n  this.options = options;\n  var autoInstrument = options.autoInstrument;\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.merge(defaults, autoInstrument);\n  }\n  this.telemeter = telemeter;\n  this.rollbar = rollbar;\n  this.diagnostic = rollbar.client.notifier.diagnostic;\n  this.replacements = {\n    network: [],\n    log: []\n  };\n}\n\nInstrumenter.prototype.configure = function(options) {\n  this.options = _.merge(this.options, options);\n  var autoInstrument = options.autoInstrument;\n  var oldSettings = _.merge(this.autoInstrument);\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.merge(defaults, autoInstrument);\n  }\n  this.instrument(oldSettings);\n};\n\nInstrumenter.prototype.instrument = function(oldSettings) {\n  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {\n    this.instrumentNetwork();\n  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {\n    this.deinstrumentNetwork();\n  }\n\n  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {\n    this.instrumentConsole();\n  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {\n    this.deinstrumentConsole();\n  }\n};\n\nInstrumenter.prototype.deinstrumentNetwork = function() {\n  restore(this.replacements, 'network');\n};\n\nInstrumenter.prototype.instrumentNetwork = function() {\n  replace(http, 'request', networkRequestWrapper.bind(this), this.replacements, 'network');\n  replace(https, 'request', networkRequestWrapper.bind(this), this.replacements, 'network');\n};\n\nfunction networkRequestWrapper(orig) {\n  var telemeter = this.telemeter;\n  var self = this;\n\n  return function(url, options, cb) {\n    var mergedOptions = urlHelpers.mergeOptions(url, options, cb);\n\n    var metadata = {\n      method: mergedOptions.options.method || 'GET',\n      url: urlHelpers.constructUrl(mergedOptions.options),\n      status_code: null,\n      start_time_ms: _.now(),\n      end_time_ms: null\n    };\n\n    if (self.autoInstrument.networkRequestHeaders) {\n      metadata.request_headers = mergedOptions.options.headers;\n    }\n    telemeter.captureNetwork(metadata, 'http');\n\n    // Call the original method with the original arguments and wrapped callback.\n    var wrappedArgs = Array.from(arguments);\n    var wrappedCallback = responseCallbackWrapper(self.autoInstrument, metadata, mergedOptions.cb);\n    if (mergedOptions.cb) {\n      wrappedArgs.pop();\n    }\n    wrappedArgs.push(wrappedCallback);\n    var req = orig.apply(https, wrappedArgs);\n\n    req.on('error', err => {\n      metadata.status_code = 0;\n      metadata.error = [err.name, err.message].join(': ') ;\n    });\n\n    return req;\n  }\n}\n\nfunction responseCallbackWrapper(options, metadata, callback) {\n  return function (res) {\n    metadata.end_time_ms = _.now();\n    metadata.status_code = res.statusCode;\n    metadata.response = {};\n    if (options.networkResponseHeaders) {\n      metadata.response.headers = res.headers;\n    }\n\n    if (callback) {\n      return callback.apply(undefined, arguments);\n    }\n  }\n}\n\nInstrumenter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID) {\n  return this.telemeter.captureNetwork(metadata, subtype, rollbarUUID);\n};\n\nInstrumenter.prototype.deinstrumentConsole = function() {\n  restore(this.replacements, 'log');\n};\n\nInstrumenter.prototype.instrumentConsole = function() {\n  var telemeter = this.telemeter;\n\n  var stdout = process.stdout;\n  replace(stdout, 'write', function(orig) {\n    return function(string) {\n      telemeter.captureLog(string, 'info');\n      return orig.apply(stdout, arguments);\n    }\n  }, this.replacements, 'log');\n\n  var stderr = process.stderr;\n  replace(stderr, 'write', function(orig) {\n    return function(string) {\n      telemeter.captureLog(string, 'error');\n      return orig.apply(stderr, arguments);\n    }\n  }, this.replacements, 'log');\n};\n\n// TODO: These helpers are duplicated in src/browser/telemetry.js,\n// and may be candidates for extraction into a shared module.\n// It is recommended that before doing so, the author should allow\n// for more telemetry types to be implemented for the Node target\n// to ensure that the implementations of these helpers don't diverge.\n// If they do diverge, there's little point in the shared module.\nfunction replace(obj, name, replacement, replacements, type) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  if (replacements) {\n    replacements[type].push([obj, name, orig]);\n  }\n}\n\nfunction restore(replacements, type) {\n  var b;\n  while (replacements[type].length) {\n    b = replacements[type].shift();\n    b[0][b[1]] = b[2];\n  }\n}\n\nmodule.exports = Instrumenter;\n", "(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.async = {})));\n}(this, (function (exports) { 'use strict';\n\n    /**\n     * Creates a continuation function with some arguments already applied.\n     *\n     * Useful as a shorthand when combined with other control flow functions. Any\n     * arguments passed to the returned function are added to the arguments\n     * originally passed to apply.\n     *\n     * @name apply\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {Function} fn - The function you want to eventually apply all\n     * arguments to. Invokes with (arguments...).\n     * @param {...*} arguments... - Any number of arguments to automatically apply\n     * when the continuation is called.\n     * @returns {Function} the partially-applied function\n     * @example\n     *\n     * // using apply\n     * async.parallel([\n     *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n     *     async.apply(fs.writeFile, 'testfile2', 'test2')\n     * ]);\n     *\n     *\n     * // the same process without using apply\n     * async.parallel([\n     *     function(callback) {\n     *         fs.writeFile('testfile1', 'test1', callback);\n     *     },\n     *     function(callback) {\n     *         fs.writeFile('testfile2', 'test2', callback);\n     *     }\n     * ]);\n     *\n     * // It's possible to pass any number of additional arguments when calling the\n     * // continuation:\n     *\n     * node> var fn = async.apply(sys.puts, 'one');\n     * node> fn('two', 'three');\n     * one\n     * two\n     * three\n     */\n    function apply(fn, ...args) {\n        return (...callArgs) => fn(...args,...callArgs);\n    }\n\n    function initialParams (fn) {\n        return function (...args/*, callback*/) {\n            var callback = args.pop();\n            return fn.call(this, args, callback);\n        };\n    }\n\n    /* istanbul ignore file */\n\n    var hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\n    var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\n    var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\n    function fallback(fn) {\n        setTimeout(fn, 0);\n    }\n\n    function wrap(defer) {\n        return (fn, ...args) => defer(() => fn(...args));\n    }\n\n    var _defer;\n\n    if (hasQueueMicrotask) {\n        _defer = queueMicrotask;\n    } else if (hasSetImmediate) {\n        _defer = setImmediate;\n    } else if (hasNextTick) {\n        _defer = process.nextTick;\n    } else {\n        _defer = fallback;\n    }\n\n    var setImmediate$1 = wrap(_defer);\n\n    /**\n     * Take a sync function and make it async, passing its return value to a\n     * callback. This is useful for plugging sync functions into a waterfall,\n     * series, or other async functions. Any arguments passed to the generated\n     * function will be passed to the wrapped function (except for the final\n     * callback argument). Errors thrown will be passed to the callback.\n     *\n     * If the function passed to `asyncify` returns a Promise, that promises's\n     * resolved/rejected state will be used to call the callback, rather than simply\n     * the synchronous return value.\n     *\n     * This also means you can asyncify ES2017 `async` functions.\n     *\n     * @name asyncify\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @alias wrapSync\n     * @category Util\n     * @param {Function} func - The synchronous function, or Promise-returning\n     * function to convert to an {@link AsyncFunction}.\n     * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n     * invoked with `(args..., callback)`.\n     * @example\n     *\n     * // passing a regular synchronous function\n     * async.waterfall([\n     *     async.apply(fs.readFile, filename, \"utf8\"),\n     *     async.asyncify(JSON.parse),\n     *     function (data, next) {\n     *         // data is the result of parsing the text.\n     *         // If there was a parsing error, it would have been caught.\n     *     }\n     * ], callback);\n     *\n     * // passing a function returning a promise\n     * async.waterfall([\n     *     async.apply(fs.readFile, filename, \"utf8\"),\n     *     async.asyncify(function (contents) {\n     *         return db.model.create(contents);\n     *     }),\n     *     function (model, next) {\n     *         // `model` is the instantiated model object.\n     *         // If there was an error, this function would be skipped.\n     *     }\n     * ], callback);\n     *\n     * // es2017 example, though `asyncify` is not needed if your JS environment\n     * // supports async functions out of the box\n     * var q = async.queue(async.asyncify(async function(file) {\n     *     var intermediateStep = await processFile(file);\n     *     return await somePromise(intermediateStep)\n     * }));\n     *\n     * q.push(files);\n     */\n    function asyncify(func) {\n        if (isAsync(func)) {\n            return function (...args/*, callback*/) {\n                const callback = args.pop();\n                const promise = func.apply(this, args);\n                return handlePromise(promise, callback)\n            }\n        }\n\n        return initialParams(function (args, callback) {\n            var result;\n            try {\n                result = func.apply(this, args);\n            } catch (e) {\n                return callback(e);\n            }\n            // if result is Promise object\n            if (result && typeof result.then === 'function') {\n                return handlePromise(result, callback)\n            } else {\n                callback(null, result);\n            }\n        });\n    }\n\n    function handlePromise(promise, callback) {\n        return promise.then(value => {\n            invokeCallback(callback, null, value);\n        }, err => {\n            invokeCallback(callback, err && err.message ? err : new Error(err));\n        });\n    }\n\n    function invokeCallback(callback, error, value) {\n        try {\n            callback(error, value);\n        } catch (err) {\n            setImmediate$1(e => { throw e }, err);\n        }\n    }\n\n    function isAsync(fn) {\n        return fn[Symbol.toStringTag] === 'AsyncFunction';\n    }\n\n    function isAsyncGenerator(fn) {\n        return fn[Symbol.toStringTag] === 'AsyncGenerator';\n    }\n\n    function isAsyncIterable(obj) {\n        return typeof obj[Symbol.asyncIterator] === 'function';\n    }\n\n    function wrapAsync(asyncFn) {\n        if (typeof asyncFn !== 'function') throw new Error('expected a function')\n        return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n    }\n\n    // conditionally promisify a function.\n    // only return a promise if a callback is omitted\n    function awaitify (asyncFn, arity = asyncFn.length) {\n        if (!arity) throw new Error('arity is undefined')\n        function awaitable (...args) {\n            if (typeof args[arity - 1] === 'function') {\n                return asyncFn.apply(this, args)\n            }\n\n            return new Promise((resolve, reject) => {\n                args[arity - 1] = (err, ...cbArgs) => {\n                    if (err) return reject(err)\n                    resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n                };\n                asyncFn.apply(this, args);\n            })\n        }\n\n        return awaitable\n    }\n\n    function applyEach (eachfn) {\n        return function applyEach(fns, ...callArgs) {\n            const go = awaitify(function (callback) {\n                var that = this;\n                return eachfn(fns, (fn, cb) => {\n                    wrapAsync(fn).apply(that, callArgs.concat(cb));\n                }, callback);\n            });\n            return go;\n        };\n    }\n\n    function _asyncMap(eachfn, arr, iteratee, callback) {\n        arr = arr || [];\n        var results = [];\n        var counter = 0;\n        var _iteratee = wrapAsync(iteratee);\n\n        return eachfn(arr, (value, _, iterCb) => {\n            var index = counter++;\n            _iteratee(value, (err, v) => {\n                results[index] = v;\n                iterCb(err);\n            });\n        }, err => {\n            callback(err, results);\n        });\n    }\n\n    function isArrayLike(value) {\n        return value &&\n            typeof value.length === 'number' &&\n            value.length >= 0 &&\n            value.length % 1 === 0;\n    }\n\n    // A temporary value used to identify if the loop should be broken.\n    // See #1064, #1293\n    const breakLoop = {};\n\n    function once(fn) {\n        function wrapper (...args) {\n            if (fn === null) return;\n            var callFn = fn;\n            fn = null;\n            callFn.apply(this, args);\n        }\n        Object.assign(wrapper, fn);\n        return wrapper\n    }\n\n    function getIterator (coll) {\n        return coll[Symbol.iterator] && coll[Symbol.iterator]();\n    }\n\n    function createArrayIterator(coll) {\n        var i = -1;\n        var len = coll.length;\n        return function next() {\n            return ++i < len ? {value: coll[i], key: i} : null;\n        }\n    }\n\n    function createES2015Iterator(iterator) {\n        var i = -1;\n        return function next() {\n            var item = iterator.next();\n            if (item.done)\n                return null;\n            i++;\n            return {value: item.value, key: i};\n        }\n    }\n\n    function createObjectIterator(obj) {\n        var okeys = obj ? Object.keys(obj) : [];\n        var i = -1;\n        var len = okeys.length;\n        return function next() {\n            var key = okeys[++i];\n            if (key === '__proto__') {\n                return next();\n            }\n            return i < len ? {value: obj[key], key} : null;\n        };\n    }\n\n    function createIterator(coll) {\n        if (isArrayLike(coll)) {\n            return createArrayIterator(coll);\n        }\n\n        var iterator = getIterator(coll);\n        return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n    }\n\n    function onlyOnce(fn) {\n        return function (...args) {\n            if (fn === null) throw new Error(\"Callback was already called.\");\n            var callFn = fn;\n            fn = null;\n            callFn.apply(this, args);\n        };\n    }\n\n    // for async generators\n    function asyncEachOfLimit(generator, limit, iteratee, callback) {\n        let done = false;\n        let canceled = false;\n        let awaiting = false;\n        let running = 0;\n        let idx = 0;\n\n        function replenish() {\n            //console.log('replenish')\n            if (running >= limit || awaiting || done) return\n            //console.log('replenish awaiting')\n            awaiting = true;\n            generator.next().then(({value, done: iterDone}) => {\n                //console.log('got value', value)\n                if (canceled || done) return\n                awaiting = false;\n                if (iterDone) {\n                    done = true;\n                    if (running <= 0) {\n                        //console.log('done nextCb')\n                        callback(null);\n                    }\n                    return;\n                }\n                running++;\n                iteratee(value, idx, iterateeCallback);\n                idx++;\n                replenish();\n            }).catch(handleError);\n        }\n\n        function iterateeCallback(err, result) {\n            //console.log('iterateeCallback')\n            running -= 1;\n            if (canceled) return\n            if (err) return handleError(err)\n\n            if (err === false) {\n                done = true;\n                canceled = true;\n                return\n            }\n\n            if (result === breakLoop || (done && running <= 0)) {\n                done = true;\n                //console.log('done iterCb')\n                return callback(null);\n            }\n            replenish();\n        }\n\n        function handleError(err) {\n            if (canceled) return\n            awaiting = false;\n            done = true;\n            callback(err);\n        }\n\n        replenish();\n    }\n\n    var eachOfLimit = (limit) => {\n        return (obj, iteratee, callback) => {\n            callback = once(callback);\n            if (limit <= 0) {\n                throw new RangeError('concurrency limit cannot be less than 1')\n            }\n            if (!obj) {\n                return callback(null);\n            }\n            if (isAsyncGenerator(obj)) {\n                return asyncEachOfLimit(obj, limit, iteratee, callback)\n            }\n            if (isAsyncIterable(obj)) {\n                return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n            }\n            var nextElem = createIterator(obj);\n            var done = false;\n            var canceled = false;\n            var running = 0;\n            var looping = false;\n\n            function iterateeCallback(err, value) {\n                if (canceled) return\n                running -= 1;\n                if (err) {\n                    done = true;\n                    callback(err);\n                }\n                else if (err === false) {\n                    done = true;\n                    canceled = true;\n                }\n                else if (value === breakLoop || (done && running <= 0)) {\n                    done = true;\n                    return callback(null);\n                }\n                else if (!looping) {\n                    replenish();\n                }\n            }\n\n            function replenish () {\n                looping = true;\n                while (running < limit && !done) {\n                    var elem = nextElem();\n                    if (elem === null) {\n                        done = true;\n                        if (running <= 0) {\n                            callback(null);\n                        }\n                        return;\n                    }\n                    running += 1;\n                    iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n                }\n                looping = false;\n            }\n\n            replenish();\n        };\n    };\n\n    /**\n     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name eachOfLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.eachOf]{@link module:Collections.eachOf}\n     * @alias forEachOfLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each\n     * item in `coll`. The `key` is the item's key, or index in the case of an\n     * array.\n     * Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachOfLimit$1(coll, limit, iteratee, callback) {\n        return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n    }\n\n    var eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n    // eachOf implementation optimized for array-likes\n    function eachOfArrayLike(coll, iteratee, callback) {\n        callback = once(callback);\n        var index = 0,\n            completed = 0,\n            {length} = coll,\n            canceled = false;\n        if (length === 0) {\n            callback(null);\n        }\n\n        function iteratorCallback(err, value) {\n            if (err === false) {\n                canceled = true;\n            }\n            if (canceled === true) return\n            if (err) {\n                callback(err);\n            } else if ((++completed === length) || value === breakLoop) {\n                callback(null);\n            }\n        }\n\n        for (; index < length; index++) {\n            iteratee(coll[index], index, onlyOnce(iteratorCallback));\n        }\n    }\n\n    // a generic version of eachOf which can handle array, object, and iterator cases.\n    function eachOfGeneric (coll, iteratee, callback) {\n        return eachOfLimit$2(coll, Infinity, iteratee, callback);\n    }\n\n    /**\n     * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n     * to the iteratee.\n     *\n     * @name eachOf\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias forEachOf\n     * @category Collection\n     * @see [async.each]{@link module:Collections.each}\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each\n     * item in `coll`.\n     * The `key` is the item's key, or index in the case of an array.\n     * Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     * @example\n     *\n     * // dev.json is a file containing a valid json object config for dev environment\n     * // dev.json is a file containing a valid json object config for test environment\n     * // prod.json is a file containing a valid json object config for prod environment\n     * // invalid.json is a file with a malformed json object\n     *\n     * let configs = {}; //global variable\n     * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n     * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n     *\n     * // asynchronous function that reads a json file and parses the contents as json object\n     * function parseFile(file, key, callback) {\n     *     fs.readFile(file, \"utf8\", function(err, data) {\n     *         if (err) return calback(err);\n     *         try {\n     *             configs[key] = JSON.parse(data);\n     *         } catch (e) {\n     *             return callback(e);\n     *         }\n     *         callback();\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n     *     if (err) {\n     *         console.error(err);\n     *     } else {\n     *         console.log(configs);\n     *         // configs is now a map of JSON data, e.g.\n     *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n     *     }\n     * });\n     *\n     * //Error handing\n     * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n     *     if (err) {\n     *         console.error(err);\n     *         // JSON parse error exception\n     *     } else {\n     *         console.log(configs);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.forEachOf(validConfigFileMap, parseFile)\n     * .then( () => {\n     *     console.log(configs);\n     *     // configs is now a map of JSON data, e.g.\n     *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n     * }).catch( err => {\n     *     console.error(err);\n     * });\n     *\n     * //Error handing\n     * async.forEachOf(invalidConfigFileMap, parseFile)\n     * .then( () => {\n     *     console.log(configs);\n     * }).catch( err => {\n     *     console.error(err);\n     *     // JSON parse error exception\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n     *         console.log(configs);\n     *         // configs is now a map of JSON data, e.g.\n     *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * //Error handing\n     * async () => {\n     *     try {\n     *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n     *         console.log(configs);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // JSON parse error exception\n     *     }\n     * }\n     *\n     */\n    function eachOf(coll, iteratee, callback) {\n        var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n        return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n    }\n\n    var eachOf$1 = awaitify(eachOf, 3);\n\n    /**\n     * Produces a new collection of values by mapping each value in `coll` through\n     * the `iteratee` function. The `iteratee` is called with an item from `coll`\n     * and a callback for when it has finished processing. Each of these callbacks\n     * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n     * `iteratee` passes an error to its callback, the main `callback` (for the\n     * `map` function) is immediately called with the error.\n     *\n     * Note, that since this function applies the `iteratee` to each item in\n     * parallel, there is no guarantee that the `iteratee` functions will complete\n     * in order. However, the results array will be in the same order as the\n     * original `coll`.\n     *\n     * If `map` is passed an Object, the results will be an Array.  The results\n     * will roughly be in the order of the original Objects' keys (but this can\n     * vary across JavaScript engines).\n     *\n     * @name map\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with the transformed item.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an Array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     * // file4.txt does not exist\n     *\n     * const fileList = ['file1.txt','file2.txt','file3.txt'];\n     * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n     *\n     * // asynchronous function that returns the file size in bytes\n     * function getFileSizeInBytes(file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.map(fileList, getFileSizeInBytes, function(err, results) {\n     *     if (err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(results);\n     *         // results is now an array of the file size in bytes for each file, e.g.\n     *         // [ 1000, 2000, 3000]\n     *     }\n     * });\n     *\n     * // Error Handling\n     * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n     *     if (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     } else {\n     *         console.log(results);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.map(fileList, getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     *     // results is now an array of the file size in bytes for each file, e.g.\n     *     // [ 1000, 2000, 3000]\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.map(withMissingFileList, getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.map(fileList, getFileSizeInBytes);\n     *         console.log(results);\n     *         // results is now an array of the file size in bytes for each file, e.g.\n     *         // [ 1000, 2000, 3000]\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n     *         console.log(results);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function map (coll, iteratee, callback) {\n        return _asyncMap(eachOf$1, coll, iteratee, callback)\n    }\n    var map$1 = awaitify(map, 3);\n\n    /**\n     * Applies the provided arguments to each function in the array, calling\n     * `callback` after all functions have completed. If you only provide the first\n     * argument, `fns`, then it will return a function which lets you pass in the\n     * arguments as if it were a single function call. If more arguments are\n     * provided, `callback` is required while `args` is still optional. The results\n     * for each of the applied async functions are passed to the final callback\n     * as an array.\n     *\n     * @name applyEach\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n     * to all call with the same arguments\n     * @param {...*} [args] - any number of separate arguments to pass to the\n     * function.\n     * @param {Function} [callback] - the final argument should be the callback,\n     * called when all functions have completed processing.\n     * @returns {AsyncFunction} - Returns a function that takes no args other than\n     * an optional callback, that is the result of applying the `args` to each\n     * of the functions.\n     * @example\n     *\n     * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n     *\n     * appliedFn((err, results) => {\n     *     // results[0] is the results for `enableSearch`\n     *     // results[1] is the results for `updateSchema`\n     * });\n     *\n     * // partial application example:\n     * async.each(\n     *     buckets,\n     *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n     *     callback\n     * );\n     */\n    var applyEach$1 = applyEach(map$1);\n\n    /**\n     * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n     *\n     * @name eachOfSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.eachOf]{@link module:Collections.eachOf}\n     * @alias forEachOfSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * Invoked with (item, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachOfSeries(coll, iteratee, callback) {\n        return eachOfLimit$2(coll, 1, iteratee, callback)\n    }\n    var eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n    /**\n     * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n     *\n     * @name mapSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with the transformed item.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapSeries (coll, iteratee, callback) {\n        return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var mapSeries$1 = awaitify(mapSeries, 3);\n\n    /**\n     * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n     *\n     * @name applyEachSeries\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n     * call with the same arguments\n     * @param {...*} [args] - any number of separate arguments to pass to the\n     * function.\n     * @param {Function} [callback] - the final argument should be the callback,\n     * called when all functions have completed processing.\n     * @returns {AsyncFunction} - A function, that when called, is the result of\n     * appling the `args` to the list of functions.  It takes no args, other than\n     * a callback.\n     */\n    var applyEachSeries = applyEach(mapSeries$1);\n\n    const PROMISE_SYMBOL = Symbol('promiseCallback');\n\n    function promiseCallback () {\n        let resolve, reject;\n        function callback (err, ...args) {\n            if (err) return reject(err)\n            resolve(args.length > 1 ? args : args[0]);\n        }\n\n        callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n            resolve = res,\n            reject = rej;\n        });\n\n        return callback\n    }\n\n    /**\n     * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n     * their requirements. Each function can optionally depend on other functions\n     * being completed first, and each function is run as soon as its requirements\n     * are satisfied.\n     *\n     * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n     * will stop. Further tasks will not execute (so any other functions depending\n     * on it will not run), and the main `callback` is immediately called with the\n     * error.\n     *\n     * {@link AsyncFunction}s also receive an object containing the results of functions which\n     * have completed so far as the first argument, if they have dependencies. If a\n     * task function has no dependencies, it will only be passed a callback.\n     *\n     * @name auto\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Object} tasks - An object. Each of its properties is either a\n     * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n     * in the array. The object's key of a property serves as the name of the task\n     * defined by that property, i.e. can be used when specifying requirements for\n     * other tasks. The function receives one or two arguments:\n     * * a `results` object, containing the results of the previously executed\n     *   functions, only passed if the task has any dependencies,\n     * * a `callback(err, result)` function, which must be called when finished,\n     *   passing an `error` (which can be `null`) and the result of the function's\n     *   execution.\n     * @param {number} [concurrency=Infinity] - An optional `integer` for\n     * determining the maximum number of tasks that can be run in parallel. By\n     * default, as many as possible.\n     * @param {Function} [callback] - An optional callback which is called when all\n     * the tasks have been completed. It receives the `err` argument if any `tasks`\n     * pass an error to their callback. Results are always returned; however, if an\n     * error occurs, no further `tasks` will be performed, and the results object\n     * will only contain partial results. Invoked with (err, results).\n     * @returns {Promise} a promise, if a callback is not passed\n     * @example\n     *\n     * //Using Callbacks\n     * async.auto({\n     *     get_data: function(callback) {\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: ['get_data', 'make_folder', function(results, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(results, callback) {\n     *         // once the file is written let's email a link to it...\n     *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *     }]\n     * }, function(err, results) {\n     *     if (err) {\n     *         console.log('err = ', err);\n     *     }\n     *     console.log('results = ', results);\n     *     // results = {\n     *     //     get_data: ['data', 'converted to array']\n     *     //     make_folder; 'folder',\n     *     //     write_file: 'filename'\n     *     //     email_link: { file: 'filename', email: 'user@example.com' }\n     *     // }\n     * });\n     *\n     * //Using Promises\n     * async.auto({\n     *     get_data: function(callback) {\n     *         console.log('in get_data');\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         console.log('in make_folder');\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: ['get_data', 'make_folder', function(results, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(results, callback) {\n     *         // once the file is written let's email a link to it...\n     *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *     }]\n     * }).then(results => {\n     *     console.log('results = ', results);\n     *     // results = {\n     *     //     get_data: ['data', 'converted to array']\n     *     //     make_folder; 'folder',\n     *     //     write_file: 'filename'\n     *     //     email_link: { file: 'filename', email: 'user@example.com' }\n     *     // }\n     * }).catch(err => {\n     *     console.log('err = ', err);\n     * });\n     *\n     * //Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.auto({\n     *             get_data: function(callback) {\n     *                 // async code to get some data\n     *                 callback(null, 'data', 'converted to array');\n     *             },\n     *             make_folder: function(callback) {\n     *                 // async code to create a directory to store a file in\n     *                 // this is run at the same time as getting the data\n     *                 callback(null, 'folder');\n     *             },\n     *             write_file: ['get_data', 'make_folder', function(results, callback) {\n     *                 // once there is some data and the directory exists,\n     *                 // write the data to a file in the directory\n     *                 callback(null, 'filename');\n     *             }],\n     *             email_link: ['write_file', function(results, callback) {\n     *                 // once the file is written let's email a link to it...\n     *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n     *             }]\n     *         });\n     *         console.log('results = ', results);\n     *         // results = {\n     *         //     get_data: ['data', 'converted to array']\n     *         //     make_folder; 'folder',\n     *         //     write_file: 'filename'\n     *         //     email_link: { file: 'filename', email: 'user@example.com' }\n     *         // }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function auto(tasks, concurrency, callback) {\n        if (typeof concurrency !== 'number') {\n            // concurrency is optional, shift the args.\n            callback = concurrency;\n            concurrency = null;\n        }\n        callback = once(callback || promiseCallback());\n        var numTasks = Object.keys(tasks).length;\n        if (!numTasks) {\n            return callback(null);\n        }\n        if (!concurrency) {\n            concurrency = numTasks;\n        }\n\n        var results = {};\n        var runningTasks = 0;\n        var canceled = false;\n        var hasError = false;\n\n        var listeners = Object.create(null);\n\n        var readyTasks = [];\n\n        // for cycle detection:\n        var readyToCheck = []; // tasks that have been identified as reachable\n        // without the possibility of returning to an ancestor task\n        var uncheckedDependencies = {};\n\n        Object.keys(tasks).forEach(key => {\n            var task = tasks[key];\n            if (!Array.isArray(task)) {\n                // no dependencies\n                enqueueTask(key, [task]);\n                readyToCheck.push(key);\n                return;\n            }\n\n            var dependencies = task.slice(0, task.length - 1);\n            var remainingDependencies = dependencies.length;\n            if (remainingDependencies === 0) {\n                enqueueTask(key, task);\n                readyToCheck.push(key);\n                return;\n            }\n            uncheckedDependencies[key] = remainingDependencies;\n\n            dependencies.forEach(dependencyName => {\n                if (!tasks[dependencyName]) {\n                    throw new Error('async.auto task `' + key +\n                        '` has a non-existent dependency `' +\n                        dependencyName + '` in ' +\n                        dependencies.join(', '));\n                }\n                addListener(dependencyName, () => {\n                    remainingDependencies--;\n                    if (remainingDependencies === 0) {\n                        enqueueTask(key, task);\n                    }\n                });\n            });\n        });\n\n        checkForDeadlocks();\n        processQueue();\n\n        function enqueueTask(key, task) {\n            readyTasks.push(() => runTask(key, task));\n        }\n\n        function processQueue() {\n            if (canceled) return\n            if (readyTasks.length === 0 && runningTasks === 0) {\n                return callback(null, results);\n            }\n            while(readyTasks.length && runningTasks < concurrency) {\n                var run = readyTasks.shift();\n                run();\n            }\n\n        }\n\n        function addListener(taskName, fn) {\n            var taskListeners = listeners[taskName];\n            if (!taskListeners) {\n                taskListeners = listeners[taskName] = [];\n            }\n\n            taskListeners.push(fn);\n        }\n\n        function taskComplete(taskName) {\n            var taskListeners = listeners[taskName] || [];\n            taskListeners.forEach(fn => fn());\n            processQueue();\n        }\n\n\n        function runTask(key, task) {\n            if (hasError) return;\n\n            var taskCallback = onlyOnce((err, ...result) => {\n                runningTasks--;\n                if (err === false) {\n                    canceled = true;\n                    return\n                }\n                if (result.length < 2) {\n                    [result] = result;\n                }\n                if (err) {\n                    var safeResults = {};\n                    Object.keys(results).forEach(rkey => {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[key] = result;\n                    hasError = true;\n                    listeners = Object.create(null);\n                    if (canceled) return\n                    callback(err, safeResults);\n                } else {\n                    results[key] = result;\n                    taskComplete(key);\n                }\n            });\n\n            runningTasks++;\n            var taskFn = wrapAsync(task[task.length - 1]);\n            if (task.length > 1) {\n                taskFn(results, taskCallback);\n            } else {\n                taskFn(taskCallback);\n            }\n        }\n\n        function checkForDeadlocks() {\n            // Kahn's algorithm\n            // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n            // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n            var currentTask;\n            var counter = 0;\n            while (readyToCheck.length) {\n                currentTask = readyToCheck.pop();\n                counter++;\n                getDependents(currentTask).forEach(dependent => {\n                    if (--uncheckedDependencies[dependent] === 0) {\n                        readyToCheck.push(dependent);\n                    }\n                });\n            }\n\n            if (counter !== numTasks) {\n                throw new Error(\n                    'async.auto cannot execute tasks due to a recursive dependency'\n                );\n            }\n        }\n\n        function getDependents(taskName) {\n            var result = [];\n            Object.keys(tasks).forEach(key => {\n                const task = tasks[key];\n                if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                    result.push(key);\n                }\n            });\n            return result;\n        }\n\n        return callback[PROMISE_SYMBOL]\n    }\n\n    var FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\n    var ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\n    var FN_ARG_SPLIT = /,/;\n    var FN_ARG = /(=.+)?(\\s*)$/;\n\n    function stripComments(string) {\n        let stripped = '';\n        let index = 0;\n        let endBlockComment = string.indexOf('*/');\n        while (index < string.length) {\n            if (string[index] === '/' && string[index+1] === '/') {\n                // inline comment\n                let endIndex = string.indexOf('\\n', index);\n                index = (endIndex === -1) ? string.length : endIndex;\n            } else if ((endBlockComment !== -1) && (string[index] === '/') && (string[index+1] === '*')) {\n                // block comment\n                let endIndex = string.indexOf('*/', index);\n                if (endIndex !== -1) {\n                    index = endIndex + 2;\n                    endBlockComment = string.indexOf('*/', index);\n                } else {\n                    stripped += string[index];\n                    index++;\n                }\n            } else {\n                stripped += string[index];\n                index++;\n            }\n        }\n        return stripped;\n    }\n\n    function parseParams(func) {\n        const src = stripComments(func.toString());\n        let match = src.match(FN_ARGS);\n        if (!match) {\n            match = src.match(ARROW_FN_ARGS);\n        }\n        if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n        let [, args] = match;\n        return args\n            .replace(/\\s/g, '')\n            .split(FN_ARG_SPLIT)\n            .map((arg) => arg.replace(FN_ARG, '').trim());\n    }\n\n    /**\n     * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n     * tasks are specified as parameters to the function, after the usual callback\n     * parameter, with the parameter names matching the names of the tasks it\n     * depends on. This can provide even more readable task graphs which can be\n     * easier to maintain.\n     *\n     * If a final callback is specified, the task results are similarly injected,\n     * specified as named parameters after the initial error parameter.\n     *\n     * The autoInject function is purely syntactic sugar and its semantics are\n     * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n     *\n     * @name autoInject\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.auto]{@link module:ControlFlow.auto}\n     * @category Control Flow\n     * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n     * the form 'func([dependencies...], callback). The object's key of a property\n     * serves as the name of the task defined by that property, i.e. can be used\n     * when specifying requirements for other tasks.\n     * * The `callback` parameter is a `callback(err, result)` which must be called\n     *   when finished, passing an `error` (which can be `null`) and the result of\n     *   the function's execution. The remaining parameters name other tasks on\n     *   which the task is dependent, and the results from those tasks are the\n     *   arguments of those parameters.\n     * @param {Function} [callback] - An optional callback which is called when all\n     * the tasks have been completed. It receives the `err` argument if any `tasks`\n     * pass an error to their callback, and a `results` object with any completed\n     * task results, similar to `auto`.\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * //  The example from `auto` can be rewritten as follows:\n     * async.autoInject({\n     *     get_data: function(callback) {\n     *         // async code to get some data\n     *         callback(null, 'data', 'converted to array');\n     *     },\n     *     make_folder: function(callback) {\n     *         // async code to create a directory to store a file in\n     *         // this is run at the same time as getting the data\n     *         callback(null, 'folder');\n     *     },\n     *     write_file: function(get_data, make_folder, callback) {\n     *         // once there is some data and the directory exists,\n     *         // write the data to a file in the directory\n     *         callback(null, 'filename');\n     *     },\n     *     email_link: function(write_file, callback) {\n     *         // once the file is written let's email a link to it...\n     *         // write_file contains the filename returned by write_file.\n     *         callback(null, {'file':write_file, 'email':'user@example.com'});\n     *     }\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('email_link = ', results.email_link);\n     * });\n     *\n     * // If you are using a JS minifier that mangles parameter names, `autoInject`\n     * // will not work with plain functions, since the parameter names will be\n     * // collapsed to a single letter identifier.  To work around this, you can\n     * // explicitly specify the names of the parameters your task function needs\n     * // in an array, similar to Angular.js dependency injection.\n     *\n     * // This still has an advantage over plain `auto`, since the results a task\n     * // depends on are still spread into arguments.\n     * async.autoInject({\n     *     //...\n     *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n     *         callback(null, 'filename');\n     *     }],\n     *     email_link: ['write_file', function(write_file, callback) {\n     *         callback(null, {'file':write_file, 'email':'user@example.com'});\n     *     }]\n     *     //...\n     * }, function(err, results) {\n     *     console.log('err = ', err);\n     *     console.log('email_link = ', results.email_link);\n     * });\n     */\n    function autoInject(tasks, callback) {\n        var newTasks = {};\n\n        Object.keys(tasks).forEach(key => {\n            var taskFn = tasks[key];\n            var params;\n            var fnIsAsync = isAsync(taskFn);\n            var hasNoDeps =\n                (!fnIsAsync && taskFn.length === 1) ||\n                (fnIsAsync && taskFn.length === 0);\n\n            if (Array.isArray(taskFn)) {\n                params = [...taskFn];\n                taskFn = params.pop();\n\n                newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n            } else if (hasNoDeps) {\n                // no dependencies, use the function as-is\n                newTasks[key] = taskFn;\n            } else {\n                params = parseParams(taskFn);\n                if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                    throw new Error(\"autoInject task functions require explicit parameters.\");\n                }\n\n                // remove callback param\n                if (!fnIsAsync) params.pop();\n\n                newTasks[key] = params.concat(newTask);\n            }\n\n            function newTask(results, taskCb) {\n                var newArgs = params.map(name => results[name]);\n                newArgs.push(taskCb);\n                wrapAsync(taskFn)(...newArgs);\n            }\n        });\n\n        return auto(newTasks, callback);\n    }\n\n    // Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n    // used for queues. This implementation assumes that the node provided by the user can be modified\n    // to adjust the next and last properties. We implement only the minimal functionality\n    // for queue support.\n    class DLL {\n        constructor() {\n            this.head = this.tail = null;\n            this.length = 0;\n        }\n\n        removeLink(node) {\n            if (node.prev) node.prev.next = node.next;\n            else this.head = node.next;\n            if (node.next) node.next.prev = node.prev;\n            else this.tail = node.prev;\n\n            node.prev = node.next = null;\n            this.length -= 1;\n            return node;\n        }\n\n        empty () {\n            while(this.head) this.shift();\n            return this;\n        }\n\n        insertAfter(node, newNode) {\n            newNode.prev = node;\n            newNode.next = node.next;\n            if (node.next) node.next.prev = newNode;\n            else this.tail = newNode;\n            node.next = newNode;\n            this.length += 1;\n        }\n\n        insertBefore(node, newNode) {\n            newNode.prev = node.prev;\n            newNode.next = node;\n            if (node.prev) node.prev.next = newNode;\n            else this.head = newNode;\n            node.prev = newNode;\n            this.length += 1;\n        }\n\n        unshift(node) {\n            if (this.head) this.insertBefore(this.head, node);\n            else setInitial(this, node);\n        }\n\n        push(node) {\n            if (this.tail) this.insertAfter(this.tail, node);\n            else setInitial(this, node);\n        }\n\n        shift() {\n            return this.head && this.removeLink(this.head);\n        }\n\n        pop() {\n            return this.tail && this.removeLink(this.tail);\n        }\n\n        toArray() {\n            return [...this]\n        }\n\n        *[Symbol.iterator] () {\n            var cur = this.head;\n            while (cur) {\n                yield cur.data;\n                cur = cur.next;\n            }\n        }\n\n        remove (testFn) {\n            var curr = this.head;\n            while(curr) {\n                var {next} = curr;\n                if (testFn(curr)) {\n                    this.removeLink(curr);\n                }\n                curr = next;\n            }\n            return this;\n        }\n    }\n\n    function setInitial(dll, node) {\n        dll.length = 1;\n        dll.head = dll.tail = node;\n    }\n\n    function queue(worker, concurrency, payload) {\n        if (concurrency == null) {\n            concurrency = 1;\n        }\n        else if(concurrency === 0) {\n            throw new RangeError('Concurrency must not be zero');\n        }\n\n        var _worker = wrapAsync(worker);\n        var numRunning = 0;\n        var workersList = [];\n        const events = {\n            error: [],\n            drain: [],\n            saturated: [],\n            unsaturated: [],\n            empty: []\n        };\n\n        function on (event, handler) {\n            events[event].push(handler);\n        }\n\n        function once (event, handler) {\n            const handleAndRemove = (...args) => {\n                off(event, handleAndRemove);\n                handler(...args);\n            };\n            events[event].push(handleAndRemove);\n        }\n\n        function off (event, handler) {\n            if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n            if (!handler) return events[event] = []\n            events[event] = events[event].filter(ev => ev !== handler);\n        }\n\n        function trigger (event, ...args) {\n            events[event].forEach(handler => handler(...args));\n        }\n\n        var processingScheduled = false;\n        function _insert(data, insertAtFront, rejectOnError, callback) {\n            if (callback != null && typeof callback !== 'function') {\n                throw new Error('task callback must be a function');\n            }\n            q.started = true;\n\n            var res, rej;\n            function promiseCallback (err, ...args) {\n                // we don't care about the error, let the global error handler\n                // deal with it\n                if (err) return rejectOnError ? rej(err) : res()\n                if (args.length <= 1) return res(args[0])\n                res(args);\n            }\n\n            var item = {\n                data,\n                callback: rejectOnError ?\n                    promiseCallback :\n                    (callback || promiseCallback)\n            };\n\n            if (insertAtFront) {\n                q._tasks.unshift(item);\n            } else {\n                q._tasks.push(item);\n            }\n\n            if (!processingScheduled) {\n                processingScheduled = true;\n                setImmediate$1(() => {\n                    processingScheduled = false;\n                    q.process();\n                });\n            }\n\n            if (rejectOnError || !callback) {\n                return new Promise((resolve, reject) => {\n                    res = resolve;\n                    rej = reject;\n                })\n            }\n        }\n\n        function _createCB(tasks) {\n            return function (err, ...args) {\n                numRunning -= 1;\n\n                for (var i = 0, l = tasks.length; i < l; i++) {\n                    var task = tasks[i];\n\n                    var index = workersList.indexOf(task);\n                    if (index === 0) {\n                        workersList.shift();\n                    } else if (index > 0) {\n                        workersList.splice(index, 1);\n                    }\n\n                    task.callback(err, ...args);\n\n                    if (err != null) {\n                        trigger('error', err, task.data);\n                    }\n                }\n\n                if (numRunning <= (q.concurrency - q.buffer) ) {\n                    trigger('unsaturated');\n                }\n\n                if (q.idle()) {\n                    trigger('drain');\n                }\n                q.process();\n            };\n        }\n\n        function _maybeDrain(data) {\n            if (data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                setImmediate$1(() => trigger('drain'));\n                return true\n            }\n            return false\n        }\n\n        const eventMethod = (name) => (handler) => {\n            if (!handler) {\n                return new Promise((resolve, reject) => {\n                    once(name, (err, data) => {\n                        if (err) return reject(err)\n                        resolve(data);\n                    });\n                })\n            }\n            off(name);\n            on(name, handler);\n\n        };\n\n        var isProcessing = false;\n        var q = {\n            _tasks: new DLL(),\n            *[Symbol.iterator] () {\n                yield* q._tasks[Symbol.iterator]();\n            },\n            concurrency,\n            payload,\n            buffer: concurrency / 4,\n            started: false,\n            paused: false,\n            push (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, false, false, callback))\n                }\n                return _insert(data, false, false, callback);\n            },\n            pushAsync (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, false, true, callback))\n                }\n                return _insert(data, false, true, callback);\n            },\n            kill () {\n                off();\n                q._tasks.empty();\n            },\n            unshift (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, true, false, callback))\n                }\n                return _insert(data, true, false, callback);\n            },\n            unshiftAsync (data, callback) {\n                if (Array.isArray(data)) {\n                    if (_maybeDrain(data)) return\n                    return data.map(datum => _insert(datum, true, true, callback))\n                }\n                return _insert(data, true, true, callback);\n            },\n            remove (testFn) {\n                q._tasks.remove(testFn);\n            },\n            process () {\n                // Avoid trying to start too many processing operations. This can occur\n                // when callbacks resolve synchronously (#1267).\n                if (isProcessing) {\n                    return;\n                }\n                isProcessing = true;\n                while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                    var tasks = [], data = [];\n                    var l = q._tasks.length;\n                    if (q.payload) l = Math.min(l, q.payload);\n                    for (var i = 0; i < l; i++) {\n                        var node = q._tasks.shift();\n                        tasks.push(node);\n                        workersList.push(node);\n                        data.push(node.data);\n                    }\n\n                    numRunning += 1;\n\n                    if (q._tasks.length === 0) {\n                        trigger('empty');\n                    }\n\n                    if (numRunning === q.concurrency) {\n                        trigger('saturated');\n                    }\n\n                    var cb = onlyOnce(_createCB(tasks));\n                    _worker(data, cb);\n                }\n                isProcessing = false;\n            },\n            length () {\n                return q._tasks.length;\n            },\n            running () {\n                return numRunning;\n            },\n            workersList () {\n                return workersList;\n            },\n            idle() {\n                return q._tasks.length + numRunning === 0;\n            },\n            pause () {\n                q.paused = true;\n            },\n            resume () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                setImmediate$1(q.process);\n            }\n        };\n        // define these as fixed properties, so people get useful errors when updating\n        Object.defineProperties(q, {\n            saturated: {\n                writable: false,\n                value: eventMethod('saturated')\n            },\n            unsaturated: {\n                writable: false,\n                value: eventMethod('unsaturated')\n            },\n            empty: {\n                writable: false,\n                value: eventMethod('empty')\n            },\n            drain: {\n                writable: false,\n                value: eventMethod('drain')\n            },\n            error: {\n                writable: false,\n                value: eventMethod('error')\n            },\n        });\n        return q;\n    }\n\n    /**\n     * Creates a `cargo` object with the specified payload. Tasks added to the\n     * cargo will be processed altogether (up to the `payload` limit). If the\n     * `worker` is in progress, the task is queued until it becomes available. Once\n     * the `worker` has completed some tasks, each callback of those tasks is\n     * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n     * for how `cargo` and `queue` work.\n     *\n     * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n     * at a time, cargo passes an array of tasks to a single worker, repeating\n     * when the worker is finished.\n     *\n     * @name cargo\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An asynchronous function for processing an array\n     * of queued tasks. Invoked with `(tasks, callback)`.\n     * @param {number} [payload=Infinity] - An optional `integer` for determining\n     * how many tasks should be processed per round; if omitted, the default is\n     * unlimited.\n     * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the cargo and inner queue.\n     * @example\n     *\n     * // create a cargo object with payload 2\n     * var cargo = async.cargo(function(tasks, callback) {\n     *     for (var i=0; i<tasks.length; i++) {\n     *         console.log('hello ' + tasks[i].name);\n     *     }\n     *     callback();\n     * }, 2);\n     *\n     * // add some items\n     * cargo.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * cargo.push({name: 'bar'}, function(err) {\n     *     console.log('finished processing bar');\n     * });\n     * await cargo.push({name: 'baz'});\n     * console.log('finished processing baz');\n     */\n    function cargo(worker, payload) {\n        return queue(worker, 1, payload);\n    }\n\n    /**\n     * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n     * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n     * If the all `workers` are in progress, the task is queued until one becomes available. Once\n     * a `worker` has completed some tasks, each callback of those tasks is\n     * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n     * for how `cargo` and `queue` work.\n     *\n     * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n     * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n     * the cargoQueue passes an array of tasks to multiple parallel workers.\n     *\n     * @name cargoQueue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @see [async.cargo]{@link module:ControlFLow.cargo}\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An asynchronous function for processing an array\n     * of queued tasks. Invoked with `(tasks, callback)`.\n     * @param {number} [concurrency=1] - An `integer` for determining how many\n     * `worker` functions should be run in parallel.  If omitted, the concurrency\n     * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n     * @param {number} [payload=Infinity] - An optional `integer` for determining\n     * how many tasks should be processed per round; if omitted, the default is\n     * unlimited.\n     * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the cargoQueue and inner queue.\n     * @example\n     *\n     * // create a cargoQueue object with payload 2 and concurrency 2\n     * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n     *     for (var i=0; i<tasks.length; i++) {\n     *         console.log('hello ' + tasks[i].name);\n     *     }\n     *     callback();\n     * }, 2, 2);\n     *\n     * // add some items\n     * cargoQueue.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * cargoQueue.push({name: 'bar'}, function(err) {\n     *     console.log('finished processing bar');\n     * });\n     * cargoQueue.push({name: 'baz'}, function(err) {\n     *     console.log('finished processing baz');\n     * });\n     * cargoQueue.push({name: 'boo'}, function(err) {\n     *     console.log('finished processing boo');\n     * });\n     */\n    function cargo$1(worker, concurrency, payload) {\n        return queue(worker, concurrency, payload);\n    }\n\n    /**\n     * Reduces `coll` into a single value using an async `iteratee` to return each\n     * successive step. `memo` is the initial state of the reduction. This function\n     * only operates in series.\n     *\n     * For performance reasons, it may make sense to split a call to this function\n     * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n     * results. This function is for situations where each step in the reduction\n     * needs to be async; if you can get the data before reducing it, then it's\n     * probably a good idea to do so.\n     *\n     * @name reduce\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias inject\n     * @alias foldl\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {*} memo - The initial state of the reduction.\n     * @param {AsyncFunction} iteratee - A function applied to each item in the\n     * array to produce the next step in the reduction.\n     * The `iteratee` should complete with the next state of the reduction.\n     * If the iteratee completes with an error, the reduction is stopped and the\n     * main `callback` is immediately called with the error.\n     * Invoked with (memo, item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the reduced value. Invoked with\n     * (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     * // file4.txt does not exist\n     *\n     * const fileList = ['file1.txt','file2.txt','file3.txt'];\n     * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n     *\n     * // asynchronous function that computes the file size in bytes\n     * // file size is added to the memoized value, then returned\n     * function getFileSizeInBytes(memo, file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, memo + stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // 6000\n     *         // which is the sum of the file sizes of the three files\n     *     }\n     * });\n     *\n     * // Error Handling\n     * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     } else {\n     *         console.log(result);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.reduce(fileList, 0, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     *     // 6000\n     *     // which is the sum of the file sizes of the three files\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n     *         console.log(result);\n     *         // 6000\n     *         // which is the sum of the file sizes of the three files\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n     *         console.log(result);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function reduce(coll, memo, iteratee, callback) {\n        callback = once(callback);\n        var _iteratee = wrapAsync(iteratee);\n        return eachOfSeries$1(coll, (x, i, iterCb) => {\n            _iteratee(memo, x, (err, v) => {\n                memo = v;\n                iterCb(err);\n            });\n        }, err => callback(err, memo));\n    }\n    var reduce$1 = awaitify(reduce, 4);\n\n    /**\n     * Version of the compose function that is more natural to read. Each function\n     * consumes the return value of the previous function. It is the equivalent of\n     * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n     *\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @name seq\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.compose]{@link module:ControlFlow.compose}\n     * @category Control Flow\n     * @param {...AsyncFunction} functions - the asynchronous functions to compose\n     * @returns {Function} a function that composes the `functions` in order\n     * @example\n     *\n     * // Requires lodash (or underscore), express3 and dresende's orm2.\n     * // Part of an app, that fetches cats of the logged user.\n     * // This example uses `seq` function to avoid overnesting and error\n     * // handling clutter.\n     * app.get('/cats', function(request, response) {\n     *     var User = request.models.User;\n     *     async.seq(\n     *         User.get.bind(User),  // 'User.get' has signature (id, callback(err, data))\n     *         function(user, fn) {\n     *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n     *         }\n     *     )(req.session.user_id, function (err, cats) {\n     *         if (err) {\n     *             console.error(err);\n     *             response.json({ status: 'error', message: err.message });\n     *         } else {\n     *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n     *         }\n     *     });\n     * });\n     */\n    function seq(...functions) {\n        var _functions = functions.map(wrapAsync);\n        return function (...args) {\n            var that = this;\n\n            var cb = args[args.length - 1];\n            if (typeof cb == 'function') {\n                args.pop();\n            } else {\n                cb = promiseCallback();\n            }\n\n            reduce$1(_functions, args, (newargs, fn, iterCb) => {\n                fn.apply(that, newargs.concat((err, ...nextargs) => {\n                    iterCb(err, nextargs);\n                }));\n            },\n            (err, results) => cb(err, ...results));\n\n            return cb[PROMISE_SYMBOL]\n        };\n    }\n\n    /**\n     * Creates a function which is a composition of the passed asynchronous\n     * functions. Each function consumes the return value of the function that\n     * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n     * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n     *\n     * If the last argument to the composed function is not a function, a promise\n     * is returned when you call it.\n     *\n     * Each function is executed with the `this` binding of the composed function.\n     *\n     * @name compose\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {...AsyncFunction} functions - the asynchronous functions to compose\n     * @returns {Function} an asynchronous function that is the composed\n     * asynchronous `functions`\n     * @example\n     *\n     * function add1(n, callback) {\n     *     setTimeout(function () {\n     *         callback(null, n + 1);\n     *     }, 10);\n     * }\n     *\n     * function mul3(n, callback) {\n     *     setTimeout(function () {\n     *         callback(null, n * 3);\n     *     }, 10);\n     * }\n     *\n     * var add1mul3 = async.compose(mul3, add1);\n     * add1mul3(4, function (err, result) {\n     *     // result now equals 15\n     * });\n     */\n    function compose(...args) {\n        return seq(...args.reverse());\n    }\n\n    /**\n     * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name mapLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with the transformed item.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Results is an array of the\n     * transformed items from the `coll`. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapLimit (coll, limit, iteratee, callback) {\n        return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var mapLimit$1 = awaitify(mapLimit, 4);\n\n    /**\n     * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name concatLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.concat]{@link module:Collections.concat}\n     * @category Collection\n     * @alias flatMapLimit\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n     * which should use an array as its result. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @returns A Promise, if no callback is passed\n     */\n    function concatLimit(coll, limit, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return mapLimit$1(coll, limit, (val, iterCb) => {\n            _iteratee(val, (err, ...args) => {\n                if (err) return iterCb(err);\n                return iterCb(err, args);\n            });\n        }, (err, mapResults) => {\n            var result = [];\n            for (var i = 0; i < mapResults.length; i++) {\n                if (mapResults[i]) {\n                    result = result.concat(...mapResults[i]);\n                }\n            }\n\n            return callback(err, result);\n        });\n    }\n    var concatLimit$1 = awaitify(concatLimit, 4);\n\n    /**\n     * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n     * the concatenated list. The `iteratee`s are called in parallel, and the\n     * results are concatenated as they return. The results array will be returned in\n     * the original order of `coll` passed to the `iteratee` function.\n     *\n     * @name concat\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @alias flatMap\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n     * which should use an array as its result. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @returns A Promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * let directoryList = ['dir1','dir2','dir3'];\n     * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n     *\n     * // Using callbacks\n     * async.concat(directoryList, fs.readdir, function(err, results) {\n     *    if (err) {\n     *        console.log(err);\n     *    } else {\n     *        console.log(results);\n     *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n     *    }\n     * });\n     *\n     * // Error Handling\n     * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n     *    if (err) {\n     *        console.log(err);\n     *        // [ Error: ENOENT: no such file or directory ]\n     *        // since dir4 does not exist\n     *    } else {\n     *        console.log(results);\n     *    }\n     * });\n     *\n     * // Using Promises\n     * async.concat(directoryList, fs.readdir)\n     * .then(results => {\n     *     console.log(results);\n     *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n     * }).catch(err => {\n     *      console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.concat(withMissingDirectoryList, fs.readdir)\n     * .then(results => {\n     *     console.log(results);\n     * }).catch(err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     *     // since dir4 does not exist\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.concat(directoryList, fs.readdir);\n     *         console.log(results);\n     *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n     *     } catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n     *         console.log(results);\n     *     } catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *         // since dir4 does not exist\n     *     }\n     * }\n     *\n     */\n    function concat(coll, iteratee, callback) {\n        return concatLimit$1(coll, Infinity, iteratee, callback)\n    }\n    var concat$1 = awaitify(concat, 3);\n\n    /**\n     * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n     *\n     * @name concatSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.concat]{@link module:Collections.concat}\n     * @category Collection\n     * @alias flatMapSeries\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n     * The iteratee should complete with an array an array of results.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is an array\n     * containing the concatenated results of the `iteratee` function. Invoked with\n     * (err, results).\n     * @returns A Promise, if no callback is passed\n     */\n    function concatSeries(coll, iteratee, callback) {\n        return concatLimit$1(coll, 1, iteratee, callback)\n    }\n    var concatSeries$1 = awaitify(concatSeries, 3);\n\n    /**\n     * Returns a function that when called, calls-back with the values provided.\n     * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n     * [`auto`]{@link module:ControlFlow.auto}.\n     *\n     * @name constant\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {...*} arguments... - Any number of arguments to automatically invoke\n     * callback with.\n     * @returns {AsyncFunction} Returns a function that when invoked, automatically\n     * invokes the callback with the previous given arguments.\n     * @example\n     *\n     * async.waterfall([\n     *     async.constant(42),\n     *     function (value, next) {\n     *         // value === 42\n     *     },\n     *     //...\n     * ], callback);\n     *\n     * async.waterfall([\n     *     async.constant(filename, \"utf8\"),\n     *     fs.readFile,\n     *     function (fileData, next) {\n     *         //...\n     *     }\n     *     //...\n     * ], callback);\n     *\n     * async.auto({\n     *     hostname: async.constant(\"https://server.net/\"),\n     *     port: findFreePort,\n     *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n     *         startServer(options, cb);\n     *     }],\n     *     //...\n     * }, callback);\n     */\n    function constant(...args) {\n        return function (...ignoredArgs/*, callback*/) {\n            var callback = ignoredArgs.pop();\n            return callback(null, ...args);\n        };\n    }\n\n    function _createTester(check, getResult) {\n        return (eachfn, arr, _iteratee, cb) => {\n            var testPassed = false;\n            var testResult;\n            const iteratee = wrapAsync(_iteratee);\n            eachfn(arr, (value, _, callback) => {\n                iteratee(value, (err, result) => {\n                    if (err || err === false) return callback(err);\n\n                    if (check(result) && !testResult) {\n                        testPassed = true;\n                        testResult = getResult(true, value);\n                        return callback(null, breakLoop);\n                    }\n                    callback();\n                });\n            }, err => {\n                if (err) return cb(err);\n                cb(null, testPassed ? testResult : getResult(false));\n            });\n        };\n    }\n\n    /**\n     * Returns the first value in `coll` that passes an async truth test. The\n     * `iteratee` is applied in parallel, meaning the first iteratee to return\n     * `true` will fire the detect `callback` with that result. That means the\n     * result might not be the first item in the original `coll` (in terms of order)\n     * that passes the test.\n\n     * If order within the original `coll` is important, then look at\n     * [`detectSeries`]{@link module:Collections.detectSeries}.\n     *\n     * @name detect\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias find\n     * @category Collections\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee must complete with a boolean value as its result.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @returns A Promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n     *    function(err, result) {\n     *        console.log(result);\n     *        // dir1/file1.txt\n     *        // result now equals the first file in the list that exists\n     *    }\n     *);\n     *\n     * // Using Promises\n     * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n     * .then(result => {\n     *     console.log(result);\n     *     // dir1/file1.txt\n     *     // result now equals the first file in the list that exists\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n     *         console.log(result);\n     *         // dir1/file1.txt\n     *         // result now equals the file in the list that exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function detect(coll, iteratee, callback) {\n        return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n    }\n    var detect$1 = awaitify(detect, 3);\n\n    /**\n     * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name detectLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.detect]{@link module:Collections.detect}\n     * @alias findLimit\n     * @category Collections\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee must complete with a boolean value as its result.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @returns a Promise if no callback is passed\n     */\n    function detectLimit(coll, limit, iteratee, callback) {\n        return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var detectLimit$1 = awaitify(detectLimit, 4);\n\n    /**\n     * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n     *\n     * @name detectSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.detect]{@link module:Collections.detect}\n     * @alias findSeries\n     * @category Collections\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n     * The iteratee must complete with a boolean value as its result.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the `iteratee` functions have finished.\n     * Result will be the first item in the array that passes the truth test\n     * (iteratee) or the value `undefined` if none passed. Invoked with\n     * (err, result).\n     * @returns a Promise if no callback is passed\n     */\n    function detectSeries(coll, iteratee, callback) {\n        return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n    }\n\n    var detectSeries$1 = awaitify(detectSeries, 3);\n\n    function consoleFunc(name) {\n        return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n            /* istanbul ignore else */\n            if (typeof console === 'object') {\n                /* istanbul ignore else */\n                if (err) {\n                    /* istanbul ignore else */\n                    if (console.error) {\n                        console.error(err);\n                    }\n                } else if (console[name]) { /* istanbul ignore else */\n                    resultArgs.forEach(x => console[name](x));\n                }\n            }\n        })\n    }\n\n    /**\n     * Logs the result of an [`async` function]{@link AsyncFunction} to the\n     * `console` using `console.dir` to display the properties of the resulting object.\n     * Only works in Node.js or in browsers that support `console.dir` and\n     * `console.error` (such as FF and Chrome).\n     * If multiple arguments are returned from the async function,\n     * `console.dir` is called on each argument in order.\n     *\n     * @name dir\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} function - The function you want to eventually apply\n     * all arguments to.\n     * @param {...*} arguments... - Any number of arguments to apply to the function.\n     * @example\n     *\n     * // in a module\n     * var hello = function(name, callback) {\n     *     setTimeout(function() {\n     *         callback(null, {hello: name});\n     *     }, 1000);\n     * };\n     *\n     * // in the node repl\n     * node> async.dir(hello, 'world');\n     * {hello: 'world'}\n     */\n    var dir = consoleFunc('dir');\n\n    /**\n     * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n     * the order of operations, the arguments `test` and `iteratee` are switched.\n     *\n     * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n     *\n     * @name doWhilst\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {AsyncFunction} iteratee - A function which is called each time `test`\n     * passes. Invoked with (callback).\n     * @param {AsyncFunction} test - asynchronous truth test to perform after each\n     * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n     * non-error args from the previous callback of `iteratee`.\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `iteratee` has stopped.\n     * `callback` will be passed an error and any arguments passed to the final\n     * `iteratee`'s callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function doWhilst(iteratee, test, callback) {\n        callback = onlyOnce(callback);\n        var _fn = wrapAsync(iteratee);\n        var _test = wrapAsync(test);\n        var results;\n\n        function next(err, ...args) {\n            if (err) return callback(err);\n            if (err === false) return;\n            results = args;\n            _test(...args, check);\n        }\n\n        function check(err, truth) {\n            if (err) return callback(err);\n            if (err === false) return;\n            if (!truth) return callback(null, ...results);\n            _fn(next);\n        }\n\n        return check(null, true);\n    }\n\n    var doWhilst$1 = awaitify(doWhilst, 3);\n\n    /**\n     * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n     * argument ordering differs from `until`.\n     *\n     * @name doUntil\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n     * @category Control Flow\n     * @param {AsyncFunction} iteratee - An async function which is called each time\n     * `test` fails. Invoked with (callback).\n     * @param {AsyncFunction} test - asynchronous truth test to perform after each\n     * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n     * non-error args from the previous callback of `iteratee`\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has passed and repeated execution of `iteratee` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `iteratee`'s\n     * callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function doUntil(iteratee, test, callback) {\n        const _test = wrapAsync(test);\n        return doWhilst$1(iteratee, (...args) => {\n            const cb = args.pop();\n            _test(...args, (err, truth) => cb (err, !truth));\n        }, callback);\n    }\n\n    function _withoutIndex(iteratee) {\n        return (value, index, callback) => iteratee(value, callback);\n    }\n\n    /**\n     * Applies the function `iteratee` to each item in `coll`, in parallel.\n     * The `iteratee` is called with an item from the list, and a callback for when\n     * it has finished. If the `iteratee` passes an error to its `callback`, the\n     * main `callback` (for the `each` function) is immediately called with the\n     * error.\n     *\n     * Note, that since this function applies `iteratee` to each item in parallel,\n     * there is no guarantee that the iteratee functions will complete in order.\n     *\n     * @name each\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias forEach\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to\n     * each item in `coll`. Invoked with (item, callback).\n     * The array index is not passed to the iteratee.\n     * If you need the index, use `eachOf`.\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n     * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n     *\n     * // asynchronous function that deletes a file\n     * const deleteFile = function(file, callback) {\n     *     fs.unlink(file, callback);\n     * };\n     *\n     * // Using callbacks\n     * async.each(fileList, deleteFile, function(err) {\n     *     if( err ) {\n     *         console.log(err);\n     *     } else {\n     *         console.log('All files have been deleted successfully');\n     *     }\n     * });\n     *\n     * // Error Handling\n     * async.each(withMissingFileList, deleteFile, function(err){\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     *     // since dir4/file2.txt does not exist\n     *     // dir1/file1.txt could have been deleted\n     * });\n     *\n     * // Using Promises\n     * async.each(fileList, deleteFile)\n     * .then( () => {\n     *     console.log('All files have been deleted successfully');\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.each(fileList, deleteFile)\n     * .then( () => {\n     *     console.log('All files have been deleted successfully');\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     *     // since dir4/file2.txt does not exist\n     *     // dir1/file1.txt could have been deleted\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         await async.each(files, deleteFile);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         await async.each(withMissingFileList, deleteFile);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *         // since dir4/file2.txt does not exist\n     *         // dir1/file1.txt could have been deleted\n     *     }\n     * }\n     *\n     */\n    function eachLimit(coll, iteratee, callback) {\n        return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n    }\n\n    var each = awaitify(eachLimit, 3);\n\n    /**\n     * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name eachLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.each]{@link module:Collections.each}\n     * @alias forEachLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The array index is not passed to the iteratee.\n     * If you need the index, use `eachOfLimit`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachLimit$1(coll, limit, iteratee, callback) {\n        return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n    }\n    var eachLimit$2 = awaitify(eachLimit$1, 4);\n\n    /**\n     * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n     *\n     * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n     * in series and therefore the iteratee functions will complete in order.\n\n     * @name eachSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.each]{@link module:Collections.each}\n     * @alias forEachSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each\n     * item in `coll`.\n     * The array index is not passed to the iteratee.\n     * If you need the index, use `eachOfSeries`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called when all\n     * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n     * @returns {Promise} a promise, if a callback is omitted\n     */\n    function eachSeries(coll, iteratee, callback) {\n        return eachLimit$2(coll, 1, iteratee, callback)\n    }\n    var eachSeries$1 = awaitify(eachSeries, 3);\n\n    /**\n     * Wrap an async function and ensure it calls its callback on a later tick of\n     * the event loop.  If the function already calls its callback on a next tick,\n     * no extra deferral is added. This is useful for preventing stack overflows\n     * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n     * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n     * contained. ES2017 `async` functions are returned as-is -- they are immune\n     * to Zalgo's corrupting influences, as they always resolve on a later tick.\n     *\n     * @name ensureAsync\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} fn - an async function, one that expects a node-style\n     * callback as its last argument.\n     * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n     * signature as the function passed in.\n     * @example\n     *\n     * function sometimesAsync(arg, callback) {\n     *     if (cache[arg]) {\n     *         return callback(null, cache[arg]); // this would be synchronous!!\n     *     } else {\n     *         doSomeIO(arg, callback); // this IO would be asynchronous\n     *     }\n     * }\n     *\n     * // this has a risk of stack overflows if many results are cached in a row\n     * async.mapSeries(args, sometimesAsync, done);\n     *\n     * // this will defer sometimesAsync's callback if necessary,\n     * // preventing stack overflows\n     * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n     */\n    function ensureAsync(fn) {\n        if (isAsync(fn)) return fn;\n        return function (...args/*, callback*/) {\n            var callback = args.pop();\n            var sync = true;\n            args.push((...innerArgs) => {\n                if (sync) {\n                    setImmediate$1(() => callback(...innerArgs));\n                } else {\n                    callback(...innerArgs);\n                }\n            });\n            fn.apply(this, args);\n            sync = false;\n        };\n    }\n\n    /**\n     * Returns `true` if every element in `coll` satisfies an async test. If any\n     * iteratee call returns `false`, the main `callback` is immediately called.\n     *\n     * @name every\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias all\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collection in parallel.\n     * The iteratee must complete with a boolean result value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n     * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.every(fileList, fileExists, function(err, result) {\n     *     console.log(result);\n     *     // true\n     *     // result is true since every file exists\n     * });\n     *\n     * async.every(withMissingFileList, fileExists, function(err, result) {\n     *     console.log(result);\n     *     // false\n     *     // result is false since NOT every file exists\n     * });\n     *\n     * // Using Promises\n     * async.every(fileList, fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // true\n     *     // result is true since every file exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * async.every(withMissingFileList, fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // false\n     *     // result is false since NOT every file exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.every(fileList, fileExists);\n     *         console.log(result);\n     *         // true\n     *         // result is true since every file exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * async () => {\n     *     try {\n     *         let result = await async.every(withMissingFileList, fileExists);\n     *         console.log(result);\n     *         // false\n     *         // result is false since NOT every file exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function every(coll, iteratee, callback) {\n        return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n    }\n    var every$1 = awaitify(every, 3);\n\n    /**\n     * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name everyLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.every]{@link module:Collections.every}\n     * @alias allLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collection in parallel.\n     * The iteratee must complete with a boolean result value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function everyLimit(coll, limit, iteratee, callback) {\n        return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var everyLimit$1 = awaitify(everyLimit, 4);\n\n    /**\n     * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n     *\n     * @name everySeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.every]{@link module:Collections.every}\n     * @alias allSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collection in series.\n     * The iteratee must complete with a boolean result value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result will be either `true` or `false`\n     * depending on the values of the async tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function everySeries(coll, iteratee, callback) {\n        return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var everySeries$1 = awaitify(everySeries, 3);\n\n    function filterArray(eachfn, arr, iteratee, callback) {\n        var truthValues = new Array(arr.length);\n        eachfn(arr, (x, index, iterCb) => {\n            iteratee(x, (err, v) => {\n                truthValues[index] = !!v;\n                iterCb(err);\n            });\n        }, err => {\n            if (err) return callback(err);\n            var results = [];\n            for (var i = 0; i < arr.length; i++) {\n                if (truthValues[i]) results.push(arr[i]);\n            }\n            callback(null, results);\n        });\n    }\n\n    function filterGeneric(eachfn, coll, iteratee, callback) {\n        var results = [];\n        eachfn(coll, (x, index, iterCb) => {\n            iteratee(x, (err, v) => {\n                if (err) return iterCb(err);\n                if (v) {\n                    results.push({index, value: x});\n                }\n                iterCb(err);\n            });\n        }, err => {\n            if (err) return callback(err);\n            callback(null, results\n                .sort((a, b) => a.index - b.index)\n                .map(v => v.value));\n        });\n    }\n\n    function _filter(eachfn, coll, iteratee, callback) {\n        var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n        return filter(eachfn, coll, wrapAsync(iteratee), callback);\n    }\n\n    /**\n     * Returns a new array of all the values in `coll` which pass an async truth\n     * test. This operation is performed in parallel, but the results array will be\n     * in the same order as the original.\n     *\n     * @name filter\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias select\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     *\n     * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.filter(files, fileExists, function(err, results) {\n     *    if(err) {\n     *        console.log(err);\n     *    } else {\n     *        console.log(results);\n     *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n     *        // results is now an array of the existing files\n     *    }\n     * });\n     *\n     * // Using Promises\n     * async.filter(files, fileExists)\n     * .then(results => {\n     *     console.log(results);\n     *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n     *     // results is now an array of the existing files\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.filter(files, fileExists);\n     *         console.log(results);\n     *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n     *         // results is now an array of the existing files\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function filter (coll, iteratee, callback) {\n        return _filter(eachOf$1, coll, iteratee, callback)\n    }\n    var filter$1 = awaitify(filter, 3);\n\n    /**\n     * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name filterLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @alias selectLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function filterLimit (coll, limit, iteratee, callback) {\n        return _filter(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var filterLimit$1 = awaitify(filterLimit, 4);\n\n    /**\n     * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n     *\n     * @name filterSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @alias selectSeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n     * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n     * with a boolean argument once it has completed. Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results)\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function filterSeries (coll, iteratee, callback) {\n        return _filter(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var filterSeries$1 = awaitify(filterSeries, 3);\n\n    /**\n     * Calls the asynchronous function `fn` with a callback parameter that allows it\n     * to call itself again, in series, indefinitely.\n\n     * If an error is passed to the callback then `errback` is called with the\n     * error, and execution stops, otherwise it will never be called.\n     *\n     * @name forever\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {AsyncFunction} fn - an async function to call repeatedly.\n     * Invoked with (next).\n     * @param {Function} [errback] - when `fn` passes an error to it's callback,\n     * this function will be called, and execution stops. Invoked with (err).\n     * @returns {Promise} a promise that rejects if an error occurs and an errback\n     * is not passed\n     * @example\n     *\n     * async.forever(\n     *     function(next) {\n     *         // next is suitable for passing to things that need a callback(err [, whatever]);\n     *         // it will result in this function being called again.\n     *     },\n     *     function(err) {\n     *         // if next is called with a value in its first parameter, it will appear\n     *         // in here as 'err', and execution will stop.\n     *     }\n     * );\n     */\n    function forever(fn, errback) {\n        var done = onlyOnce(errback);\n        var task = wrapAsync(ensureAsync(fn));\n\n        function next(err) {\n            if (err) return done(err);\n            if (err === false) return;\n            task(next);\n        }\n        return next();\n    }\n    var forever$1 = awaitify(forever, 2);\n\n    /**\n     * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name groupByLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.groupBy]{@link module:Collections.groupBy}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a `key` to group the value under.\n     * Invoked with (value, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an `Object` whoses\n     * properties are arrays of values which returned the corresponding key.\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function groupByLimit(coll, limit, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return mapLimit$1(coll, limit, (val, iterCb) => {\n            _iteratee(val, (err, key) => {\n                if (err) return iterCb(err);\n                return iterCb(err, {key, val});\n            });\n        }, (err, mapResults) => {\n            var result = {};\n            // from MDN, handle object having an `hasOwnProperty` prop\n            var {hasOwnProperty} = Object.prototype;\n\n            for (var i = 0; i < mapResults.length; i++) {\n                if (mapResults[i]) {\n                    var {key} = mapResults[i];\n                    var {val} = mapResults[i];\n\n                    if (hasOwnProperty.call(result, key)) {\n                        result[key].push(val);\n                    } else {\n                        result[key] = [val];\n                    }\n                }\n            }\n\n            return callback(err, result);\n        });\n    }\n\n    var groupByLimit$1 = awaitify(groupByLimit, 4);\n\n    /**\n     * Returns a new object, where each value corresponds to an array of items, from\n     * `coll`, that returned the corresponding key. That is, the keys of the object\n     * correspond to the values passed to the `iteratee` callback.\n     *\n     * Note: Since this function applies the `iteratee` to each item in parallel,\n     * there is no guarantee that the `iteratee` functions will complete in order.\n     * However, the values for each key in the `result` will be in the same order as\n     * the original `coll`. For Objects, the values will roughly be in the order of\n     * the original Objects' keys (but this can vary across JavaScript engines).\n     *\n     * @name groupBy\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a `key` to group the value under.\n     * Invoked with (value, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an `Object` whoses\n     * properties are arrays of values which returned the corresponding key.\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * const files = ['dir1/file1.txt','dir2','dir4']\n     *\n     * // asynchronous function that detects file type as none, file, or directory\n     * function detectFile(file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(null, 'none');\n     *         }\n     *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n     *     });\n     * }\n     *\n     * //Using callbacks\n     * async.groupBy(files, detectFile, function(err, result) {\n     *     if(err) {\n     *         console.log(err);\n     *     } else {\n     *\t       console.log(result);\n     *         // {\n     *         //     file: [ 'dir1/file1.txt' ],\n     *         //     none: [ 'dir4' ],\n     *         //     directory: [ 'dir2']\n     *         // }\n     *         // result is object containing the files grouped by type\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.groupBy(files, detectFile)\n     * .then( result => {\n     *     console.log(result);\n     *     // {\n     *     //     file: [ 'dir1/file1.txt' ],\n     *     //     none: [ 'dir4' ],\n     *     //     directory: [ 'dir2']\n     *     // }\n     *     // result is object containing the files grouped by type\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.groupBy(files, detectFile);\n     *         console.log(result);\n     *         // {\n     *         //     file: [ 'dir1/file1.txt' ],\n     *         //     none: [ 'dir4' ],\n     *         //     directory: [ 'dir2']\n     *         // }\n     *         // result is object containing the files grouped by type\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function groupBy (coll, iteratee, callback) {\n        return groupByLimit$1(coll, Infinity, iteratee, callback)\n    }\n\n    /**\n     * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n     *\n     * @name groupBySeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.groupBy]{@link module:Collections.groupBy}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a `key` to group the value under.\n     * Invoked with (value, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. Result is an `Object` whose\n     * properties are arrays of values which returned the corresponding key.\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function groupBySeries (coll, iteratee, callback) {\n        return groupByLimit$1(coll, 1, iteratee, callback)\n    }\n\n    /**\n     * Logs the result of an `async` function to the `console`. Only works in\n     * Node.js or in browsers that support `console.log` and `console.error` (such\n     * as FF and Chrome). If multiple arguments are returned from the async\n     * function, `console.log` is called on each argument in order.\n     *\n     * @name log\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} function - The function you want to eventually apply\n     * all arguments to.\n     * @param {...*} arguments... - Any number of arguments to apply to the function.\n     * @example\n     *\n     * // in a module\n     * var hello = function(name, callback) {\n     *     setTimeout(function() {\n     *         callback(null, 'hello ' + name);\n     *     }, 1000);\n     * };\n     *\n     * // in the node repl\n     * node> async.log(hello, 'world');\n     * 'hello world'\n     */\n    var log = consoleFunc('log');\n\n    /**\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name mapValuesLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - A function to apply to each value and key\n     * in `coll`.\n     * The iteratee should complete with the transformed value as its result.\n     * Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. `result` is a new object consisting\n     * of each key from `obj`, with each transformed value on the right-hand side.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapValuesLimit(obj, limit, iteratee, callback) {\n        callback = once(callback);\n        var newObj = {};\n        var _iteratee = wrapAsync(iteratee);\n        return eachOfLimit(limit)(obj, (val, key, next) => {\n            _iteratee(val, key, (err, result) => {\n                if (err) return next(err);\n                newObj[key] = result;\n                next(err);\n            });\n        }, err => callback(err, newObj));\n    }\n\n    var mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n    /**\n     * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n     *\n     * Produces a new Object by mapping each value of `obj` through the `iteratee`\n     * function. The `iteratee` is called each `value` and `key` from `obj` and a\n     * callback for when it has finished processing. Each of these callbacks takes\n     * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n     * passes an error to its callback, the main `callback` (for the `mapValues`\n     * function) is immediately called with the error.\n     *\n     * Note, the order of the keys in the result is not guaranteed.  The keys will\n     * be roughly in the order they complete, (but this is very engine-specific)\n     *\n     * @name mapValues\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each value and key\n     * in `coll`.\n     * The iteratee should complete with the transformed value as its result.\n     * Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. `result` is a new object consisting\n     * of each key from `obj`, with each transformed value on the right-hand side.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     * // file4.txt does not exist\n     *\n     * const fileMap = {\n     *     f1: 'file1.txt',\n     *     f2: 'file2.txt',\n     *     f3: 'file3.txt'\n     * };\n     *\n     * const withMissingFileMap = {\n     *     f1: 'file1.txt',\n     *     f2: 'file2.txt',\n     *     f3: 'file4.txt'\n     * };\n     *\n     * // asynchronous function that returns the file size in bytes\n     * function getFileSizeInBytes(file, key, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // result is now a map of file size in bytes for each file, e.g.\n     *         // {\n     *         //     f1: 1000,\n     *         //     f2: 2000,\n     *         //     f3: 3000\n     *         // }\n     *     }\n     * });\n     *\n     * // Error handling\n     * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n     *     if (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     } else {\n     *         console.log(result);\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.mapValues(fileMap, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     *     // result is now a map of file size in bytes for each file, e.g.\n     *     // {\n     *     //     f1: 1000,\n     *     //     f2: 2000,\n     *     //     f3: 3000\n     *     // }\n     * }).catch (err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error Handling\n     * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n     * .then( result => {\n     *     console.log(result);\n     * }).catch (err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n     *         console.log(result);\n     *         // result is now a map of file size in bytes for each file, e.g.\n     *         // {\n     *         //     f1: 1000,\n     *         //     f2: 2000,\n     *         //     f3: 3000\n     *         // }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // Error Handling\n     * async () => {\n     *     try {\n     *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n     *         console.log(result);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function mapValues(obj, iteratee, callback) {\n        return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n    }\n\n    /**\n     * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n     *\n     * @name mapValuesSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.mapValues]{@link module:Collections.mapValues}\n     * @category Collection\n     * @param {Object} obj - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - A function to apply to each value and key\n     * in `coll`.\n     * The iteratee should complete with the transformed value as its result.\n     * Invoked with (value, key, callback).\n     * @param {Function} [callback] - A callback which is called when all `iteratee`\n     * functions have finished, or an error occurs. `result` is a new object consisting\n     * of each key from `obj`, with each transformed value on the right-hand side.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function mapValuesSeries(obj, iteratee, callback) {\n        return mapValuesLimit$1(obj, 1, iteratee, callback)\n    }\n\n    /**\n     * Caches the results of an async function. When creating a hash to store\n     * function results against, the callback is omitted from the hash and an\n     * optional hash function can be used.\n     *\n     * **Note: if the async function errs, the result will not be cached and\n     * subsequent calls will call the wrapped function.**\n     *\n     * If no hash function is specified, the first argument is used as a hash key,\n     * which may work reasonably if it is a string or a data type that converts to a\n     * distinct string. Note that objects and arrays will not behave reasonably.\n     * Neither will cases where the other arguments are significant. In such cases,\n     * specify your own hash function.\n     *\n     * The cache of results is exposed as the `memo` property of the function\n     * returned by `memoize`.\n     *\n     * @name memoize\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n     * @param {Function} hasher - An optional function for generating a custom hash\n     * for storing results. It has all the arguments applied to it apart from the\n     * callback, and must be synchronous.\n     * @returns {AsyncFunction} a memoized version of `fn`\n     * @example\n     *\n     * var slow_fn = function(name, callback) {\n     *     // do something\n     *     callback(null, result);\n     * };\n     * var fn = async.memoize(slow_fn);\n     *\n     * // fn can now be used as if it were slow_fn\n     * fn('some name', function() {\n     *     // callback\n     * });\n     */\n    function memoize(fn, hasher = v => v) {\n        var memo = Object.create(null);\n        var queues = Object.create(null);\n        var _fn = wrapAsync(fn);\n        var memoized = initialParams((args, callback) => {\n            var key = hasher(...args);\n            if (key in memo) {\n                setImmediate$1(() => callback(null, ...memo[key]));\n            } else if (key in queues) {\n                queues[key].push(callback);\n            } else {\n                queues[key] = [callback];\n                _fn(...args, (err, ...resultArgs) => {\n                    // #1465 don't memoize if an error occurred\n                    if (!err) {\n                        memo[key] = resultArgs;\n                    }\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                        q[i](err, ...resultArgs);\n                    }\n                });\n            }\n        });\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    }\n\n    /* istanbul ignore file */\n\n    /**\n     * Calls `callback` on a later loop around the event loop. In Node.js this just\n     * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n     * available, otherwise `setTimeout(callback, 0)`, which means other higher\n     * priority events may precede the execution of `callback`.\n     *\n     * This is used internally for browser-compatibility purposes.\n     *\n     * @name nextTick\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.setImmediate]{@link module:Utils.setImmediate}\n     * @category Util\n     * @param {Function} callback - The function to call on a later loop around\n     * the event loop. Invoked with (args...).\n     * @param {...*} args... - any number of additional arguments to pass to the\n     * callback on the next tick.\n     * @example\n     *\n     * var call_order = [];\n     * async.nextTick(function() {\n     *     call_order.push('two');\n     *     // call_order now equals ['one','two']\n     * });\n     * call_order.push('one');\n     *\n     * async.setImmediate(function (a, b, c) {\n     *     // a, b, and c equal 1, 2, and 3\n     * }, 1, 2, 3);\n     */\n    var _defer$1;\n\n    if (hasNextTick) {\n        _defer$1 = process.nextTick;\n    } else if (hasSetImmediate) {\n        _defer$1 = setImmediate;\n    } else {\n        _defer$1 = fallback;\n    }\n\n    var nextTick = wrap(_defer$1);\n\n    var _parallel = awaitify((eachfn, tasks, callback) => {\n        var results = isArrayLike(tasks) ? [] : {};\n\n        eachfn(tasks, (task, key, taskCb) => {\n            wrapAsync(task)((err, ...result) => {\n                if (result.length < 2) {\n                    [result] = result;\n                }\n                results[key] = result;\n                taskCb(err);\n            });\n        }, err => callback(err, results));\n    }, 3);\n\n    /**\n     * Run the `tasks` collection of functions in parallel, without waiting until\n     * the previous function has completed. If any of the functions pass an error to\n     * its callback, the main `callback` is immediately called with the value of the\n     * error. Once the `tasks` have completed, the results are passed to the final\n     * `callback` as an array.\n     *\n     * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n     * parallel execution of code.  If your tasks do not use any timers or perform\n     * any I/O, they will actually be executed in series.  Any synchronous setup\n     * sections for each task will happen one after the other.  JavaScript remains\n     * single-threaded.\n     *\n     * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n     * execution of other tasks when a task fails.\n     *\n     * It is also possible to use an object instead of an array. Each property will\n     * be run as a function and the results will be passed to the final `callback`\n     * as an object instead of an array. This can be a more readable way of handling\n     * results from {@link async.parallel}.\n     *\n     * @name parallel\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n     * [async functions]{@link AsyncFunction} to run.\n     * Each async function can complete with any number of optional `result` values.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed successfully. This function gets a results array\n     * (or object) containing all the result arguments passed to the task callbacks.\n     * Invoked with (err, results).\n     * @returns {Promise} a promise, if a callback is not passed\n     *\n     * @example\n     *\n     * //Using Callbacks\n     * async.parallel([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ], function(err, results) {\n     *     console.log(results);\n     *     // results is equal to ['one','two'] even though\n     *     // the second function had a shorter timeout.\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.parallel({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }, function(err, results) {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * });\n     *\n     * //Using Promises\n     * async.parallel([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ]).then(results => {\n     *     console.log(results);\n     *     // results is equal to ['one','two'] even though\n     *     // the second function had a shorter timeout.\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.parallel({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }).then(results => {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * //Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.parallel([\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 'one');\n     *                 }, 200);\n     *             },\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 'two');\n     *                 }, 100);\n     *             }\n     *         ]);\n     *         console.log(results);\n     *         // results is equal to ['one','two'] even though\n     *         // the second function had a shorter timeout.\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // an example using an object instead of an array\n     * async () => {\n     *     try {\n     *         let results = await async.parallel({\n     *             one: function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 1);\n     *                 }, 200);\n     *             },\n     *            two: function(callback) {\n     *                 setTimeout(function() {\n     *                     callback(null, 2);\n     *                 }, 100);\n     *            }\n     *         });\n     *         console.log(results);\n     *         // results is equal to: { one: 1, two: 2 }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function parallel(tasks, callback) {\n        return _parallel(eachOf$1, tasks, callback);\n    }\n\n    /**\n     * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name parallelLimit\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.parallel]{@link module:ControlFlow.parallel}\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n     * [async functions]{@link AsyncFunction} to run.\n     * Each async function can complete with any number of optional `result` values.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed successfully. This function gets a results array\n     * (or object) containing all the result arguments passed to the task callbacks.\n     * Invoked with (err, results).\n     * @returns {Promise} a promise, if a callback is not passed\n     */\n    function parallelLimit(tasks, limit, callback) {\n        return _parallel(eachOfLimit(limit), tasks, callback);\n    }\n\n    /**\n     * A queue of tasks for the worker function to complete.\n     * @typedef {Iterable} QueueObject\n     * @memberOf module:ControlFlow\n     * @property {Function} length - a function returning the number of items\n     * waiting to be processed. Invoke with `queue.length()`.\n     * @property {boolean} started - a boolean indicating whether or not any\n     * items have been pushed and processed by the queue.\n     * @property {Function} running - a function returning the number of items\n     * currently being processed. Invoke with `queue.running()`.\n     * @property {Function} workersList - a function returning the array of items\n     * currently being processed. Invoke with `queue.workersList()`.\n     * @property {Function} idle - a function returning false if there are items\n     * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n     * @property {number} concurrency - an integer for determining how many `worker`\n     * functions should be run in parallel. This property can be changed after a\n     * `queue` is created to alter the concurrency on-the-fly.\n     * @property {number} payload - an integer that specifies how many items are\n     * passed to the worker function at a time. only applies if this is a\n     * [cargo]{@link module:ControlFlow.cargo} object\n     * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n     * once the `worker` has finished processing the task. Instead of a single task,\n     * a `tasks` array can be submitted. The respective callback is used for every\n     * task in the list. Invoke with `queue.push(task, [callback])`,\n     * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n     * Invoke with `queue.unshift(task, [callback])`.\n     * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n     * a promise that rejects if an error occurs.\n     * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n     * a promise that rejects if an error occurs.\n     * @property {Function} remove - remove items from the queue that match a test\n     * function.  The test function will be passed an object with a `data` property,\n     * and a `priority` property, if this is a\n     * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n     * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n     * `function ({data, priority}) {}` and returns a Boolean.\n     * @property {Function} saturated - a function that sets a callback that is\n     * called when the number of running workers hits the `concurrency` limit, and\n     * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n     * returns a promise for the next occurrence.\n     * @property {Function} unsaturated - a function that sets a callback that is\n     * called when the number of running workers is less than the `concurrency` &\n     * `buffer` limits, and further tasks will not be queued. If the callback is\n     * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n     * @property {number} buffer - A minimum threshold buffer in order to say that\n     * the `queue` is `unsaturated`.\n     * @property {Function} empty - a function that sets a callback that is called\n     * when the last item from the `queue` is given to a `worker`. If the callback\n     * is omitted, `q.empty()` returns a promise for the next occurrence.\n     * @property {Function} drain - a function that sets a callback that is called\n     * when the last item from the `queue` has returned from the `worker`. If the\n     * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n     * @property {Function} error - a function that sets a callback that is called\n     * when a task errors. Has the signature `function(error, task)`. If the\n     * callback is omitted, `error()` returns a promise that rejects on the next\n     * error.\n     * @property {boolean} paused - a boolean for determining whether the queue is\n     * in a paused state.\n     * @property {Function} pause - a function that pauses the processing of tasks\n     * until `resume()` is called. Invoke with `queue.pause()`.\n     * @property {Function} resume - a function that resumes the processing of\n     * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n     * @property {Function} kill - a function that removes the `drain` callback and\n     * empties remaining tasks from the queue forcing it to go idle. No more tasks\n     * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n     *\n     * @example\n     * const q = async.queue(worker, 2)\n     * q.push(item1)\n     * q.push(item2)\n     * q.push(item3)\n     * // queues are iterable, spread into an array to inspect\n     * const items = [...q] // [item1, item2, item3]\n     * // or use for of\n     * for (let item of q) {\n     *     console.log(item)\n     * }\n     *\n     * q.drain(() => {\n     *     console.log('all done')\n     * })\n     * // or\n     * await q.drain()\n     */\n\n    /**\n     * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n     * `queue` are processed in parallel (up to the `concurrency` limit). If all\n     * `worker`s are in progress, the task is queued until one becomes available.\n     * Once a `worker` completes a `task`, that `task`'s callback is called.\n     *\n     * @name queue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An async function for processing a queued task.\n     * If you want to handle errors from an individual task, pass a callback to\n     * `q.push()`. Invoked with (task, callback).\n     * @param {number} [concurrency=1] - An `integer` for determining how many\n     * `worker` functions should be run in parallel.  If omitted, the concurrency\n     * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n     * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n     * attached as certain properties to listen for specific events during the\n     * lifecycle of the queue.\n     * @example\n     *\n     * // create a queue object with concurrency 2\n     * var q = async.queue(function(task, callback) {\n     *     console.log('hello ' + task.name);\n     *     callback();\n     * }, 2);\n     *\n     * // assign a callback\n     * q.drain(function() {\n     *     console.log('all items have been processed');\n     * });\n     * // or await the end\n     * await q.drain()\n     *\n     * // assign an error callback\n     * q.error(function(err, task) {\n     *     console.error('task experienced an error');\n     * });\n     *\n     * // add some items to the queue\n     * q.push({name: 'foo'}, function(err) {\n     *     console.log('finished processing foo');\n     * });\n     * // callback is optional\n     * q.push({name: 'bar'});\n     *\n     * // add some items to the queue (batch-wise)\n     * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n     *     console.log('finished processing item');\n     * });\n     *\n     * // add some items to the front of the queue\n     * q.unshift({name: 'bar'}, function (err) {\n     *     console.log('finished processing bar');\n     * });\n     */\n    function queue$1 (worker, concurrency) {\n        var _worker = wrapAsync(worker);\n        return queue((items, cb) => {\n            _worker(items[0], cb);\n        }, concurrency, 1);\n    }\n\n    // Binary min-heap implementation used for priority queue.\n    // Implementation is stable, i.e. push time is considered for equal priorities\n    class Heap {\n        constructor() {\n            this.heap = [];\n            this.pushCount = Number.MIN_SAFE_INTEGER;\n        }\n\n        get length() {\n            return this.heap.length;\n        }\n\n        empty () {\n            this.heap = [];\n            return this;\n        }\n\n        percUp(index) {\n            let p;\n\n            while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n                let t = this.heap[index];\n                this.heap[index] = this.heap[p];\n                this.heap[p] = t;\n\n                index = p;\n            }\n        }\n\n        percDown(index) {\n            let l;\n\n            while ((l=leftChi(index)) < this.heap.length) {\n                if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                    l = l+1;\n                }\n\n                if (smaller(this.heap[index], this.heap[l])) {\n                    break;\n                }\n\n                let t = this.heap[index];\n                this.heap[index] = this.heap[l];\n                this.heap[l] = t;\n\n                index = l;\n            }\n        }\n\n        push(node) {\n            node.pushCount = ++this.pushCount;\n            this.heap.push(node);\n            this.percUp(this.heap.length-1);\n        }\n\n        unshift(node) {\n            return this.heap.push(node);\n        }\n\n        shift() {\n            let [top] = this.heap;\n\n            this.heap[0] = this.heap[this.heap.length-1];\n            this.heap.pop();\n            this.percDown(0);\n\n            return top;\n        }\n\n        toArray() {\n            return [...this];\n        }\n\n        *[Symbol.iterator] () {\n            for (let i = 0; i < this.heap.length; i++) {\n                yield this.heap[i].data;\n            }\n        }\n\n        remove (testFn) {\n            let j = 0;\n            for (let i = 0; i < this.heap.length; i++) {\n                if (!testFn(this.heap[i])) {\n                    this.heap[j] = this.heap[i];\n                    j++;\n                }\n            }\n\n            this.heap.splice(j);\n\n            for (let i = parent(this.heap.length-1); i >= 0; i--) {\n                this.percDown(i);\n            }\n\n            return this;\n        }\n    }\n\n    function leftChi(i) {\n        return (i<<1)+1;\n    }\n\n    function parent(i) {\n        return ((i+1)>>1)-1;\n    }\n\n    function smaller(x, y) {\n        if (x.priority !== y.priority) {\n            return x.priority < y.priority;\n        }\n        else {\n            return x.pushCount < y.pushCount;\n        }\n    }\n\n    /**\n     * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n     * completed in ascending priority order.\n     *\n     * @name priorityQueue\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.queue]{@link module:ControlFlow.queue}\n     * @category Control Flow\n     * @param {AsyncFunction} worker - An async function for processing a queued task.\n     * If you want to handle errors from an individual task, pass a callback to\n     * `q.push()`.\n     * Invoked with (task, callback).\n     * @param {number} concurrency - An `integer` for determining how many `worker`\n     * functions should be run in parallel.  If omitted, the concurrency defaults to\n     * `1`.  If the concurrency is `0`, an error is thrown.\n     * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n     * differences between `queue` and `priorityQueue` objects:\n     * * `push(task, priority, [callback])` - `priority` should be a number. If an\n     *   array of `tasks` is given, all tasks will be assigned the same priority.\n     * * The `unshift` method was removed.\n     */\n    function priorityQueue(worker, concurrency) {\n        // Start with a normal queue\n        var q = queue$1(worker, concurrency);\n        var processingScheduled = false;\n\n        q._tasks = new Heap();\n\n        // Override push to accept second parameter representing priority\n        q.push = function(data, priority = 0, callback = () => {}) {\n            if (typeof callback !== 'function') {\n                throw new Error('task callback must be a function');\n            }\n            q.started = true;\n            if (!Array.isArray(data)) {\n                data = [data];\n            }\n            if (data.length === 0 && q.idle()) {\n                // call drain immediately if there are no tasks\n                return setImmediate$1(() => q.drain());\n            }\n\n            for (var i = 0, l = data.length; i < l; i++) {\n                var item = {\n                    data: data[i],\n                    priority,\n                    callback\n                };\n\n                q._tasks.push(item);\n            }\n\n            if (!processingScheduled) {\n                processingScheduled = true;\n                setImmediate$1(() => {\n                    processingScheduled = false;\n                    q.process();\n                });\n            }\n        };\n\n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    }\n\n    /**\n     * Runs the `tasks` array of functions in parallel, without waiting until the\n     * previous function has completed. Once any of the `tasks` complete or pass an\n     * error to its callback, the main `callback` is immediately called. It's\n     * equivalent to `Promise.race()`.\n     *\n     * @name race\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n     * to run. Each function can complete with an optional `result` value.\n     * @param {Function} callback - A callback to run once any of the functions have\n     * completed. This function gets an error or result from the first function that\n     * completed. Invoked with (err, result).\n     * @returns undefined\n     * @example\n     *\n     * async.race([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ],\n     * // main callback\n     * function(err, result) {\n     *     // the result will be equal to 'two' as it finishes earlier\n     * });\n     */\n    function race(tasks, callback) {\n        callback = once(callback);\n        if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n        if (!tasks.length) return callback();\n        for (var i = 0, l = tasks.length; i < l; i++) {\n            wrapAsync(tasks[i])(callback);\n        }\n    }\n\n    var race$1 = awaitify(race, 2);\n\n    /**\n     * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n     *\n     * @name reduceRight\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reduce]{@link module:Collections.reduce}\n     * @alias foldr\n     * @category Collection\n     * @param {Array} array - A collection to iterate over.\n     * @param {*} memo - The initial state of the reduction.\n     * @param {AsyncFunction} iteratee - A function applied to each item in the\n     * array to produce the next step in the reduction.\n     * The `iteratee` should complete with the next state of the reduction.\n     * If the iteratee completes with an error, the reduction is stopped and the\n     * main `callback` is immediately called with the error.\n     * Invoked with (memo, item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the reduced value. Invoked with\n     * (err, result).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function reduceRight (array, memo, iteratee, callback) {\n        var reversed = [...array].reverse();\n        return reduce$1(reversed, memo, iteratee, callback);\n    }\n\n    /**\n     * Wraps the async function in another function that always completes with a\n     * result object, even when it errors.\n     *\n     * The result object has either the property `error` or `value`.\n     *\n     * @name reflect\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} fn - The async function you want to wrap\n     * @returns {Function} - A function that always passes null to it's callback as\n     * the error. The second argument to the callback will be an `object` with\n     * either an `error` or a `value` property.\n     * @example\n     *\n     * async.parallel([\n     *     async.reflect(function(callback) {\n     *         // do some stuff ...\n     *         callback(null, 'one');\n     *     }),\n     *     async.reflect(function(callback) {\n     *         // do some more stuff but error ...\n     *         callback('bad stuff happened');\n     *     }),\n     *     async.reflect(function(callback) {\n     *         // do some more stuff ...\n     *         callback(null, 'two');\n     *     })\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results[0].value = 'one'\n     *     // results[1].error = 'bad stuff happened'\n     *     // results[2].value = 'two'\n     * });\n     */\n    function reflect(fn) {\n        var _fn = wrapAsync(fn);\n        return initialParams(function reflectOn(args, reflectCallback) {\n            args.push((error, ...cbArgs) => {\n                let retVal = {};\n                if (error) {\n                    retVal.error = error;\n                }\n                if (cbArgs.length > 0){\n                    var value = cbArgs;\n                    if (cbArgs.length <= 1) {\n                        [value] = cbArgs;\n                    }\n                    retVal.value = value;\n                }\n                reflectCallback(null, retVal);\n            });\n\n            return _fn.apply(this, args);\n        });\n    }\n\n    /**\n     * A helper function that wraps an array or an object of functions with `reflect`.\n     *\n     * @name reflectAll\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.reflect]{@link module:Utils.reflect}\n     * @category Util\n     * @param {Array|Object|Iterable} tasks - The collection of\n     * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n     * @returns {Array} Returns an array of async functions, each wrapped in\n     * `async.reflect`\n     * @example\n     *\n     * let tasks = [\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         // do some more stuff but error ...\n     *         callback(new Error('bad stuff happened'));\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ];\n     *\n     * async.parallel(async.reflectAll(tasks),\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results[0].value = 'one'\n     *     // results[1].error = Error('bad stuff happened')\n     *     // results[2].value = 'two'\n     * });\n     *\n     * // an example using an object instead of an array\n     * let tasks = {\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         callback('two');\n     *     },\n     *     three: function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'three');\n     *         }, 100);\n     *     }\n     * };\n     *\n     * async.parallel(async.reflectAll(tasks),\n     * // optional callback\n     * function(err, results) {\n     *     // values\n     *     // results.one.value = 'one'\n     *     // results.two.error = 'two'\n     *     // results.three.value = 'three'\n     * });\n     */\n    function reflectAll(tasks) {\n        var results;\n        if (Array.isArray(tasks)) {\n            results = tasks.map(reflect);\n        } else {\n            results = {};\n            Object.keys(tasks).forEach(key => {\n                results[key] = reflect.call(this, tasks[key]);\n            });\n        }\n        return results;\n    }\n\n    function reject(eachfn, arr, _iteratee, callback) {\n        const iteratee = wrapAsync(_iteratee);\n        return _filter(eachfn, arr, (value, cb) => {\n            iteratee(value, (err, v) => {\n                cb(err, !v);\n            });\n        }, callback);\n    }\n\n    /**\n     * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n     *\n     * @name reject\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.filter]{@link module:Collections.filter}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - An async truth test to apply to each item in\n     * `coll`.\n     * The should complete with a boolean value as its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     *\n     * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.reject(fileList, fileExists, function(err, results) {\n     *    // [ 'dir3/file6.txt' ]\n     *    // results now equals an array of the non-existing files\n     * });\n     *\n     * // Using Promises\n     * async.reject(fileList, fileExists)\n     * .then( results => {\n     *     console.log(results);\n     *     // [ 'dir3/file6.txt' ]\n     *     // results now equals an array of the non-existing files\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.reject(fileList, fileExists);\n     *         console.log(results);\n     *         // [ 'dir3/file6.txt' ]\n     *         // results now equals an array of the non-existing files\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function reject$1 (coll, iteratee, callback) {\n        return reject(eachOf$1, coll, iteratee, callback)\n    }\n    var reject$2 = awaitify(reject$1, 3);\n\n    /**\n     * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name rejectLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reject]{@link module:Collections.reject}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {Function} iteratee - An async truth test to apply to each item in\n     * `coll`.\n     * The should complete with a boolean value as its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function rejectLimit (coll, limit, iteratee, callback) {\n        return reject(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var rejectLimit$1 = awaitify(rejectLimit, 4);\n\n    /**\n     * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n     *\n     * @name rejectSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.reject]{@link module:Collections.reject}\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {Function} iteratee - An async truth test to apply to each item in\n     * `coll`.\n     * The should complete with a boolean value as its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     */\n    function rejectSeries (coll, iteratee, callback) {\n        return reject(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var rejectSeries$1 = awaitify(rejectSeries, 3);\n\n    function constant$1(value) {\n        return function () {\n            return value;\n        }\n    }\n\n    /**\n     * Attempts to get a successful response from `task` no more than `times` times\n     * before returning an error. If the task is successful, the `callback` will be\n     * passed the result of the successful task. If all attempts fail, the callback\n     * will be passed the error and result (if any) of the final attempt.\n     *\n     * @name retry\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @see [async.retryable]{@link module:ControlFlow.retryable}\n     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n     * object with `times` and `interval` or a number.\n     * * `times` - The number of attempts to make before giving up.  The default\n     *   is `5`.\n     * * `interval` - The time to wait between retries, in milliseconds.  The\n     *   default is `0`. The interval may also be specified as a function of the\n     *   retry count (see example).\n     * * `errorFilter` - An optional synchronous function that is invoked on\n     *   erroneous result. If it returns `true` the retry attempts will continue;\n     *   if the function returns `false` the retry flow is aborted with the current\n     *   attempt's error and result being returned to the final callback.\n     *   Invoked with (err).\n     * * If `opts` is a number, the number specifies the number of times to retry,\n     *   with the default interval of `0`.\n     * @param {AsyncFunction} task - An async function to retry.\n     * Invoked with (callback).\n     * @param {Function} [callback] - An optional callback which is called when the\n     * task has succeeded, or after the final failed attempt. It receives the `err`\n     * and `result` arguments of the last attempt at completing the `task`. Invoked\n     * with (err, results).\n     * @returns {Promise} a promise if no callback provided\n     *\n     * @example\n     *\n     * // The `retry` function can be used as a stand-alone control flow by passing\n     * // a callback, as shown below:\n     *\n     * // try calling apiMethod 3 times\n     * async.retry(3, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod 3 times, waiting 200 ms between each retry\n     * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod 10 times with exponential backoff\n     * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n     * async.retry({\n     *   times: 10,\n     *   interval: function(retryCount) {\n     *     return 50 * Math.pow(2, retryCount);\n     *   }\n     * }, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod the default 5 times no delay between each retry\n     * async.retry(apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // try calling apiMethod only when error condition satisfies, all other\n     * // errors will abort the retry control flow and return to final callback\n     * async.retry({\n     *   errorFilter: function(err) {\n     *     return err.message === 'Temporary error'; // only retry on a specific error\n     *   }\n     * }, apiMethod, function(err, result) {\n     *     // do something with the result\n     * });\n     *\n     * // to retry individual methods that are not as reliable within other\n     * // control flow functions, use the `retryable` wrapper:\n     * async.auto({\n     *     users: api.getUsers.bind(api),\n     *     payments: async.retryable(3, api.getPayments.bind(api))\n     * }, function(err, results) {\n     *     // do something with the results\n     * });\n     *\n     */\n    const DEFAULT_TIMES = 5;\n    const DEFAULT_INTERVAL = 0;\n\n    function retry(opts, task, callback) {\n        var options = {\n            times: DEFAULT_TIMES,\n            intervalFunc: constant$1(DEFAULT_INTERVAL)\n        };\n\n        if (arguments.length < 3 && typeof opts === 'function') {\n            callback = task || promiseCallback();\n            task = opts;\n        } else {\n            parseTimes(options, opts);\n            callback = callback || promiseCallback();\n        }\n\n        if (typeof task !== 'function') {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n\n        var _task = wrapAsync(task);\n\n        var attempt = 1;\n        function retryAttempt() {\n            _task((err, ...args) => {\n                if (err === false) return\n                if (err && attempt++ < options.times &&\n                    (typeof options.errorFilter != 'function' ||\n                        options.errorFilter(err))) {\n                    setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n                } else {\n                    callback(err, ...args);\n                }\n            });\n        }\n\n        retryAttempt();\n        return callback[PROMISE_SYMBOL]\n    }\n\n    function parseTimes(acc, t) {\n        if (typeof t === 'object') {\n            acc.times = +t.times || DEFAULT_TIMES;\n\n            acc.intervalFunc = typeof t.interval === 'function' ?\n                t.interval :\n                constant$1(+t.interval || DEFAULT_INTERVAL);\n\n            acc.errorFilter = t.errorFilter;\n        } else if (typeof t === 'number' || typeof t === 'string') {\n            acc.times = +t || DEFAULT_TIMES;\n        } else {\n            throw new Error(\"Invalid arguments for async.retry\");\n        }\n    }\n\n    /**\n     * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n     * wraps a task and makes it retryable, rather than immediately calling it\n     * with retries.\n     *\n     * @name retryable\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.retry]{@link module:ControlFlow.retry}\n     * @category Control Flow\n     * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n     * options, exactly the same as from `retry`, except for a `opts.arity` that\n     * is the arity of the `task` function, defaulting to `task.length`\n     * @param {AsyncFunction} task - the asynchronous function to wrap.\n     * This function will be passed any arguments passed to the returned wrapper.\n     * Invoked with (...args, callback).\n     * @returns {AsyncFunction} The wrapped function, which when invoked, will\n     * retry on an error, based on the parameters specified in `opts`.\n     * This function will accept the same parameters as `task`.\n     * @example\n     *\n     * async.auto({\n     *     dep1: async.retryable(3, getFromFlakyService),\n     *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n     *         maybeProcessData(results.dep1, cb);\n     *     })]\n     * }, callback);\n     */\n    function retryable (opts, task) {\n        if (!task) {\n            task = opts;\n            opts = null;\n        }\n        let arity = (opts && opts.arity) || task.length;\n        if (isAsync(task)) {\n            arity += 1;\n        }\n        var _task = wrapAsync(task);\n        return initialParams((args, callback) => {\n            if (args.length < arity - 1 || callback == null) {\n                args.push(callback);\n                callback = promiseCallback();\n            }\n            function taskFn(cb) {\n                _task(...args, cb);\n            }\n\n            if (opts) retry(opts, taskFn, callback);\n            else retry(taskFn, callback);\n\n            return callback[PROMISE_SYMBOL]\n        });\n    }\n\n    /**\n     * Run the functions in the `tasks` collection in series, each one running once\n     * the previous function has completed. If any functions in the series pass an\n     * error to its callback, no more functions are run, and `callback` is\n     * immediately called with the value of the error. Otherwise, `callback`\n     * receives an array of results when `tasks` have completed.\n     *\n     * It is also possible to use an object instead of an array. Each property will\n     * be run as a function, and the results will be passed to the final `callback`\n     * as an object instead of an array. This can be a more readable way of handling\n     *  results from {@link async.series}.\n     *\n     * **Note** that while many implementations preserve the order of object\n     * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n     * explicitly states that\n     *\n     * > The mechanics and order of enumerating the properties is not specified.\n     *\n     * So if you rely on the order in which your series of functions are executed,\n     * and want this to work on all platforms, consider using an array.\n     *\n     * @name series\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n     * [async functions]{@link AsyncFunction} to run in series.\n     * Each function can complete with any number of optional `result` values.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed. This function gets a results array (or object)\n     * containing all the result arguments passed to the `task` callbacks. Invoked\n     * with (err, result).\n     * @return {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * //Using Callbacks\n     * async.series([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             // do some async task\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             // then do another async task\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ], function(err, results) {\n     *     console.log(results);\n     *     // results is equal to ['one','two']\n     * });\n     *\n     * // an example using objects instead of arrays\n     * async.series({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             // do some async task\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             // then do another async task\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }, function(err, results) {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * });\n     *\n     * //Using Promises\n     * async.series([\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'one');\n     *         }, 200);\n     *     },\n     *     function(callback) {\n     *         setTimeout(function() {\n     *             callback(null, 'two');\n     *         }, 100);\n     *     }\n     * ]).then(results => {\n     *     console.log(results);\n     *     // results is equal to ['one','two']\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // an example using an object instead of an array\n     * async.series({\n     *     one: function(callback) {\n     *         setTimeout(function() {\n     *             // do some async task\n     *             callback(null, 1);\n     *         }, 200);\n     *     },\n     *     two: function(callback) {\n     *         setTimeout(function() {\n     *             // then do another async task\n     *             callback(null, 2);\n     *         }, 100);\n     *     }\n     * }).then(results => {\n     *     console.log(results);\n     *     // results is equal to: { one: 1, two: 2 }\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * //Using async/await\n     * async () => {\n     *     try {\n     *         let results = await async.series([\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     // do some async task\n     *                     callback(null, 'one');\n     *                 }, 200);\n     *             },\n     *             function(callback) {\n     *                 setTimeout(function() {\n     *                     // then do another async task\n     *                     callback(null, 'two');\n     *                 }, 100);\n     *             }\n     *         ]);\n     *         console.log(results);\n     *         // results is equal to ['one','two']\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * // an example using an object instead of an array\n     * async () => {\n     *     try {\n     *         let results = await async.parallel({\n     *             one: function(callback) {\n     *                 setTimeout(function() {\n     *                     // do some async task\n     *                     callback(null, 1);\n     *                 }, 200);\n     *             },\n     *            two: function(callback) {\n     *                 setTimeout(function() {\n     *                     // then do another async task\n     *                     callback(null, 2);\n     *                 }, 100);\n     *            }\n     *         });\n     *         console.log(results);\n     *         // results is equal to: { one: 1, two: 2 }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function series(tasks, callback) {\n        return _parallel(eachOfSeries$1, tasks, callback);\n    }\n\n    /**\n     * Returns `true` if at least one element in the `coll` satisfies an async test.\n     * If any iteratee call returns `true`, the main `callback` is immediately\n     * called.\n     *\n     * @name some\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @alias any\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collections in parallel.\n     * The iteratee should complete with a boolean `result` value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // dir1 is a directory that contains file1.txt, file2.txt\n     * // dir2 is a directory that contains file3.txt, file4.txt\n     * // dir3 is a directory that contains file5.txt\n     * // dir4 does not exist\n     *\n     * // asynchronous function that checks if a file exists\n     * function fileExists(file, callback) {\n     *    fs.access(file, fs.constants.F_OK, (err) => {\n     *        callback(null, !err);\n     *    });\n     * }\n     *\n     * // Using callbacks\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n     *    function(err, result) {\n     *        console.log(result);\n     *        // true\n     *        // result is true since some file in the list exists\n     *    }\n     *);\n     *\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n     *    function(err, result) {\n     *        console.log(result);\n     *        // false\n     *        // result is false since none of the files exists\n     *    }\n     *);\n     *\n     * // Using Promises\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // true\n     *     // result is true since some file in the list exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n     * .then( result => {\n     *     console.log(result);\n     *     // false\n     *     // result is false since none of the files exists\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n     *         console.log(result);\n     *         // true\n     *         // result is true since some file in the list exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     * async () => {\n     *     try {\n     *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n     *         console.log(result);\n     *         // false\n     *         // result is false since none of the files exists\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function some(coll, iteratee, callback) {\n        return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n    }\n    var some$1 = awaitify(some, 3);\n\n    /**\n     * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n     *\n     * @name someLimit\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.some]{@link module:Collections.some}\n     * @alias anyLimit\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collections in parallel.\n     * The iteratee should complete with a boolean `result` value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function someLimit(coll, limit, iteratee, callback) {\n        return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n    }\n    var someLimit$1 = awaitify(someLimit, 4);\n\n    /**\n     * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n     *\n     * @name someSeries\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @see [async.some]{@link module:Collections.some}\n     * @alias anySeries\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n     * in the collections in series.\n     * The iteratee should complete with a boolean `result` value.\n     * Invoked with (item, callback).\n     * @param {Function} [callback] - A callback which is called as soon as any\n     * iteratee returns `true`, or after all the iteratee functions have finished.\n     * Result will be either `true` or `false` depending on the values of the async\n     * tests. Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     */\n    function someSeries(coll, iteratee, callback) {\n        return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n    }\n    var someSeries$1 = awaitify(someSeries, 3);\n\n    /**\n     * Sorts a list by the results of running each `coll` value through an async\n     * `iteratee`.\n     *\n     * @name sortBy\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {AsyncFunction} iteratee - An async function to apply to each item in\n     * `coll`.\n     * The iteratee should complete with a value to use as the sort criteria as\n     * its `result`.\n     * Invoked with (item, callback).\n     * @param {Function} callback - A callback which is called after all the\n     * `iteratee` functions have finished, or an error occurs. Results is the items\n     * from the original `coll` sorted by the values returned by the `iteratee`\n     * calls. Invoked with (err, results).\n     * @returns {Promise} a promise, if no callback passed\n     * @example\n     *\n     * // bigfile.txt is a file that is 251100 bytes in size\n     * // mediumfile.txt is a file that is 11000 bytes in size\n     * // smallfile.txt is a file that is 121 bytes in size\n     *\n     * // asynchronous function that returns the file size in bytes\n     * function getFileSizeInBytes(file, callback) {\n     *     fs.stat(file, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         callback(null, stat.size);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n     *     function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *         } else {\n     *             console.log(results);\n     *             // results is now the original array of files sorted by\n     *             // file size (ascending by default), e.g.\n     *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     *         }\n     *     }\n     * );\n     *\n     * // By modifying the callback parameter the\n     * // sorting order can be influenced:\n     *\n     * // ascending order\n     * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n     *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n     *         if (getFileSizeErr) return callback(getFileSizeErr);\n     *         callback(null, fileSize);\n     *     });\n     * }, function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *         } else {\n     *             console.log(results);\n     *             // results is now the original array of files sorted by\n     *             // file size (ascending by default), e.g.\n     *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     *         }\n     *     }\n     * );\n     *\n     * // descending order\n     * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n     *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n     *         if (getFileSizeErr) {\n     *             return callback(getFileSizeErr);\n     *         }\n     *         callback(null, fileSize * -1);\n     *     });\n     * }, function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *         } else {\n     *             console.log(results);\n     *             // results is now the original array of files sorted by\n     *             // file size (ascending by default), e.g.\n     *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n     *         }\n     *     }\n     * );\n     *\n     * // Error handling\n     * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n     *     function(err, results) {\n     *         if (err) {\n     *             console.log(err);\n     *             // [ Error: ENOENT: no such file or directory ]\n     *         } else {\n     *             console.log(results);\n     *         }\n     *     }\n     * );\n     *\n     * // Using Promises\n     * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     *     // results is now the original array of files sorted by\n     *     // file size (ascending by default), e.g.\n     *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     * }).catch( err => {\n     *     console.log(err);\n     * });\n     *\n     * // Error handling\n     * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n     * .then( results => {\n     *     console.log(results);\n     * }).catch( err => {\n     *     console.log(err);\n     *     // [ Error: ENOENT: no such file or directory ]\n     * });\n     *\n     * // Using async/await\n     * (async () => {\n     *     try {\n     *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n     *         console.log(results);\n     *         // results is now the original array of files sorted by\n     *         // file size (ascending by default), e.g.\n     *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * })();\n     *\n     * // Error handling\n     * async () => {\n     *     try {\n     *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n     *         console.log(results);\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *         // [ Error: ENOENT: no such file or directory ]\n     *     }\n     * }\n     *\n     */\n    function sortBy (coll, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return map$1(coll, (x, iterCb) => {\n            _iteratee(x, (err, criteria) => {\n                if (err) return iterCb(err);\n                iterCb(err, {value: x, criteria});\n            });\n        }, (err, results) => {\n            if (err) return callback(err);\n            callback(null, results.sort(comparator).map(v => v.value));\n        });\n\n        function comparator(left, right) {\n            var a = left.criteria, b = right.criteria;\n            return a < b ? -1 : a > b ? 1 : 0;\n        }\n    }\n    var sortBy$1 = awaitify(sortBy, 3);\n\n    /**\n     * Sets a time limit on an asynchronous function. If the function does not call\n     * its callback within the specified milliseconds, it will be called with a\n     * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n     *\n     * @name timeout\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @category Util\n     * @param {AsyncFunction} asyncFn - The async function to limit in time.\n     * @param {number} milliseconds - The specified time limit.\n     * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n     * to timeout Error for more information..\n     * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n     * of the control flow functions.\n     * Invoke this function with the same parameters as you would `asyncFunc`.\n     * @example\n     *\n     * function myFunction(foo, callback) {\n     *     doAsyncTask(foo, function(err, data) {\n     *         // handle errors\n     *         if (err) return callback(err);\n     *\n     *         // do some stuff ...\n     *\n     *         // return processed data\n     *         return callback(null, data);\n     *     });\n     * }\n     *\n     * var wrapped = async.timeout(myFunction, 1000);\n     *\n     * // call `wrapped` as you would `myFunction`\n     * wrapped({ bar: 'bar' }, function(err, data) {\n     *     // if `myFunction` takes < 1000 ms to execute, `err`\n     *     // and `data` will have their expected values\n     *\n     *     // else `err` will be an Error with the code 'ETIMEDOUT'\n     * });\n     */\n    function timeout(asyncFn, milliseconds, info) {\n        var fn = wrapAsync(asyncFn);\n\n        return initialParams((args, callback) => {\n            var timedOut = false;\n            var timer;\n\n            function timeoutCallback() {\n                var name = asyncFn.name || 'anonymous';\n                var error  = new Error('Callback function \"' + name + '\" timed out.');\n                error.code = 'ETIMEDOUT';\n                if (info) {\n                    error.info = info;\n                }\n                timedOut = true;\n                callback(error);\n            }\n\n            args.push((...cbArgs) => {\n                if (!timedOut) {\n                    callback(...cbArgs);\n                    clearTimeout(timer);\n                }\n            });\n\n            // setup timer and call original function\n            timer = setTimeout(timeoutCallback, milliseconds);\n            fn(...args);\n        });\n    }\n\n    function range(size) {\n        var result = Array(size);\n        while (size--) {\n            result[size] = size;\n        }\n        return result;\n    }\n\n    /**\n     * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n     * time.\n     *\n     * @name timesLimit\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.times]{@link module:ControlFlow.times}\n     * @category Control Flow\n     * @param {number} count - The number of times to run the function.\n     * @param {number} limit - The maximum number of async operations at a time.\n     * @param {AsyncFunction} iteratee - The async function to call `n` times.\n     * Invoked with the iteration index and a callback: (n, next).\n     * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n     * @returns {Promise} a promise, if no callback is provided\n     */\n    function timesLimit(count, limit, iteratee, callback) {\n        var _iteratee = wrapAsync(iteratee);\n        return mapLimit$1(range(count), limit, _iteratee, callback);\n    }\n\n    /**\n     * Calls the `iteratee` function `n` times, and accumulates results in the same\n     * manner you would use with [map]{@link module:Collections.map}.\n     *\n     * @name times\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.map]{@link module:Collections.map}\n     * @category Control Flow\n     * @param {number} n - The number of times to run the function.\n     * @param {AsyncFunction} iteratee - The async function to call `n` times.\n     * Invoked with the iteration index and a callback: (n, next).\n     * @param {Function} callback - see {@link module:Collections.map}.\n     * @returns {Promise} a promise, if no callback is provided\n     * @example\n     *\n     * // Pretend this is some complicated async factory\n     * var createUser = function(id, callback) {\n     *     callback(null, {\n     *         id: 'user' + id\n     *     });\n     * };\n     *\n     * // generate 5 users\n     * async.times(5, function(n, next) {\n     *     createUser(n, function(err, user) {\n     *         next(err, user);\n     *     });\n     * }, function(err, users) {\n     *     // we should now have 5 users\n     * });\n     */\n    function times (n, iteratee, callback) {\n        return timesLimit(n, Infinity, iteratee, callback)\n    }\n\n    /**\n     * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n     *\n     * @name timesSeries\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.times]{@link module:ControlFlow.times}\n     * @category Control Flow\n     * @param {number} n - The number of times to run the function.\n     * @param {AsyncFunction} iteratee - The async function to call `n` times.\n     * Invoked with the iteration index and a callback: (n, next).\n     * @param {Function} callback - see {@link module:Collections.map}.\n     * @returns {Promise} a promise, if no callback is provided\n     */\n    function timesSeries (n, iteratee, callback) {\n        return timesLimit(n, 1, iteratee, callback)\n    }\n\n    /**\n     * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n     * element in parallel, each step potentially mutating an `accumulator` value.\n     * The type of the accumulator defaults to the type of collection passed in.\n     *\n     * @name transform\n     * @static\n     * @memberOf module:Collections\n     * @method\n     * @category Collection\n     * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n     * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n     * it will default to an empty Object or Array, depending on the type of `coll`\n     * @param {AsyncFunction} iteratee - A function applied to each item in the\n     * collection that potentially modifies the accumulator.\n     * Invoked with (accumulator, item, key, callback).\n     * @param {Function} [callback] - A callback which is called after all the\n     * `iteratee` functions have finished. Result is the transformed accumulator.\n     * Invoked with (err, result).\n     * @returns {Promise} a promise, if no callback provided\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     *\n     * // helper function that returns human-readable size format from bytes\n     * function formatBytes(bytes, decimals = 2) {\n     *   // implementation not included for brevity\n     *   return humanReadbleFilesize;\n     * }\n     *\n     * const fileList = ['file1.txt','file2.txt','file3.txt'];\n     *\n     * // asynchronous function that returns the file size, transformed to human-readable format\n     * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n     * function transformFileSize(acc, value, key, callback) {\n     *     fs.stat(value, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         acc[key] = formatBytes(stat.size);\n     *         callback(null);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.transform(fileList, transformFileSize, function(err, result) {\n     *     if(err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.transform(fileList, transformFileSize)\n     * .then(result => {\n     *     console.log(result);\n     *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * (async () => {\n     *     try {\n     *         let result = await async.transform(fileList, transformFileSize);\n     *         console.log(result);\n     *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * })();\n     *\n     * @example\n     *\n     * // file1.txt is a file that is 1000 bytes in size\n     * // file2.txt is a file that is 2000 bytes in size\n     * // file3.txt is a file that is 3000 bytes in size\n     *\n     * // helper function that returns human-readable size format from bytes\n     * function formatBytes(bytes, decimals = 2) {\n     *   // implementation not included for brevity\n     *   return humanReadbleFilesize;\n     * }\n     *\n     * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n     *\n     * // asynchronous function that returns the file size, transformed to human-readable format\n     * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n     * function transformFileSize(acc, value, key, callback) {\n     *     fs.stat(value, function(err, stat) {\n     *         if (err) {\n     *             return callback(err);\n     *         }\n     *         acc[key] = formatBytes(stat.size);\n     *         callback(null);\n     *     });\n     * }\n     *\n     * // Using callbacks\n     * async.transform(fileMap, transformFileSize, function(err, result) {\n     *     if(err) {\n     *         console.log(err);\n     *     } else {\n     *         console.log(result);\n     *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n     *     }\n     * });\n     *\n     * // Using Promises\n     * async.transform(fileMap, transformFileSize)\n     * .then(result => {\n     *     console.log(result);\n     *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n     * }).catch(err => {\n     *     console.log(err);\n     * });\n     *\n     * // Using async/await\n     * async () => {\n     *     try {\n     *         let result = await async.transform(fileMap, transformFileSize);\n     *         console.log(result);\n     *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n     *     }\n     *     catch (err) {\n     *         console.log(err);\n     *     }\n     * }\n     *\n     */\n    function transform (coll, accumulator, iteratee, callback) {\n        if (arguments.length <= 3 && typeof accumulator === 'function') {\n            callback = iteratee;\n            iteratee = accumulator;\n            accumulator = Array.isArray(coll) ? [] : {};\n        }\n        callback = once(callback || promiseCallback());\n        var _iteratee = wrapAsync(iteratee);\n\n        eachOf$1(coll, (v, k, cb) => {\n            _iteratee(accumulator, v, k, cb);\n        }, err => callback(err, accumulator));\n        return callback[PROMISE_SYMBOL]\n    }\n\n    /**\n     * It runs each task in series but stops whenever any of the functions were\n     * successful. If one of the tasks were successful, the `callback` will be\n     * passed the result of the successful task. If all tasks fail, the callback\n     * will be passed the error and result (if any) of the final attempt.\n     *\n     * @name tryEach\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n     * run, each function is passed a `callback(err, result)` it must call on\n     * completion with an error `err` (which can be `null`) and an optional `result`\n     * value.\n     * @param {Function} [callback] - An optional callback which is called when one\n     * of the tasks has succeeded, or all have failed. It receives the `err` and\n     * `result` arguments of the last attempt at completing the `task`. Invoked with\n     * (err, results).\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     * async.tryEach([\n     *     function getDataFromFirstWebsite(callback) {\n     *         // Try getting the data from the first website\n     *         callback(err, data);\n     *     },\n     *     function getDataFromSecondWebsite(callback) {\n     *         // First website failed,\n     *         // Try getting the data from the backup website\n     *         callback(err, data);\n     *     }\n     * ],\n     * // optional callback\n     * function(err, results) {\n     *     Now do something with the data.\n     * });\n     *\n     */\n    function tryEach(tasks, callback) {\n        var error = null;\n        var result;\n        return eachSeries$1(tasks, (task, taskCb) => {\n            wrapAsync(task)((err, ...args) => {\n                if (err === false) return taskCb(err);\n\n                if (args.length < 2) {\n                    [result] = args;\n                } else {\n                    result = args;\n                }\n                error = err;\n                taskCb(err ? null : {});\n            });\n        }, () => callback(error, result));\n    }\n\n    var tryEach$1 = awaitify(tryEach);\n\n    /**\n     * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n     * unmemoized form. Handy for testing.\n     *\n     * @name unmemoize\n     * @static\n     * @memberOf module:Utils\n     * @method\n     * @see [async.memoize]{@link module:Utils.memoize}\n     * @category Util\n     * @param {AsyncFunction} fn - the memoized function\n     * @returns {AsyncFunction} a function that calls the original unmemoized function\n     */\n    function unmemoize(fn) {\n        return (...args) => {\n            return (fn.unmemoized || fn)(...args);\n        };\n    }\n\n    /**\n     * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n     * stopped, or an error occurs.\n     *\n     * @name whilst\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {AsyncFunction} test - asynchronous truth test to perform before each\n     * execution of `iteratee`. Invoked with ().\n     * @param {AsyncFunction} iteratee - An async function which is called each time\n     * `test` passes. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has failed and repeated execution of `iteratee` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `iteratee`'s\n     * callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if no callback is passed\n     * @example\n     *\n     * var count = 0;\n     * async.whilst(\n     *     function test(cb) { cb(null, count < 5); },\n     *     function iter(callback) {\n     *         count++;\n     *         setTimeout(function() {\n     *             callback(null, count);\n     *         }, 1000);\n     *     },\n     *     function (err, n) {\n     *         // 5 seconds have passed, n = 5\n     *     }\n     * );\n     */\n    function whilst(test, iteratee, callback) {\n        callback = onlyOnce(callback);\n        var _fn = wrapAsync(iteratee);\n        var _test = wrapAsync(test);\n        var results = [];\n\n        function next(err, ...rest) {\n            if (err) return callback(err);\n            results = rest;\n            if (err === false) return;\n            _test(check);\n        }\n\n        function check(err, truth) {\n            if (err) return callback(err);\n            if (err === false) return;\n            if (!truth) return callback(null, ...results);\n            _fn(next);\n        }\n\n        return _test(check);\n    }\n    var whilst$1 = awaitify(whilst, 3);\n\n    /**\n     * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n     * stopped, or an error occurs. `callback` will be passed an error and any\n     * arguments passed to the final `iteratee`'s callback.\n     *\n     * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n     *\n     * @name until\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @see [async.whilst]{@link module:ControlFlow.whilst}\n     * @category Control Flow\n     * @param {AsyncFunction} test - asynchronous truth test to perform before each\n     * execution of `iteratee`. Invoked with (callback).\n     * @param {AsyncFunction} iteratee - An async function which is called each time\n     * `test` fails. Invoked with (callback).\n     * @param {Function} [callback] - A callback which is called after the test\n     * function has passed and repeated execution of `iteratee` has stopped. `callback`\n     * will be passed an error and any arguments passed to the final `iteratee`'s\n     * callback. Invoked with (err, [results]);\n     * @returns {Promise} a promise, if a callback is not passed\n     *\n     * @example\n     * const results = []\n     * let finished = false\n     * async.until(function test(cb) {\n     *     cb(null, finished)\n     * }, function iter(next) {\n     *     fetchPage(url, (err, body) => {\n     *         if (err) return next(err)\n     *         results = results.concat(body.objects)\n     *         finished = !!body.next\n     *         next(err)\n     *     })\n     * }, function done (err) {\n     *     // all pages have been fetched\n     * })\n     */\n    function until(test, iteratee, callback) {\n        const _test = wrapAsync(test);\n        return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n    }\n\n    /**\n     * Runs the `tasks` array of functions in series, each passing their results to\n     * the next in the array. However, if any of the `tasks` pass an error to their\n     * own callback, the next function is not executed, and the main `callback` is\n     * immediately called with the error.\n     *\n     * @name waterfall\n     * @static\n     * @memberOf module:ControlFlow\n     * @method\n     * @category Control Flow\n     * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n     * to run.\n     * Each function should complete with any number of `result` values.\n     * The `result` values will be passed as arguments, in order, to the next task.\n     * @param {Function} [callback] - An optional callback to run once all the\n     * functions have completed. This will be passed the results of the last task's\n     * callback. Invoked with (err, [results]).\n     * @returns undefined\n     * @example\n     *\n     * async.waterfall([\n     *     function(callback) {\n     *         callback(null, 'one', 'two');\n     *     },\n     *     function(arg1, arg2, callback) {\n     *         // arg1 now equals 'one' and arg2 now equals 'two'\n     *         callback(null, 'three');\n     *     },\n     *     function(arg1, callback) {\n     *         // arg1 now equals 'three'\n     *         callback(null, 'done');\n     *     }\n     * ], function (err, result) {\n     *     // result now equals 'done'\n     * });\n     *\n     * // Or, with named functions:\n     * async.waterfall([\n     *     myFirstFunction,\n     *     mySecondFunction,\n     *     myLastFunction,\n     * ], function (err, result) {\n     *     // result now equals 'done'\n     * });\n     * function myFirstFunction(callback) {\n     *     callback(null, 'one', 'two');\n     * }\n     * function mySecondFunction(arg1, arg2, callback) {\n     *     // arg1 now equals 'one' and arg2 now equals 'two'\n     *     callback(null, 'three');\n     * }\n     * function myLastFunction(arg1, callback) {\n     *     // arg1 now equals 'three'\n     *     callback(null, 'done');\n     * }\n     */\n    function waterfall (tasks, callback) {\n        callback = once(callback);\n        if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n        if (!tasks.length) return callback();\n        var taskIndex = 0;\n\n        function nextTask(args) {\n            var task = wrapAsync(tasks[taskIndex++]);\n            task(...args, onlyOnce(next));\n        }\n\n        function next(err, ...args) {\n            if (err === false) return\n            if (err || taskIndex === tasks.length) {\n                return callback(err, ...args);\n            }\n            nextTask(args);\n        }\n\n        nextTask([]);\n    }\n\n    var waterfall$1 = awaitify(waterfall);\n\n    /**\n     * An \"async function\" in the context of Async is an asynchronous function with\n     * a variable number of parameters, with the final parameter being a callback.\n     * (`function (arg1, arg2, ..., callback) {}`)\n     * The final callback is of the form `callback(err, results...)`, which must be\n     * called once the function is completed.  The callback should be called with a\n     * Error as its first argument to signal that an error occurred.\n     * Otherwise, if no error occurred, it should be called with `null` as the first\n     * argument, and any additional `result` arguments that may apply, to signal\n     * successful completion.\n     * The callback must be called exactly once, ideally on a later tick of the\n     * JavaScript event loop.\n     *\n     * This type of function is also referred to as a \"Node-style async function\",\n     * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n     * library are themselves CPS/Node-style async functions, or functions that\n     * return CPS/Node-style async functions.\n     *\n     * Wherever we accept a Node-style async function, we also directly accept an\n     * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n     * In this case, the `async` function will not be passed a final callback\n     * argument, and any thrown error will be used as the `err` argument of the\n     * implicit callback, and the return value will be used as the `result` value.\n     * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n     * argument, and a `resolved` value becomes the `result`.)\n     *\n     * Note, due to JavaScript limitations, we can only detect native `async`\n     * functions and not transpilied implementations.\n     * Your environment must have `async`/`await` support for this to work.\n     * (e.g. Node > v7.6, or a recent version of a modern browser).\n     * If you are using `async` functions through a transpiler (e.g. Babel), you\n     * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n     * because the `async function` will be compiled to an ordinary function that\n     * returns a promise.\n     *\n     * @typedef {Function} AsyncFunction\n     * @static\n     */\n\n    var index = {\n        apply,\n        applyEach: applyEach$1,\n        applyEachSeries,\n        asyncify,\n        auto,\n        autoInject,\n        cargo,\n        cargoQueue: cargo$1,\n        compose,\n        concat: concat$1,\n        concatLimit: concatLimit$1,\n        concatSeries: concatSeries$1,\n        constant,\n        detect: detect$1,\n        detectLimit: detectLimit$1,\n        detectSeries: detectSeries$1,\n        dir,\n        doUntil,\n        doWhilst: doWhilst$1,\n        each,\n        eachLimit: eachLimit$2,\n        eachOf: eachOf$1,\n        eachOfLimit: eachOfLimit$2,\n        eachOfSeries: eachOfSeries$1,\n        eachSeries: eachSeries$1,\n        ensureAsync,\n        every: every$1,\n        everyLimit: everyLimit$1,\n        everySeries: everySeries$1,\n        filter: filter$1,\n        filterLimit: filterLimit$1,\n        filterSeries: filterSeries$1,\n        forever: forever$1,\n        groupBy,\n        groupByLimit: groupByLimit$1,\n        groupBySeries,\n        log,\n        map: map$1,\n        mapLimit: mapLimit$1,\n        mapSeries: mapSeries$1,\n        mapValues,\n        mapValuesLimit: mapValuesLimit$1,\n        mapValuesSeries,\n        memoize,\n        nextTick,\n        parallel,\n        parallelLimit,\n        priorityQueue,\n        queue: queue$1,\n        race: race$1,\n        reduce: reduce$1,\n        reduceRight,\n        reflect,\n        reflectAll,\n        reject: reject$2,\n        rejectLimit: rejectLimit$1,\n        rejectSeries: rejectSeries$1,\n        retry,\n        retryable,\n        seq,\n        series,\n        setImmediate: setImmediate$1,\n        some: some$1,\n        someLimit: someLimit$1,\n        someSeries: someSeries$1,\n        sortBy: sortBy$1,\n        timeout,\n        times,\n        timesLimit,\n        timesSeries,\n        transform,\n        tryEach: tryEach$1,\n        unmemoize,\n        until,\n        waterfall: waterfall$1,\n        whilst: whilst$1,\n\n        // aliases\n        all: every$1,\n        allLimit: everyLimit$1,\n        allSeries: everySeries$1,\n        any: some$1,\n        anyLimit: someLimit$1,\n        anySeries: someSeries$1,\n        find: detect$1,\n        findLimit: detectLimit$1,\n        findSeries: detectSeries$1,\n        flatMap: concat$1,\n        flatMapLimit: concatLimit$1,\n        flatMapSeries: concatSeries$1,\n        forEach: each,\n        forEachSeries: eachSeries$1,\n        forEachLimit: eachLimit$2,\n        forEachOf: eachOf$1,\n        forEachOfSeries: eachOfSeries$1,\n        forEachOfLimit: eachOfLimit$2,\n        inject: reduce$1,\n        foldl: reduce$1,\n        foldr: reduceRight,\n        select: filter$1,\n        selectLimit: filterLimit$1,\n        selectSeries: filterSeries$1,\n        wrapSync: asyncify,\n        during: whilst$1,\n        doDuring: doWhilst$1\n    };\n\n    exports.default = index;\n    exports.apply = apply;\n    exports.applyEach = applyEach$1;\n    exports.applyEachSeries = applyEachSeries;\n    exports.asyncify = asyncify;\n    exports.auto = auto;\n    exports.autoInject = autoInject;\n    exports.cargo = cargo;\n    exports.cargoQueue = cargo$1;\n    exports.compose = compose;\n    exports.concat = concat$1;\n    exports.concatLimit = concatLimit$1;\n    exports.concatSeries = concatSeries$1;\n    exports.constant = constant;\n    exports.detect = detect$1;\n    exports.detectLimit = detectLimit$1;\n    exports.detectSeries = detectSeries$1;\n    exports.dir = dir;\n    exports.doUntil = doUntil;\n    exports.doWhilst = doWhilst$1;\n    exports.each = each;\n    exports.eachLimit = eachLimit$2;\n    exports.eachOf = eachOf$1;\n    exports.eachOfLimit = eachOfLimit$2;\n    exports.eachOfSeries = eachOfSeries$1;\n    exports.eachSeries = eachSeries$1;\n    exports.ensureAsync = ensureAsync;\n    exports.every = every$1;\n    exports.everyLimit = everyLimit$1;\n    exports.everySeries = everySeries$1;\n    exports.filter = filter$1;\n    exports.filterLimit = filterLimit$1;\n    exports.filterSeries = filterSeries$1;\n    exports.forever = forever$1;\n    exports.groupBy = groupBy;\n    exports.groupByLimit = groupByLimit$1;\n    exports.groupBySeries = groupBySeries;\n    exports.log = log;\n    exports.map = map$1;\n    exports.mapLimit = mapLimit$1;\n    exports.mapSeries = mapSeries$1;\n    exports.mapValues = mapValues;\n    exports.mapValuesLimit = mapValuesLimit$1;\n    exports.mapValuesSeries = mapValuesSeries;\n    exports.memoize = memoize;\n    exports.nextTick = nextTick;\n    exports.parallel = parallel;\n    exports.parallelLimit = parallelLimit;\n    exports.priorityQueue = priorityQueue;\n    exports.queue = queue$1;\n    exports.race = race$1;\n    exports.reduce = reduce$1;\n    exports.reduceRight = reduceRight;\n    exports.reflect = reflect;\n    exports.reflectAll = reflectAll;\n    exports.reject = reject$2;\n    exports.rejectLimit = rejectLimit$1;\n    exports.rejectSeries = rejectSeries$1;\n    exports.retry = retry;\n    exports.retryable = retryable;\n    exports.seq = seq;\n    exports.series = series;\n    exports.setImmediate = setImmediate$1;\n    exports.some = some$1;\n    exports.someLimit = someLimit$1;\n    exports.someSeries = someSeries$1;\n    exports.sortBy = sortBy$1;\n    exports.timeout = timeout;\n    exports.times = times;\n    exports.timesLimit = timesLimit;\n    exports.timesSeries = timesSeries;\n    exports.transform = transform;\n    exports.tryEach = tryEach$1;\n    exports.unmemoize = unmemoize;\n    exports.until = until;\n    exports.waterfall = waterfall$1;\n    exports.whilst = whilst$1;\n    exports.all = every$1;\n    exports.allLimit = everyLimit$1;\n    exports.allSeries = everySeries$1;\n    exports.any = some$1;\n    exports.anyLimit = someLimit$1;\n    exports.anySeries = someSeries$1;\n    exports.find = detect$1;\n    exports.findLimit = detectLimit$1;\n    exports.findSeries = detectSeries$1;\n    exports.flatMap = concat$1;\n    exports.flatMapLimit = concatLimit$1;\n    exports.flatMapSeries = concatSeries$1;\n    exports.forEach = each;\n    exports.forEachSeries = eachSeries$1;\n    exports.forEachLimit = eachLimit$2;\n    exports.forEachOf = eachOf$1;\n    exports.forEachOfSeries = eachOfSeries$1;\n    exports.forEachOfLimit = eachOfLimit$2;\n    exports.inject = reduce$1;\n    exports.foldl = reduce$1;\n    exports.foldr = reduceRight;\n    exports.select = filter$1;\n    exports.selectLimit = filterLimit$1;\n    exports.selectSeries = filterSeries$1;\n    exports.wrapSync = asyncify;\n    exports.during = whilst$1;\n    exports.doDuring = doWhilst$1;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", ";(function () { // closure for web browsers\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = LRUCache\n} else {\n  // just set the global for non-node platforms.\n  this.LRUCache = LRUCache\n}\n\nfunction hOP (obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key)\n}\n\nfunction naiveLength () { return 1 }\n\nfunction LRUCache (options) {\n  if (!(this instanceof LRUCache)) {\n    return new LRUCache(options)\n  }\n\n  var max\n  if (typeof options === 'number') {\n    max = options\n    options = { max: max }\n  }\n\n  if (!options) options = {}\n\n  max = options.max\n\n  var lengthCalculator = options.length || naiveLength\n\n  if (typeof lengthCalculator !== \"function\") {\n    lengthCalculator = naiveLength\n  }\n\n  if (!max || !(typeof max === \"number\") || max <= 0 ) {\n    // a little bit silly.  maybe this should throw?\n    max = Infinity\n  }\n\n  var allowStale = options.stale || false\n\n  var maxAge = options.maxAge || null\n\n  var dispose = options.dispose\n\n  var cache = Object.create(null) // hash of items by key\n    , lruList = Object.create(null) // list of items in order of use recency\n    , mru = 0 // most recently used\n    , lru = 0 // least recently used\n    , length = 0 // number of items in the list\n    , itemCount = 0\n\n\n  // resize the cache when the max changes.\n  Object.defineProperty(this, \"max\",\n    { set : function (mL) {\n        if (!mL || !(typeof mL === \"number\") || mL <= 0 ) mL = Infinity\n        max = mL\n        // if it gets above double max, trim right away.\n        // otherwise, do it whenever it's convenient.\n        if (length > max) trim()\n      }\n    , get : function () { return max }\n    , enumerable : true\n    })\n\n  // resize the cache when the lengthCalculator changes.\n  Object.defineProperty(this, \"lengthCalculator\",\n    { set : function (lC) {\n        if (typeof lC !== \"function\") {\n          lengthCalculator = naiveLength\n          length = itemCount\n          for (var key in cache) {\n            cache[key].length = 1\n          }\n        } else {\n          lengthCalculator = lC\n          length = 0\n          for (var key in cache) {\n            cache[key].length = lengthCalculator(cache[key].value)\n            length += cache[key].length\n          }\n        }\n\n        if (length > max) trim()\n      }\n    , get : function () { return lengthCalculator }\n    , enumerable : true\n    })\n\n  Object.defineProperty(this, \"length\",\n    { get : function () { return length }\n    , enumerable : true\n    })\n\n\n  Object.defineProperty(this, \"itemCount\",\n    { get : function () { return itemCount }\n    , enumerable : true\n    })\n\n  this.forEach = function (fn, thisp) {\n    thisp = thisp || this\n    var i = 0;\n    for (var k = mru - 1; k >= 0 && i < itemCount; k--) if (lruList[k]) {\n      i++\n      var hit = lruList[k]\n      fn.call(thisp, hit.value, hit.key, this)\n    }\n  }\n\n  this.keys = function () {\n    var keys = new Array(itemCount)\n    var i = 0\n    for (var k = mru - 1; k >= 0 && i < itemCount; k--) if (lruList[k]) {\n      var hit = lruList[k]\n      keys[i++] = hit.key\n    }\n    return keys\n  }\n\n  this.values = function () {\n    var values = new Array(itemCount)\n    var i = 0\n    for (var k = mru - 1; k >= 0 && i < itemCount; k--) if (lruList[k]) {\n      var hit = lruList[k]\n      values[i++] = hit.value\n    }\n    return values\n  }\n\n  this.reset = function () {\n    if (dispose) {\n      for (var k in cache) {\n        dispose(k, cache[k].value)\n      }\n    }\n    cache = {}\n    lruList = {}\n    lru = 0\n    mru = 0\n    length = 0\n    itemCount = 0\n  }\n\n  // Provided for debugging/dev purposes only. No promises whatsoever that\n  // this API stays stable.\n  this.dump = function () {\n    return cache\n  }\n\n  this.dumpLru = function () {\n    return lruList\n  }\n\n  this.set = function (key, value) {\n    if (hOP(cache, key)) {\n      // dispose of the old one before overwriting\n      if (dispose) dispose(key, cache[key].value)\n      if (maxAge) cache[key].now = Date.now()\n      cache[key].value = value\n      this.get(key)\n      return true\n    }\n\n    var len = lengthCalculator(value)\n    var age = maxAge ? Date.now() : 0\n    var hit = new Entry(key, value, mru++, len, age)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > max) {\n      if (dispose) dispose(key, value)\n      return false\n    }\n\n    length += hit.length\n    lruList[hit.lu] = cache[key] = hit\n    itemCount ++\n\n    if (length > max) trim()\n    return true\n  }\n\n  this.has = function (key) {\n    if (!hOP(cache, key)) return false\n    var hit = cache[key]\n    if (maxAge && (Date.now() - hit.now > maxAge)) {\n      return false\n    }\n    return true\n  }\n\n  this.get = function (key) {\n    if (!hOP(cache, key)) return\n    var hit = cache[key]\n    if (maxAge && (Date.now() - hit.now > maxAge)) {\n      this.del(key)\n      return allowStale ? hit.value : undefined\n    }\n    shiftLU(hit)\n    hit.lu = mru ++\n    lruList[hit.lu] = hit\n    return hit.value\n  }\n\n  this.del = function (key) {\n    del(cache[key])\n  }\n\n  function trim () {\n    while (lru < mru && length > max)\n      del(lruList[lru])\n  }\n\n  function shiftLU(hit) {\n    delete lruList[ hit.lu ]\n    while (lru < mru && !lruList[lru]) lru ++\n  }\n\n  function del(hit) {\n    if (hit) {\n      if (dispose) dispose(hit.key, hit.value)\n      length -= hit.length\n      itemCount --\n      delete cache[ hit.key ]\n      shiftLU(hit)\n    }\n  }\n}\n\n// classy, since V8 prefers predictable objects.\nfunction Entry (key, value, mru, len, age) {\n  this.key = key\n  this.value = value\n  this.lu = mru\n  this.length = len\n  this.now = age\n}\n\n})()\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n", "/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar SourceMapGenerator = require('./source-map-generator').SourceMapGenerator;\nvar util = require('./util');\n\n// Matches a Windows-style `\\r\\n` newline or a `\\n` newline used by all other\n// operating systems these days (capturing the result).\nvar REGEX_NEWLINE = /(\\r?\\n)/;\n\n// Newline character code for charCodeAt() comparisons\nvar NEWLINE_CODE = 10;\n\n// Private symbol for identifying `SourceNode`s when multiple versions of\n// the source-map library are loaded. This MUST NOT CHANGE across\n// versions!\nvar isSourceNode = \"$$$isSourceNode$$$\";\n\n/**\n * SourceNodes provide a way to abstract over interpolating/concatenating\n * snippets of generated JavaScript source code while maintaining the line and\n * column information associated with the original source code.\n *\n * @param aLine The original line number.\n * @param aColumn The original column number.\n * @param aSource The original source's filename.\n * @param aChunks Optional. An array of strings which are snippets of\n *        generated JS, or other SourceNodes.\n * @param aName The original identifier.\n */\nfunction SourceNode(aLine, aColumn, aSource, aChunks, aName) {\n  this.children = [];\n  this.sourceContents = {};\n  this.line = aLine == null ? null : aLine;\n  this.column = aColumn == null ? null : aColumn;\n  this.source = aSource == null ? null : aSource;\n  this.name = aName == null ? null : aName;\n  this[isSourceNode] = true;\n  if (aChunks != null) this.add(aChunks);\n}\n\n/**\n * Creates a SourceNode from generated code and a SourceMapConsumer.\n *\n * @param aGeneratedCode The generated code\n * @param aSourceMapConsumer The SourceMap for the generated code\n * @param aRelativePath Optional. The path that relative sources in the\n *        SourceMapConsumer should be relative to.\n */\nSourceNode.fromStringWithSourceMap =\n  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {\n    // The SourceNode we want to fill with the generated code\n    // and the SourceMap\n    var node = new SourceNode();\n\n    // All even indices of this array are one line of the generated code,\n    // while all odd indices are the newlines between two adjacent lines\n    // (since `REGEX_NEWLINE` captures its match).\n    // Processed fragments are accessed by calling `shiftNextLine`.\n    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);\n    var remainingLinesIndex = 0;\n    var shiftNextLine = function() {\n      var lineContents = getNextLine();\n      // The last line of a file might not have a newline.\n      var newLine = getNextLine() || \"\";\n      return lineContents + newLine;\n\n      function getNextLine() {\n        return remainingLinesIndex < remainingLines.length ?\n            remainingLines[remainingLinesIndex++] : undefined;\n      }\n    };\n\n    // We need to remember the position of \"remainingLines\"\n    var lastGeneratedLine = 1, lastGeneratedColumn = 0;\n\n    // The generate SourceNodes we need a code range.\n    // To extract it current and last mapping is used.\n    // Here we store the last mapping.\n    var lastMapping = null;\n\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      if (lastMapping !== null) {\n        // We add the code from \"lastMapping\" to \"mapping\":\n        // First check if there is a new line in between.\n        if (lastGeneratedLine < mapping.generatedLine) {\n          // Associate first line with \"lastMapping\"\n          addMappingWithCode(lastMapping, shiftNextLine());\n          lastGeneratedLine++;\n          lastGeneratedColumn = 0;\n          // The remaining code is added without mapping\n        } else {\n          // There is no new line in between.\n          // Associate the code between \"lastGeneratedColumn\" and\n          // \"mapping.generatedColumn\" with \"lastMapping\"\n          var nextLine = remainingLines[remainingLinesIndex];\n          var code = nextLine.substr(0, mapping.generatedColumn -\n                                        lastGeneratedColumn);\n          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -\n                                              lastGeneratedColumn);\n          lastGeneratedColumn = mapping.generatedColumn;\n          addMappingWithCode(lastMapping, code);\n          // No more remaining code, continue\n          lastMapping = mapping;\n          return;\n        }\n      }\n      // We add the generated code until the first mapping\n      // to the SourceNode without any mapping.\n      // Each line is added as separate string.\n      while (lastGeneratedLine < mapping.generatedLine) {\n        node.add(shiftNextLine());\n        lastGeneratedLine++;\n      }\n      if (lastGeneratedColumn < mapping.generatedColumn) {\n        var nextLine = remainingLines[remainingLinesIndex];\n        node.add(nextLine.substr(0, mapping.generatedColumn));\n        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);\n        lastGeneratedColumn = mapping.generatedColumn;\n      }\n      lastMapping = mapping;\n    }, this);\n    // We have processed all mappings.\n    if (remainingLinesIndex < remainingLines.length) {\n      if (lastMapping) {\n        // Associate the remaining code in the current line with \"lastMapping\"\n        addMappingWithCode(lastMapping, shiftNextLine());\n      }\n      // and add the remaining lines without any mapping\n      node.add(remainingLines.splice(remainingLinesIndex).join(\"\"));\n    }\n\n    // Copy sourcesContent into SourceNode\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aRelativePath != null) {\n          sourceFile = util.join(aRelativePath, sourceFile);\n        }\n        node.setSourceContent(sourceFile, content);\n      }\n    });\n\n    return node;\n\n    function addMappingWithCode(mapping, code) {\n      if (mapping === null || mapping.source === undefined) {\n        node.add(code);\n      } else {\n        var source = aRelativePath\n          ? util.join(aRelativePath, mapping.source)\n          : mapping.source;\n        node.add(new SourceNode(mapping.originalLine,\n                                mapping.originalColumn,\n                                source,\n                                code,\n                                mapping.name));\n      }\n    }\n  };\n\n/**\n * Add a chunk of generated JS to this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.add = function SourceNode_add(aChunk) {\n  if (Array.isArray(aChunk)) {\n    aChunk.forEach(function (chunk) {\n      this.add(chunk);\n    }, this);\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    if (aChunk) {\n      this.children.push(aChunk);\n    }\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Add a chunk of generated JS to the beginning of this source node.\n *\n * @param aChunk A string snippet of generated JS code, another instance of\n *        SourceNode, or an array where each member is one of those things.\n */\nSourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {\n  if (Array.isArray(aChunk)) {\n    for (var i = aChunk.length-1; i >= 0; i--) {\n      this.prepend(aChunk[i]);\n    }\n  }\n  else if (aChunk[isSourceNode] || typeof aChunk === \"string\") {\n    this.children.unshift(aChunk);\n  }\n  else {\n    throw new TypeError(\n      \"Expected a SourceNode, string, or an array of SourceNodes and strings. Got \" + aChunk\n    );\n  }\n  return this;\n};\n\n/**\n * Walk over the tree of JS snippets in this node and its children. The\n * walking function is called once for each snippet of JS and is passed that\n * snippet and the its original associated source's line/column location.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walk = function SourceNode_walk(aFn) {\n  var chunk;\n  for (var i = 0, len = this.children.length; i < len; i++) {\n    chunk = this.children[i];\n    if (chunk[isSourceNode]) {\n      chunk.walk(aFn);\n    }\n    else {\n      if (chunk !== '') {\n        aFn(chunk, { source: this.source,\n                     line: this.line,\n                     column: this.column,\n                     name: this.name });\n      }\n    }\n  }\n};\n\n/**\n * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between\n * each of `this.children`.\n *\n * @param aSep The separator.\n */\nSourceNode.prototype.join = function SourceNode_join(aSep) {\n  var newChildren;\n  var i;\n  var len = this.children.length;\n  if (len > 0) {\n    newChildren = [];\n    for (i = 0; i < len-1; i++) {\n      newChildren.push(this.children[i]);\n      newChildren.push(aSep);\n    }\n    newChildren.push(this.children[i]);\n    this.children = newChildren;\n  }\n  return this;\n};\n\n/**\n * Call String.prototype.replace on the very right-most source snippet. Useful\n * for trimming whitespace from the end of a source node, etc.\n *\n * @param aPattern The pattern to replace.\n * @param aReplacement The thing to replace the pattern with.\n */\nSourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {\n  var lastChild = this.children[this.children.length - 1];\n  if (lastChild[isSourceNode]) {\n    lastChild.replaceRight(aPattern, aReplacement);\n  }\n  else if (typeof lastChild === 'string') {\n    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);\n  }\n  else {\n    this.children.push(''.replace(aPattern, aReplacement));\n  }\n  return this;\n};\n\n/**\n * Set the source content for a source file. This will be added to the SourceMapGenerator\n * in the sourcesContent field.\n *\n * @param aSourceFile The filename of the source file\n * @param aSourceContent The content of the source file\n */\nSourceNode.prototype.setSourceContent =\n  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {\n    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;\n  };\n\n/**\n * Walk over the tree of SourceNodes. The walking function is called for each\n * source file content and is passed the filename and source content.\n *\n * @param aFn The traversal function.\n */\nSourceNode.prototype.walkSourceContents =\n  function SourceNode_walkSourceContents(aFn) {\n    for (var i = 0, len = this.children.length; i < len; i++) {\n      if (this.children[i][isSourceNode]) {\n        this.children[i].walkSourceContents(aFn);\n      }\n    }\n\n    var sources = Object.keys(this.sourceContents);\n    for (var i = 0, len = sources.length; i < len; i++) {\n      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);\n    }\n  };\n\n/**\n * Return the string representation of this source node. Walks over the tree\n * and concatenates all the various snippets together to one string.\n */\nSourceNode.prototype.toString = function SourceNode_toString() {\n  var str = \"\";\n  this.walk(function (chunk) {\n    str += chunk;\n  });\n  return str;\n};\n\n/**\n * Returns the string representation of this source node along with a source\n * map.\n */\nSourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {\n  var generated = {\n    code: \"\",\n    line: 1,\n    column: 0\n  };\n  var map = new SourceMapGenerator(aArgs);\n  var sourceMappingActive = false;\n  var lastOriginalSource = null;\n  var lastOriginalLine = null;\n  var lastOriginalColumn = null;\n  var lastOriginalName = null;\n  this.walk(function (chunk, original) {\n    generated.code += chunk;\n    if (original.source !== null\n        && original.line !== null\n        && original.column !== null) {\n      if(lastOriginalSource !== original.source\n         || lastOriginalLine !== original.line\n         || lastOriginalColumn !== original.column\n         || lastOriginalName !== original.name) {\n        map.addMapping({\n          source: original.source,\n          original: {\n            line: original.line,\n            column: original.column\n          },\n          generated: {\n            line: generated.line,\n            column: generated.column\n          },\n          name: original.name\n        });\n      }\n      lastOriginalSource = original.source;\n      lastOriginalLine = original.line;\n      lastOriginalColumn = original.column;\n      lastOriginalName = original.name;\n      sourceMappingActive = true;\n    } else if (sourceMappingActive) {\n      map.addMapping({\n        generated: {\n          line: generated.line,\n          column: generated.column\n        }\n      });\n      lastOriginalSource = null;\n      sourceMappingActive = false;\n    }\n    for (var idx = 0, length = chunk.length; idx < length; idx++) {\n      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {\n        generated.line++;\n        generated.column = 0;\n        // Mappings end at eol\n        if (idx + 1 === length) {\n          lastOriginalSource = null;\n          sourceMappingActive = false;\n        } else if (sourceMappingActive) {\n          map.addMapping({\n            source: original.source,\n            original: {\n              line: original.line,\n              column: original.column\n            },\n            generated: {\n              line: generated.line,\n              column: generated.column\n            },\n            name: original.name\n          });\n        }\n      } else {\n        generated.column++;\n      }\n    }\n  });\n  this.walkSourceContents(function (sourceFile, sourceContent) {\n    map.setSourceContent(sourceFile, sourceContent);\n  });\n\n  return { code: generated.code, map: map };\n};\n\nexports.SourceNode = SourceNode;\n", "/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n", "var SourceMapConsumer = require('source-map').SourceMapConsumer;\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Uses Node source-map to map transpiled JS stack locations to original\n * source file locations.\n *\n * The default behavior uses source map comments in the transpiled files\n * to identify the path of source maps. A later enhancement can allow\n * source map paths to be passed in by the caller.\n *\n * These functions are based on https://github.com/evanw/node-source-map-support/blob/master/source-map-support.js\n * simplified to target Node only, and optimized for Rollbar configuration scenarios.\n */\n\n// Maps a file path to a string containing the file contents\nvar fileContentsCache = {};\n\n// Maps a file path to a source map for that file\nvar sourceMapCache = {};\n\n// Maps a file path to sourcesContent string\nvar sourcesContentCache = {};\n\n// Regex for detecting source maps\nvar reSourceMap = /^data:application\\/json[^,]+base64,/;\n\nfunction retrieveFile(path) {\n  // Trim the path to make sure there is no extra whitespace.\n  path = path.trim();\n  if (/^file:/.test(path)) {\n    // existsSync/readFileSync can't handle file protocol, but once stripped, it works\n    path = path.replace(/file:\\/\\/\\/(\\w:)?/, function(_protocol, drive) {\n      return drive ?\n        '' : // file:///C:/dir/file -> C:/dir/file\n        '/'; // file:///root-dir/file -> /root-dir/file\n    });\n  }\n  if (path in fileContentsCache) {\n    return fileContentsCache[path];\n  }\n\n  var contents = '';\n  try {\n    if (fs.existsSync(path)) {\n      contents = fs.readFileSync(path, 'utf8');\n    }\n  } catch (er) {\n    /* ignore any errors */\n  }\n\n  return fileContentsCache[path] = contents;\n}\n\n// Support URLs relative to a directory, but be careful about a protocol prefix\n// in case we are in the browser (i.e. directories may start with \"http://\" or \"file:///\")\nfunction supportRelativeURL(file, url) {\n  if (!file) return url;\n  var dir = path.dirname(file);\n  var match = /^\\w+:\\/\\/[^\\/]*/.exec(dir);\n  var protocol = match ? match[0] : '';\n  var startPath = dir.slice(protocol.length);\n  if (protocol && /^\\/\\w\\:/.test(startPath)) {\n    // handle file:///C:/ paths\n    protocol += '/';\n    return protocol + path.resolve(dir.slice(protocol.length), url).replace(/\\\\/g, '/');\n  }\n  return protocol + path.resolve(dir.slice(protocol.length), url);\n}\n\nfunction retrieveSourceMapURL(source) {\n  var fileData;\n\n  // Get the URL of the source map\n  fileData = retrieveFile(source);\n  var re = /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/)[ \\t]*$)/mg;\n  // Keep executing the search to find the *last* sourceMappingURL to avoid\n  // picking up sourceMappingURLs from comments, strings, etc.\n  var lastMatch, match;\n  while ((match = re.exec(fileData))) lastMatch = match;\n  if (!lastMatch) return null;\n  return lastMatch[1];\n}\n\n// Takes a generated source filename; returns a {map, optional url} object, or null if\n// there is no source map.  The map field may be either a string or the parsed\n// JSON object (ie, it must be a valid argument to the SourceMapConsumer\n// constructor).\nfunction retrieveSourceMap(source) {\n  var sourceMappingURL = retrieveSourceMapURL(source);\n  if (!sourceMappingURL) return null;\n\n  // Read the contents of the source map\n  var sourceMapData;\n  if (reSourceMap.test(sourceMappingURL)) {\n    // Support source map URL as a data url\n    var rawData = sourceMappingURL.slice(sourceMappingURL.indexOf(',') + 1);\n    sourceMapData = Buffer.from(rawData, 'base64').toString();\n    sourceMappingURL = source;\n  } else {\n    // Support source map URLs relative to the source URL\n    sourceMappingURL = supportRelativeURL(source, sourceMappingURL);\n    sourceMapData = retrieveFile(sourceMappingURL);\n  }\n\n  if (!sourceMapData) {\n    return null;\n  }\n\n  return {\n    url: sourceMappingURL,\n    map: sourceMapData\n  };\n}\n\nfunction cacheSourceContent(sourceMap, originalSource, newSource) {\n  if (sourcesContentCache[newSource]) {\n    return;\n  }\n\n  // The sourceContentFor lookup needs the original source url as found in the\n  // map file. However the client lookup in sourcesContentCache will use\n  // a rewritten form of the url, hence originalSource and newSource.\n  sourcesContentCache[newSource] = sourceMap.map.sourceContentFor(originalSource, true);\n}\n\nexports.mapSourcePosition = function mapSourcePosition(position, diagnostic) {\n  var sourceMap = sourceMapCache[position.source];\n  if (!sourceMap) {\n    // Call the (overrideable) retrieveSourceMap function to get the source map.\n    var urlAndMap = retrieveSourceMap(position.source);\n    if (urlAndMap) {\n      sourceMap = sourceMapCache[position.source] = {\n        url: urlAndMap.url,\n        map: new SourceMapConsumer(urlAndMap.map)\n      };\n      diagnostic.node_source_maps.source_mapping_urls[position.source] = urlAndMap.url;\n\n      // Load all sources stored inline with the source map into the file cache\n      // to pretend like they are already loaded. They may not exist on disk.\n      if (sourceMap.map.sourcesContent) {\n        sourceMap.map.sources.forEach(function(source, i) {\n          var contents = sourceMap.map.sourcesContent[i];\n          if (contents) {\n            var url = supportRelativeURL(sourceMap.url, source);\n            fileContentsCache[url] = contents;\n          }\n        });\n      }\n    } else {\n      sourceMap = sourceMapCache[position.source] = {\n        url: null,\n        map: null\n      };\n      diagnostic.node_source_maps.source_mapping_urls[position.source] = 'not found';\n    }\n  }\n\n  // Resolve the source URL relative to the URL of the source map\n  if (sourceMap && sourceMap.map && typeof sourceMap.map.originalPositionFor === 'function') {\n    var originalPosition = sourceMap.map.originalPositionFor(position);\n\n    // Only return the original position if a matching line was found. If no\n    // matching line is found then we return position instead, which will cause\n    // the stack trace to print the path and line for the compiled file. It is\n    // better to give a precise location in the compiled file than a vague\n    // location in the original file.\n    if (originalPosition.source !== null) {\n      var originalSource = originalPosition.source;\n      originalPosition.source = supportRelativeURL(\n        sourceMap.url, originalPosition.source);\n      cacheSourceContent(sourceMap, originalSource, originalPosition.source);\n      return originalPosition;\n    }\n  }\n\n  return position;\n}\n\nexports.sourceContent = function sourceContent(source) {\n  return sourcesContentCache[source];\n}\n", "'use strict';\n\nvar logger = require('./logger');\nvar async = require('async');\nvar fs = require('fs');\nvar lru = require('lru-cache');\nvar util = require('util');\nvar stackTrace = require('./sourceMap/stackTrace');\n\nvar linesOfContext = 3;\nvar tracePattern =\n  /^\\s*at (?:([^(]+(?: \\[\\w\\s+\\])?(?:.*\\)*)) )?\\(?(.+?)(?::(\\d+):(\\d+)(?:, <js>:(\\d+):(\\d+))?)?\\)?$/;\n\nvar jadeTracePattern = /^\\s*at .+ \\(.+ (at[^)]+\\))\\)$/;\nvar jadeFramePattern = /^\\s*(>?) [0-9]+\\|(\\s*.+)$/m;\n\n\nvar cache = new lru({max: 100});\nvar pendingReads = {};\n\nexports.cache = cache;\nexports.pendingReads = pendingReads;\n\n\n/*\n * Internal\n */\n\n\nfunction getMultipleErrors(errors) {\n  var errArray, key;\n\n  if (errors === null || errors === undefined) {\n    return null;\n  }\n\n  if (typeof errors !== 'object') {\n    return null;\n  }\n\n  if (util.isArray(errors)) {\n    return errors;\n  }\n\n  errArray = [];\n\n  for (key in errors) {\n    if (Object.prototype.hasOwnProperty.call(errors, key)) {\n      errArray.push(errors[key]);\n    }\n  }\n  return errArray;\n}\n\n\nfunction parseJadeDebugFrame(body) {\n  var lines, lineNumSep, filename, lineno, numLines, msg, i,\n    contextLine, preContext, postContext, line, jadeMatch;\n\n  // Given a Jade exception body, return a frame object\n  lines = body.split('\\n');\n  lineNumSep = lines[0].indexOf(':');\n  filename = lines[0].slice(0, lineNumSep);\n  lineno = parseInt(lines[0].slice(lineNumSep + 1), 10);\n  numLines = lines.length;\n  msg = lines[numLines - 1];\n\n  lines = lines.slice(1, numLines - 1);\n\n  preContext = [];\n  postContext = [];\n  for (i = 0; i < numLines - 2; ++i) {\n    line = lines[i];\n    jadeMatch = line.match(jadeFramePattern);\n    if (jadeMatch) {\n      if (jadeMatch[1] === '>') {\n        contextLine = jadeMatch[2];\n      } else {\n        if (!contextLine) {\n          if (jadeMatch[2]) {\n            preContext.push(jadeMatch[2]);\n          }\n        } else {\n          if (jadeMatch[2]) {\n            postContext.push(jadeMatch[2]);\n          }\n        }\n      }\n    }\n  }\n\n  preContext = preContext.slice(0, Math.min(preContext.length, linesOfContext));\n  postContext = postContext.slice(0, Math.min(postContext.length, linesOfContext));\n\n  return {\n    frame: {\n      method: '<jade>',\n      filename: filename,\n      lineno: lineno,\n      code: contextLine,\n      context: {\n        pre: preContext,\n        post: postContext\n      }\n    },\n    message: msg\n  };\n}\n\n\nfunction extractContextLines(frame, fileLines) {\n  frame.code = fileLines[frame.lineno - 1];\n  frame.context = {\n    pre: fileLines.slice(Math.max(0, frame.lineno - (linesOfContext + 1)), frame.lineno - 1),\n    post: fileLines.slice(frame.lineno, frame.lineno + linesOfContext)\n  };\n}\n\nfunction mapPosition(position, diagnostic) {\n  return stackTrace.mapSourcePosition({\n      source: position.source,\n      line: position.line,\n      column: position.column\n    },\n    diagnostic\n  );\n}\n\nfunction parseFrameLine(line, callback) {\n  var matched, curLine, data, frame, position;\n\n  curLine = line;\n  matched = curLine.match(jadeTracePattern);\n  if (matched) {\n    curLine = matched[1];\n  }\n\n  matched = curLine.match(tracePattern);\n  if (!matched) {\n    return callback(null, null);\n  }\n\n  data = matched.slice(1);\n  var runtimePosition = {\n    source: data[1],\n    line: Math.floor(data[2]),\n    column: Math.floor(data[3]) - 1\n  };\n  if (this.useSourceMaps) {\n    position = mapPosition(runtimePosition, this.diagnostic);\n  } else {\n    position = runtimePosition;\n  }\n\n  frame = {\n    method: data[0] || '<unknown>',\n    filename: position.source,\n    lineno: position.line,\n    colno: position.column,\n    runtimePosition: runtimePosition // Used to match frames for locals\n  };\n\n  // For coffeescript, lineno and colno refer to the .coffee positions\n  // The .js lineno and colno will be stored in compiled_*\n  if (data[4]) {\n    frame.compiled_lineno = Math.floor(data[4]);\n  }\n\n  if (data[5]) {\n    frame.compiled_colno = Math.floor(data[5]);\n  }\n\n  callback(null, frame);\n}\n\n\nfunction shouldReadFrameFile(frameFilename, callback) {\n  var isValidFilename, isCached, isPending;\n\n  isValidFilename = frameFilename[0] === '/' || frameFilename[0] === '.';\n  isCached = !!cache.get(frameFilename);\n  isPending = !!pendingReads[frameFilename];\n\n  callback(null, isValidFilename && !isCached && !isPending);\n}\n\n\nfunction readFileLines(filename, callback) {\n  try {\n    fs.readFile(filename, function (err, fileData) {\n      var fileLines;\n      if (err) {\n        return callback(err);\n      }\n\n      fileLines = fileData.toString('utf8').split('\\n');\n      return callback(null, fileLines);\n    });\n  } catch (e) {\n    logger.log(e);\n  }\n}\n\nfunction checkFileExists(filename, callback) {\n  if (stackTrace.sourceContent(filename)) {\n    return callback(null, true);\n  }\n  fs.stat(filename, function (err) {\n    callback(null, !err);\n  });\n}\n\n\nfunction gatherContexts(frames, callback) {\n  var frameFilenames = [];\n\n  frames.forEach(function (frame) {\n    if (frameFilenames.indexOf(frame.filename) === -1) {\n      frameFilenames.push(frame.filename);\n    }\n  });\n\n  async.filter(frameFilenames, shouldReadFrameFile, function (err, results) {\n    if (err) return callback(err);\n\n    var tempFileCache;\n\n    tempFileCache = {};\n\n    function cacheLines(filename, lines) {\n      // Cache this in a temp cache as well as the LRU cache so that\n      // we know we will have all of the necessary file contents for\n      // each filename in tempFileCache.\n      tempFileCache[filename] = lines;\n      cache.set(filename, lines);\n    }\n\n    function gatherFileData(filename, callback) {\n      var sourceContent = stackTrace.sourceContent(filename);\n      if (sourceContent) {\n        try {\n          var lines = sourceContent.split('\\n');\n          cacheLines(filename, lines);\n          return callback(null);\n        } catch (err) {\n          return callback(err);\n        }\n      }\n      readFileLines(filename, function (err, lines) {\n        if (err) {\n          return callback(err);\n        }\n\n        cacheLines(filename, lines);\n\n        return callback(null);\n      });\n    }\n\n    function gatherContextLines(frame, callback) {\n      var lines = tempFileCache[frame.filename] || cache.get(frame.filename);\n\n      if (lines) {\n        extractContextLines(frame, lines);\n      }\n      callback(null);\n    }\n\n    async.filter(results, checkFileExists, function (err, filenames) {\n      if (err) return callback(err);\n      async.each(filenames, gatherFileData, function (err) {\n        if (err) {\n          return callback(err);\n        }\n        async.eachSeries(frames, gatherContextLines, function (err) {\n          if (err) {\n            return callback(err);\n          }\n          callback(null, frames);\n        });\n      });\n    });\n\n  });\n}\n\n/*\n * Public API\n */\n\n\nexports.parseException = function (exc, options, item, callback) {\n  var multipleErrs = getMultipleErrors(exc.errors);\n\n  return exports.parseStack(exc.stack, options, item, function (err, stack) {\n    var message, clss, ret, firstErr, jadeMatch, jadeData;\n\n    if (err) {\n      logger.error('could not parse exception, err: ' + err);\n      return callback(err);\n    }\n    message = String(exc.message || '<no message>') ;\n    clss = String(exc.name || '<unknown>');\n\n    ret = {\n      class: clss,\n      message: message,\n      frames: stack\n    };\n\n    if (multipleErrs && multipleErrs.length) {\n      firstErr = multipleErrs[0];\n      ret = {\n        class: clss,\n        message: String(firstErr.message || '<no message>'),\n        frames: stack\n      };\n    }\n\n    jadeMatch = message.match(jadeFramePattern);\n    if (jadeMatch) {\n      jadeData = parseJadeDebugFrame(message);\n      ret.message = jadeData.message;\n      ret.frames.push(jadeData.frame);\n    }\n\n    if (item.localsMap) {\n      item.notifier.locals.mergeLocals(item.localsMap, stack, exc.stack, function (err) {\n        if (err) {\n          logger.error('could not parse locals, err: ' + err);\n\n          // Don't reject the occurrence, record the error instead.\n          item.diagnostic['error parsing locals'] = err;\n        }\n\n        return callback(null, ret);\n      });\n    } else {\n      return callback(null, ret);\n    }\n  });\n};\n\n\nexports.parseStack = function (stack, options, item, callback) {\n  var lines, _stack = stack;\n\n  // Some JS frameworks (e.g. Meteor) might bury the stack property\n  while (typeof _stack === 'object') {\n    _stack = _stack && _stack.stack;\n  }\n\n  // grab all lines except the first\n  lines = (_stack || '').split('\\n').slice(1);\n\n  if (options.nodeSourceMaps) {\n    item.diagnostic.node_source_maps = {};\n    item.diagnostic.node_source_maps.source_mapping_urls = {};\n  }\n\n  // Parse out all of the frame and filename info\n  async.map(lines, parseFrameLine.bind({ useSourceMaps: options.nodeSourceMaps, diagnostic: item.diagnostic }), function (err, frames) {\n    if (err) {\n      return callback(err);\n    }\n    frames.reverse();\n    async.filter(frames, function (frame, callback) { callback(null, !!frame); }, function (err, results) {\n      if (err) return callback(err);\n      gatherContexts(results, callback);\n    });\n  });\n};\n", "/*!\n * is.js 0.8.0\n * Author: Aras Atasaygin\n */\n\n// AMD with global, Node, or global\n;(function(root, factory) {    // eslint-disable-line no-extra-semi\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(function() {\n            // Also create a global in case some scripts\n            // that are loaded still are looking for\n            // a global even when an AMD loader is in use.\n            return (root.is = factory());\n        });\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like enviroments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is self)\n        root.is = factory();\n    }\n}(this, function() {\n\n    // Baseline\n    /* -------------------------------------------------------------------------- */\n\n    // define 'is' object and current version\n    var is = {};\n    is.VERSION = '0.8.0';\n\n    // define interfaces\n    is.not = {};\n    is.all = {};\n    is.any = {};\n\n    // cache some methods to call later on\n    var toString = Object.prototype.toString;\n    var slice = Array.prototype.slice;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // helper function which reverses the sense of predicate result\n    function not(func) {\n        return function() {\n            return !func.apply(null, slice.call(arguments));\n        };\n    }\n\n    // helper function which call predicate function per parameter and return true if all pass\n    function all(func) {\n        return function() {\n            var params = getParams(arguments);\n            var length = params.length;\n            for (var i = 0; i < length; i++) {\n                if (!func.call(null, params[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n\n    // helper function which call predicate function per parameter and return true if any pass\n    function any(func) {\n        return function() {\n            var params = getParams(arguments);\n            var length = params.length;\n            for (var i = 0; i < length; i++) {\n                if (func.call(null, params[i])) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n\n    // build a 'comparator' object for various comparison checks\n    var comparator = {\n        '<': function(a, b) { return a < b; },\n        '<=': function(a, b) { return a <= b; },\n        '>': function(a, b) { return a > b; },\n        '>=': function(a, b) { return a >= b; }\n    }\n\n    // helper function which compares a version to a range\n    function compareVersion(version, range) {\n        var string = (range + '');\n        var n = +(string.match(/\\d+/) || NaN);\n        var op = string.match(/^[<>]=?|/)[0];\n        return comparator[op] ? comparator[op](version, n) : (version == n || n !== n);\n    }\n\n    // helper function which extracts params from arguments\n    function getParams(args) {\n        var params = slice.call(args);\n        var length = params.length;\n        if (length === 1 && is.array(params[0])) {    // support array\n            params = params[0];\n        }\n        return params;\n    }\n\n    // Type checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given value Arguments?\n    is.arguments = function(value) {    // fallback check is for IE\n        return toString.call(value) === '[object Arguments]' ||\n            (value != null && typeof value === 'object' && 'callee' in value);\n    };\n\n    // is a given value Array?\n    is.array = Array.isArray || function(value) {    // check native isArray first\n        return toString.call(value) === '[object Array]';\n    };\n\n    // is a given value Boolean?\n    is.boolean = function(value) {\n        return value === true || value === false || toString.call(value) === '[object Boolean]';\n    };\n\n    // is a given value Char?\n    is.char = function(value) {\n        return is.string(value) && value.length === 1;\n    };\n\n    // is a given value Date Object?\n    is.date = function(value) {\n        return toString.call(value) === '[object Date]';\n    };\n\n    // is a given object a DOM node?\n    is.domNode = function(object) {\n        return is.object(object) && object.nodeType > 0;\n    };\n\n    // is a given value Error object?\n    is.error = function(value) {\n        return toString.call(value) === '[object Error]';\n    };\n\n    // is a given value function?\n    is['function'] = function(value) {    // fallback check is for IE\n        return toString.call(value) === '[object Function]' || typeof value === 'function';\n    };\n\n    // is given value a pure JSON object?\n    is.json = function(value) {\n        return toString.call(value) === '[object Object]';\n    };\n\n    // is a given value NaN?\n    is.nan = function(value) {    // NaN is number :) Also it is the only value which does not equal itself\n        return value !== value;\n    };\n\n    // is a given value null?\n    is['null'] = function(value) {\n        return value === null;\n    };\n\n    // is a given value number?\n    is.number = function(value) {\n        return is.not.nan(value) && toString.call(value) === '[object Number]';\n    };\n\n    // is a given value object?\n    is.object = function(value) {\n        return Object(value) === value;\n    };\n\n    // is a given value RegExp?\n    is.regexp = function(value) {\n        return toString.call(value) === '[object RegExp]';\n    };\n\n    // are given values same type?\n    // prevent NaN, Number same type check\n    is.sameType = function(value, other) {\n        var tag = toString.call(value);\n        if (tag !== toString.call(other)) {\n            return false;\n        }\n        if (tag === '[object Number]') {\n            return !is.any.nan(value, other) || is.all.nan(value, other);\n        }\n        return true;\n    };\n    // sameType method does not support 'all' and 'any' interfaces\n    is.sameType.api = ['not'];\n\n    // is a given value String?\n    is.string = function(value) {\n        return toString.call(value) === '[object String]';\n    };\n\n    // is a given value undefined?\n    is.undefined = function(value) {\n        return value === void 0;\n    };\n\n    // is a given value window?\n    // setInterval method is only available for window object\n    is.windowObject = function(value) {\n        return value != null && typeof value === 'object' && 'setInterval' in value;\n    };\n\n    // Presence checks\n    /* -------------------------------------------------------------------------- */\n\n    //is a given value empty? Objects, arrays, strings\n    is.empty = function(value) {\n        if (is.object(value)) {\n            var length = Object.getOwnPropertyNames(value).length;\n            if (length === 0 || (length === 1 && is.array(value)) ||\n                    (length === 2 && is.arguments(value))) {\n                return true;\n            }\n            return false;\n        }\n        return value === '';\n    };\n\n    // is a given value existy?\n    is.existy = function(value) {\n        return value != null;\n    };\n\n    // is a given value falsy?\n    is.falsy = function(value) {\n        return !value;\n    };\n\n    // is a given value truthy?\n    is.truthy = not(is.falsy);\n\n    // Arithmetic checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given number above minimum parameter?\n    is.above = function(n, min) {\n        return is.all.number(n, min) && n > min;\n    };\n    // above method does not support 'all' and 'any' interfaces\n    is.above.api = ['not'];\n\n    // is a given number decimal?\n    is.decimal = function(n) {\n        return is.number(n) && n % 1 !== 0;\n    };\n\n    // are given values equal? supports numbers, strings, regexes, booleans\n    // TODO: Add object and array support\n    is.equal = function(value, other) {\n        // check 0 and -0 equity with Infinity and -Infinity\n        if (is.all.number(value, other)) {\n            return value === other && 1 / value === 1 / other;\n        }\n        // check regexes as strings too\n        if (is.all.string(value, other) || is.all.regexp(value, other)) {\n            return '' + value === '' + other;\n        }\n        if (is.all.boolean(value, other)) {\n            return value === other;\n        }\n        return false;\n    };\n    // equal method does not support 'all' and 'any' interfaces\n    is.equal.api = ['not'];\n\n    // is a given number even?\n    is.even = function(n) {\n        return is.number(n) && n % 2 === 0;\n    };\n\n    // is a given number finite?\n    is.finite = isFinite || function(n) {\n        return is.not.infinite(n) && is.not.nan(n);\n    };\n\n    // is a given number infinite?\n    is.infinite = function(n) {\n        return n === Infinity || n === -Infinity;\n    };\n\n    // is a given number integer?\n    is.integer = function(n) {\n        return is.number(n) && n % 1 === 0;\n    };\n\n    // is a given number negative?\n    is.negative = function(n) {\n        return is.number(n) && n < 0;\n    };\n\n    // is a given number odd?\n    is.odd = function(n) {\n        return is.number(n) && n % 2 === 1;\n    };\n\n    // is a given number positive?\n    is.positive = function(n) {\n        return is.number(n) && n > 0;\n    };\n\n    // is a given number above maximum parameter?\n    is.under = function(n, max) {\n        return is.all.number(n, max) && n < max;\n    };\n    // least method does not support 'all' and 'any' interfaces\n    is.under.api = ['not'];\n\n    // is a given number within minimum and maximum parameters?\n    is.within = function(n, min, max) {\n        return is.all.number(n, min, max) && n > min && n < max;\n    };\n    // within method does not support 'all' and 'any' interfaces\n    is.within.api = ['not'];\n\n    // Regexp checks\n    /* -------------------------------------------------------------------------- */\n    // Steven Levithan, Jan Goyvaerts: Regular Expressions Cookbook\n    // Scott Gonzalez: Email address validation\n\n    // dateString match m/d/yy and mm/dd/yyyy, allowing any combination of one or two digits for the day and month, and two or four digits for the year\n    // eppPhone match extensible provisioning protocol format\n    // nanpPhone match north american number plan format\n    // time match hours, minutes, and seconds, 24-hour clock\n    var regexes = {\n        affirmative: /^(?:1|t(?:rue)?|y(?:es)?|ok(?:ay)?)$/,\n        alphaNumeric: /^[A-Za-z0-9]+$/,\n        caPostalCode: /^(?!.*[DFIOQU])[A-VXY][0-9][A-Z]\\s?[0-9][A-Z][0-9]$/,\n        creditCard: /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/,\n        dateString: /^(1[0-2]|0?[1-9])([\\/-])(3[01]|[12][0-9]|0?[1-9])(?:\\2)(?:[0-9]{2})?[0-9]{2}$/,\n        email: /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i, // eslint-disable-line no-control-regex\n        eppPhone: /^\\+[0-9]{1,3}\\.[0-9]{4,14}(?:x.+)?$/,\n        hexadecimal: /^(?:0x)?[0-9a-fA-F]+$/,\n        hexColor: /^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/,\n        ipv4: /^(?:(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])\\.){3}(?:\\d|[1-9]\\d|1\\d{2}|2[0-4]\\d|25[0-5])$/,\n        ipv6: /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i,\n        nanpPhone: /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/,\n        socialSecurityNumber: /^(?!000|666)[0-8][0-9]{2}-?(?!00)[0-9]{2}-?(?!0000)[0-9]{4}$/,\n        timeString: /^(2[0-3]|[01]?[0-9]):([0-5]?[0-9]):([0-5]?[0-9])$/,\n        ukPostCode: /^[A-Z]{1,2}[0-9RCHNQ][0-9A-Z]?\\s?[0-9][ABD-HJLNP-UW-Z]{2}$|^[A-Z]{2}-?[0-9]{4}$/,\n        url: /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/i,\n        usZipCode: /^[0-9]{5}(?:-[0-9]{4})?$/\n    };\n\n    function regexpCheck(regexp, regexes) {\n        is[regexp] = function(value) {\n            return regexes[regexp].test(value);\n        };\n    }\n\n    // create regexp checks methods from 'regexes' object\n    for (var regexp in regexes) {\n        if (regexes.hasOwnProperty(regexp)) {\n            regexpCheck(regexp, regexes);\n        }\n    }\n\n    // simplify IP checks by calling the regex helpers for IPv4 and IPv6\n    is.ip = function(value) {\n        return is.ipv4(value) || is.ipv6(value);\n    };\n\n    // String checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given string or sentence capitalized?\n    is.capitalized = function(string) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        var words = string.split(' ');\n        for (var i = 0; i < words.length; i++) {\n            var word = words[i];\n            if (word.length) {\n                var chr = word.charAt(0);\n                if (chr !== chr.toUpperCase()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n\n    // is string end with a given target parameter?\n    is.endWith = function(string, target) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        target += '';\n        var position = string.length - target.length;\n        return position >= 0 && string.indexOf(target, position) === position;\n    };\n    // endWith method does not support 'all' and 'any' interfaces\n    is.endWith.api = ['not'];\n\n    // is a given string include parameter target?\n    is.include = function(string, target) {\n        return string.indexOf(target) > -1;\n    };\n    // include method does not support 'all' and 'any' interfaces\n    is.include.api = ['not'];\n\n    // is a given string all lowercase?\n    is.lowerCase = function(string) {\n        return is.string(string) && string === string.toLowerCase();\n    };\n\n    // is a given string palindrome?\n    is.palindrome = function(string) {\n        if (is.not.string(string)) {\n            return false;\n        }\n        string = string.replace(/[^a-zA-Z0-9]+/g, '').toLowerCase();\n        var length = string.length - 1;\n        for (var i = 0, half = Math.floor(length / 2); i <= half; i++) {\n            if (string.charAt(i) !== string.charAt(length - i)) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // is a given value space?\n    // horizantal tab: 9, line feed: 10, vertical tab: 11, form feed: 12, carriage return: 13, space: 32\n    is.space = function(value) {\n        if (is.not.char(value)) {\n            return false;\n        }\n        var charCode = value.charCodeAt(0);\n        return (charCode > 8 && charCode < 14) || charCode === 32;\n    };\n\n    // is string start with a given target parameter?\n    is.startWith = function(string, target) {\n        return is.string(string) && string.indexOf(target) === 0;\n    };\n    // startWith method does not support 'all' and 'any' interfaces\n    is.startWith.api = ['not'];\n\n    // is a given string all uppercase?\n    is.upperCase = function(string) {\n        return is.string(string) && string === string.toUpperCase();\n    };\n\n    // Time checks\n    /* -------------------------------------------------------------------------- */\n\n    var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    var months = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n\n    // is a given dates day equal given day parameter?\n    is.day = function(date, day) {\n        return is.date(date) && day.toLowerCase() === days[date.getDay()];\n    };\n    // day method does not support 'all' and 'any' interfaces\n    is.day.api = ['not'];\n\n    // is a given date in daylight saving time?\n    is.dayLightSavingTime = function(date) {\n        var january = new Date(date.getFullYear(), 0, 1);\n        var july = new Date(date.getFullYear(), 6, 1);\n        var stdTimezoneOffset = Math.max(january.getTimezoneOffset(), july.getTimezoneOffset());\n        return date.getTimezoneOffset() < stdTimezoneOffset;\n    };\n\n    // is a given date future?\n    is.future = function(date) {\n        var now = new Date();\n        return is.date(date) && date.getTime() > now.getTime();\n    };\n\n    // is date within given range?\n    is.inDateRange = function(date, start, end) {\n        if (is.not.date(date) || is.not.date(start) || is.not.date(end)) {\n            return false;\n        }\n        var stamp = date.getTime();\n        return stamp > start.getTime() && stamp < end.getTime();\n    };\n    // inDateRange method does not support 'all' and 'any' interfaces\n    is.inDateRange.api = ['not'];\n\n    // is a given date in last month range?\n    is.inLastMonth = function(date) {\n        return is.inDateRange(date, new Date(new Date().setMonth(new Date().getMonth() - 1)), new Date());\n    };\n\n    // is a given date in last week range?\n    is.inLastWeek = function(date) {\n        return is.inDateRange(date, new Date(new Date().setDate(new Date().getDate() - 7)), new Date());\n    };\n\n    // is a given date in last year range?\n    is.inLastYear = function(date) {\n        return is.inDateRange(date, new Date(new Date().setFullYear(new Date().getFullYear() - 1)), new Date());\n    };\n\n    // is a given date in next month range?\n    is.inNextMonth = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setMonth(new Date().getMonth() + 1)));\n    };\n\n    // is a given date in next week range?\n    is.inNextWeek = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setDate(new Date().getDate() + 7)));\n    };\n\n    // is a given date in next year range?\n    is.inNextYear = function(date) {\n        return is.inDateRange(date, new Date(), new Date(new Date().setFullYear(new Date().getFullYear() + 1)));\n    };\n\n    // is the given year a leap year?\n    is.leapYear = function(year) {\n        return is.number(year) && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n    };\n\n    // is a given dates month equal given month parameter?\n    is.month = function(date, month) {\n        return is.date(date) && month.toLowerCase() === months[date.getMonth()];\n    };\n    // month method does not support 'all' and 'any' interfaces\n    is.month.api = ['not'];\n\n    // is a given date past?\n    is.past = function(date) {\n        var now = new Date();\n        return is.date(date) && date.getTime() < now.getTime();\n    };\n\n    // is a given date in the parameter quarter?\n    is.quarterOfYear = function(date, quarter) {\n        return is.date(date) && is.number(quarter) && quarter === Math.floor((date.getMonth() + 3) / 3);\n    };\n    // quarterOfYear method does not support 'all' and 'any' interfaces\n    is.quarterOfYear.api = ['not'];\n\n    // is a given date indicate today?\n    is.today = function(date) {\n        var now = new Date();\n        var todayString = now.toDateString();\n        return is.date(date) && date.toDateString() === todayString;\n    };\n\n    // is a given date indicate tomorrow?\n    is.tomorrow = function(date) {\n        var now = new Date();\n        var tomorrowString = new Date(now.setDate(now.getDate() + 1)).toDateString();\n        return is.date(date) && date.toDateString() === tomorrowString;\n    };\n\n    // is a given date weekend?\n    // 6: Saturday, 0: Sunday\n    is.weekend = function(date) {\n        return is.date(date) && (date.getDay() === 6 || date.getDay() === 0);\n    };\n\n    // is a given date weekday?\n    is.weekday = not(is.weekend);\n\n    // is a given dates year equal given year parameter?\n    is.year = function(date, year) {\n        return is.date(date) && is.number(year) && year === date.getFullYear();\n    };\n    // year method does not support 'all' and 'any' interfaces\n    is.year.api = ['not'];\n\n    // is a given date indicate yesterday?\n    is.yesterday = function(date) {\n        var now = new Date();\n        var yesterdayString = new Date(now.setDate(now.getDate() - 1)).toDateString();\n        return is.date(date) && date.toDateString() === yesterdayString;\n    };\n\n    // Environment checks\n    /* -------------------------------------------------------------------------- */\n\n    var freeGlobal = is.windowObject(typeof global == 'object' && global) && global;\n    var freeSelf = is.windowObject(typeof self == 'object' && self) && self;\n    var thisGlobal = is.windowObject(typeof this == 'object' && this) && this;\n    var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n    var document = freeSelf && freeSelf.document;\n    var previousIs = root.is;\n\n    // store navigator properties to use later\n    var navigator = freeSelf && freeSelf.navigator;\n    var appVersion = (navigator && navigator.appVersion || '').toLowerCase();\n    var userAgent = (navigator && navigator.userAgent || '').toLowerCase();\n    var vendor = (navigator && navigator.vendor || '').toLowerCase();\n\n    // is current device android?\n    is.android = function() {\n        return /android/.test(userAgent);\n    };\n    // android method does not support 'all' and 'any' interfaces\n    is.android.api = ['not'];\n\n    // is current device android phone?\n    is.androidPhone = function() {\n        return /android/.test(userAgent) && /mobile/.test(userAgent);\n    };\n    // androidPhone method does not support 'all' and 'any' interfaces\n    is.androidPhone.api = ['not'];\n\n    // is current device android tablet?\n    is.androidTablet = function() {\n        return /android/.test(userAgent) && !/mobile/.test(userAgent);\n    };\n    // androidTablet method does not support 'all' and 'any' interfaces\n    is.androidTablet.api = ['not'];\n\n    // is current device blackberry?\n    is.blackberry = function() {\n        return /blackberry/.test(userAgent) || /bb10/.test(userAgent);\n    };\n    // blackberry method does not support 'all' and 'any' interfaces\n    is.blackberry.api = ['not'];\n\n    // is current browser chrome?\n    // parameter is optional\n    is.chrome = function(range) {\n        var match = /google inc/.test(vendor) ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/) : null;\n        return match !== null && compareVersion(match[1], range);\n    };\n    // chrome method does not support 'all' and 'any' interfaces\n    is.chrome.api = ['not'];\n\n    // is current device desktop?\n    is.desktop = function() {\n        return is.not.mobile() && is.not.tablet();\n    };\n    // desktop method does not support 'all' and 'any' interfaces\n    is.desktop.api = ['not'];\n\n    // is current browser edge?\n    // parameter is optional\n    is.edge = function(range) {\n        var match = userAgent.match(/edge\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // edge method does not support 'all' and 'any' interfaces\n    is.edge.api = ['not'];\n\n    // is current browser firefox?\n    // parameter is optional\n    is.firefox = function(range) {\n        var match = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // firefox method does not support 'all' and 'any' interfaces\n    is.firefox.api = ['not'];\n\n    // is current browser internet explorer?\n    // parameter is optional\n    is.ie = function(range) {\n        var match = userAgent.match(/(?:msie |trident.+?; rv:)(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ie method does not support 'all' and 'any' interfaces\n    is.ie.api = ['not'];\n\n    // is current device ios?\n    is.ios = function() {\n        return is.iphone() || is.ipad() || is.ipod();\n    };\n    // ios method does not support 'all' and 'any' interfaces\n    is.ios.api = ['not'];\n\n    // is current device ipad?\n    // parameter is optional\n    is.ipad = function(range) {\n        var match = userAgent.match(/ipad.+?os (\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ipad method does not support 'all' and 'any' interfaces\n    is.ipad.api = ['not'];\n\n    // is current device iphone?\n    // parameter is optional\n    is.iphone = function(range) {\n        // original iPhone doesn't have the os portion of the UA\n        var match = userAgent.match(/iphone(?:.+?os (\\d+))?/);\n        return match !== null && compareVersion(match[1] || 1, range);\n    };\n    // iphone method does not support 'all' and 'any' interfaces\n    is.iphone.api = ['not'];\n\n    // is current device ipod?\n    // parameter is optional\n    is.ipod = function(range) {\n        var match = userAgent.match(/ipod.+?os (\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // ipod method does not support 'all' and 'any' interfaces\n    is.ipod.api = ['not'];\n\n    // is current operating system linux?\n    is.linux = function() {\n        return /linux/.test(appVersion);\n    };\n    // linux method does not support 'all' and 'any' interfaces\n    is.linux.api = ['not'];\n\n    // is current operating system mac?\n    is.mac = function() {\n        return /mac/.test(appVersion);\n    };\n    // mac method does not support 'all' and 'any' interfaces\n    is.mac.api = ['not'];\n\n    // is current device mobile?\n    is.mobile = function() {\n        return is.iphone() || is.ipod() || is.androidPhone() || is.blackberry() || is.windowsPhone();\n    };\n    // mobile method does not support 'all' and 'any' interfaces\n    is.mobile.api = ['not'];\n\n    // is current state offline?\n    is.offline = not(is.online);\n    // offline method does not support 'all' and 'any' interfaces\n    is.offline.api = ['not'];\n\n    // is current state online?\n    is.online = function() {\n        return !navigator || navigator.onLine === true;\n    };\n    // online method does not support 'all' and 'any' interfaces\n    is.online.api = ['not'];\n\n    // is current browser opera?\n    // parameter is optional\n    is.opera = function(range) {\n        var match = userAgent.match(/(?:^opera.+?version|opr)\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // opera method does not support 'all' and 'any' interfaces\n    is.opera.api = ['not'];\n\n    // is current browser phantomjs?\n    // parameter is optional\n    is.phantom = function(range) {\n        var match = userAgent.match(/phantomjs\\/(\\d+)/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // phantom method does not support 'all' and 'any' interfaces\n    is.phantom.api = ['not'];\n\n    // is current browser safari?\n    // parameter is optional\n    is.safari = function(range) {\n        var match = userAgent.match(/version\\/(\\d+).+?safari/);\n        return match !== null && compareVersion(match[1], range);\n    };\n    // safari method does not support 'all' and 'any' interfaces\n    is.safari.api = ['not'];\n\n    // is current device tablet?\n    is.tablet = function() {\n        return is.ipad() || is.androidTablet() || is.windowsTablet();\n    };\n    // tablet method does not support 'all' and 'any' interfaces\n    is.tablet.api = ['not'];\n\n    // is current device supports touch?\n    is.touchDevice = function() {\n        return !!document && ('ontouchstart' in freeSelf ||\n            ('DocumentTouch' in freeSelf && document instanceof DocumentTouch));\n    };\n    // touchDevice method does not support 'all' and 'any' interfaces\n    is.touchDevice.api = ['not'];\n\n    // is current operating system windows?\n    is.windows = function() {\n        return /win/.test(appVersion);\n    };\n    // windows method does not support 'all' and 'any' interfaces\n    is.windows.api = ['not'];\n\n    // is current device windows phone?\n    is.windowsPhone = function() {\n        return is.windows() && /phone/.test(userAgent);\n    };\n    // windowsPhone method does not support 'all' and 'any' interfaces\n    is.windowsPhone.api = ['not'];\n\n    // is current device windows tablet?\n    is.windowsTablet = function() {\n        return is.windows() && is.not.windowsPhone() && /touch/.test(userAgent);\n    };\n    // windowsTablet method does not support 'all' and 'any' interfaces\n    is.windowsTablet.api = ['not'];\n\n    // Object checks\n    /* -------------------------------------------------------------------------- */\n\n    // has a given object got parameterized count property?\n    is.propertyCount = function(object, count) {\n        if (is.not.object(object) || is.not.number(count)) {\n            return false;\n        }\n        var n = 0;\n        for (var property in object) {\n            if (hasOwnProperty.call(object, property) && ++n > count) {\n                return false;\n            }\n        }\n        return n === count;\n    };\n    // propertyCount method does not support 'all' and 'any' interfaces\n    is.propertyCount.api = ['not'];\n\n    // is given object has parameterized property?\n    is.propertyDefined = function(object, property) {\n        return is.object(object) && is.string(property) && property in object;\n    };\n    // propertyDefined method does not support 'all' and 'any' interfaces\n    is.propertyDefined.api = ['not'];\n\n    // Array checks\n    /* -------------------------------------------------------------------------- */\n\n    // is a given item in an array?\n    is.inArray = function(value, array) {\n        if (is.not.array(array)) {\n            return false;\n        }\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === value) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // inArray method does not support 'all' and 'any' interfaces\n    is.inArray.api = ['not'];\n\n    // is a given array sorted?\n    is.sorted = function(array, sign) {\n        if (is.not.array(array)) {\n            return false;\n        }\n        var predicate = comparator[sign] || comparator['>='];\n        for (var i = 1; i < array.length; i++) {\n            if (!predicate(array[i], array[i - 1])) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    // API\n    // Set 'not', 'all' and 'any' interfaces to methods based on their api property\n    /* -------------------------------------------------------------------------- */\n\n    function setInterfaces() {\n        var options = is;\n        for (var option in options) {\n            if (hasOwnProperty.call(options, option) && is['function'](options[option])) {\n                var interfaces = options[option].api || ['not', 'all', 'any'];\n                for (var i = 0; i < interfaces.length; i++) {\n                    if (interfaces[i] === 'not') {\n                        is.not[option] = not(is[option]);\n                    }\n                    if (interfaces[i] === 'all') {\n                        is.all[option] = all(is[option]);\n                    }\n                    if (interfaces[i] === 'any') {\n                        is.any[option] = any(is[option]);\n                    }\n                }\n            }\n        }\n    }\n    setInterfaces();\n\n    // Configuration methods\n    // Intentionally added after setInterfaces function\n    /* -------------------------------------------------------------------------- */\n\n    // change namespace of library to prevent name collisions\n    // var preferredName = is.setNamespace();\n    // preferredName.odd(3);\n    // => true\n    is.setNamespace = function() {\n        root.is = previousIs;\n        return this;\n    };\n\n    // set optional regexes to methods\n    is.setRegexp = function(regexp, name) {\n        for (var r in regexes) {\n            if (hasOwnProperty.call(regexes, r) && (name === r)) {\n                regexes[r] = regexp;\n            }\n        }\n    };\n\n    return is;\n}));\n", "const is = require('is_js');\n\n/**\n * Parse x-forwarded-for headers.\n *\n * @param {string} value - The value to be parsed.\n * @return {string|null} First known IP address, if any.\n */\nfunction getClientIpFromXForwardedFor(value) {\n    if (!is.existy(value)) {\n        return null;\n    }\n\n    if (is.not.string(value)) {\n        throw new TypeError(`Expected a string, got \"${typeof value}\"`);\n    }\n\n    // x-forwarded-for may return multiple IP addresses in the format:\n    // \"client IP, proxy 1 IP, proxy 2 IP\"\n    // Therefore, the right-most IP address is the IP address of the most recent proxy\n    // and the left-most IP address is the IP address of the originating client.\n    // source: http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/x-forwarded-headers.html\n    // Azure Web App's also adds a port for some reason, so we'll only use the first part (the IP)\n    const forwardedIps = value.split(',').map((e) => {\n        const ip = e.trim();\n        if (ip.includes(':')) {\n            const splitted = ip.split(':');\n            // make sure we only use this if it's ipv4 (ip:port)\n            if (splitted.length === 2) {\n                return splitted[0];\n            }\n        }\n        return ip;\n    });\n\n    // Sometimes IP addresses in this header can be 'unknown' (http://stackoverflow.com/a/11285650).\n    // Therefore taking the left-most IP address that is not unknown\n    // A Squid configuration directive can also set the value to \"unknown\" (http://www.squid-cache.org/Doc/config/forwarded_for/)\n    return forwardedIps.find(is.ip);\n}\n\n/**\n * Determine client IP address.\n *\n * @param req\n * @returns {string} ip - The IP address if known, defaulting to empty string if unknown.\n */\nfunction getClientIp(req) {\n    // Server is probably behind a proxy.\n    if (req.headers) {\n        // Standard headers used by Amazon EC2, Heroku, and others.\n        if (is.ip(req.headers['x-client-ip'])) {\n            return req.headers['x-client-ip'];\n        }\n\n        // Load-balancers (AWS ELB) or proxies.\n        const xForwardedFor = getClientIpFromXForwardedFor(req.headers['x-forwarded-for']);\n        if (is.ip(xForwardedFor)) {\n            return xForwardedFor;\n        }\n\n        // Cloudflare.\n        // @see https://support.cloudflare.com/hc/en-us/articles/200170986-How-does-Cloudflare-handle-HTTP-Request-headers-\n        // CF-Connecting-IP - applied to every request to the origin.\n        if (is.ip(req.headers['cf-connecting-ip'])) {\n            return req.headers['cf-connecting-ip'];\n        }\n\n        // Akamai and Cloudflare: True-Client-IP.\n        if (is.ip(req.headers['true-client-ip'])) {\n            return req.headers['true-client-ip'];\n        }\n\n        // Default nginx proxy/fcgi; alternative to x-forwarded-for, used by some proxies.\n        if (is.ip(req.headers['x-real-ip'])) {\n            return req.headers['x-real-ip'];\n        }\n\n        // (Rackspace LB and Riverbed's Stingray)\n        // http://www.rackspace.com/knowledge_center/article/controlling-access-to-linux-cloud-sites-based-on-the-client-ip-address\n        // https://splash.riverbed.com/docs/DOC-1926\n        if (is.ip(req.headers['x-cluster-client-ip'])) {\n            return req.headers['x-cluster-client-ip'];\n        }\n\n        if (is.ip(req.headers['x-forwarded'])) {\n            return req.headers['x-forwarded'];\n        }\n\n        if (is.ip(req.headers['forwarded-for'])) {\n            return req.headers['forwarded-for'];\n        }\n\n        if (is.ip(req.headers.forwarded)) {\n            return req.headers.forwarded;\n        }\n    }\n\n    // Remote address checks.\n    if (is.existy(req.connection)) {\n        if (is.ip(req.connection.remoteAddress)) {\n            return req.connection.remoteAddress;\n        }\n        if (is.existy(req.connection.socket) && is.ip(req.connection.socket.remoteAddress)) {\n            return req.connection.socket.remoteAddress;\n        }\n    }\n\n    if (is.existy(req.socket) && is.ip(req.socket.remoteAddress)) {\n        return req.socket.remoteAddress;\n    }\n\n    if (is.existy(req.info) && is.ip(req.info.remoteAddress)) {\n        return req.info.remoteAddress;\n    }\n\n    return null;\n}\n\n/**\n * Expose request IP as a middleware.\n *\n * @param {object} [options] - Configuration.\n * @param {string} [options.attributeName] - Name of attribute to augment request object with.\n * @return {*}\n */\nfunction mw(options) {\n    // Defaults.\n    const configuration = is.not.existy(options) ? {} : options;\n\n    // Validation.\n    if (is.not.object(configuration)) {\n        throw new TypeError('Options must be an object!');\n    }\n\n    const attributeName = configuration.attributeName || 'clientIp';\n    return (req, res, next) => {\n        req[attributeName] = getClientIp(req); // eslint-disable-line no-param-reassign\n        next();\n    };\n}\n\nmodule.exports = {\n    getClientIpFromXForwardedFor,\n    getClientIp,\n    mw,\n};\n", "var _ = require('./utility');\nvar traverse = require('./utility/traverse');\n\nfunction scrub(data, scrubFields, scrubPaths) {\n  scrubFields = scrubFields || [];\n\n  if (scrubPaths) {\n    for (var i = 0; i < scrubPaths.length; ++i) {\n      scrubPath(data, scrubPaths[i]);\n    }\n  }\n\n  var paramRes = _getScrubFieldRegexs(scrubFields);\n  var queryRes = _getScrubQueryParamRegexs(scrubFields);\n\n  function redactQueryParam(dummy0, paramPart) {\n    return paramPart + _.redact();\n  }\n\n  function paramScrubber(v) {\n    var i;\n    if (_.isType(v, 'string')) {\n      for (i = 0; i < queryRes.length; ++i) {\n        v = v.replace(queryRes[i], redactQueryParam);\n      }\n    }\n    return v;\n  }\n\n  function valScrubber(k, v) {\n    var i;\n    for (i = 0; i < paramRes.length; ++i) {\n      if (paramRes[i].test(k)) {\n        v = _.redact();\n        break;\n      }\n    }\n    return v;\n  }\n\n  function scrubber(k, v, seen) {\n    var tmpV = valScrubber(k, v);\n    if (tmpV === v) {\n      if (_.isType(v, 'object') || _.isType(v, 'array')) {\n        return traverse(v, scrubber, seen);\n      }\n      return paramScrubber(tmpV);\n    } else {\n      return tmpV;\n    }\n  }\n\n  return traverse(data, scrubber);\n}\n\nfunction scrubPath(obj, path) {\n  var keys = path.split('.');\n  var last = keys.length - 1;\n  try {\n    for (var i = 0; i <= last; ++i) {\n      if (i < last) {\n        obj = obj[keys[i]];\n      } else {\n        obj[keys[i]] = _.redact();\n      }\n    }\n  } catch (e) {\n    // Missing key is OK;\n  }\n}\n\nfunction _getScrubFieldRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '^\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?$';\n    ret.push(new RegExp(pat, 'i'));\n  }\n  return ret;\n}\n\n\nfunction _getScrubQueryParamRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n  }\n  return ret;\n}\n\nmodule.exports = scrub;\n", "var async = require('async');\nvar parser = require('./parser');\nvar requestIp = require('request-ip');\nvar url = require('url');\nvar _ = require('../utility');\nvar scrub = require('../scrub');\n\nfunction baseData(item, options, callback) {\n  var environment = (options.payload && options.payload.environment) || options.environment;\n  var data = {\n    timestamp: Math.round(item.timestamp / 1000),\n    environment: item.environment || environment,\n    level: item.level || 'error',\n    language: 'javascript',\n    framework: item.framework || options.framework,\n    uuid: item.uuid,\n    notifier: JSON.parse(JSON.stringify(options.notifier)),\n    custom: item.custom\n  };\n\n  if (options.codeVersion) {\n    data.code_version = options.codeVersion;\n  } else if (options.code_version) {\n    data.code_version = options.code_version;\n  }\n\n  var props = Object.getOwnPropertyNames(item.custom || {});\n  props.forEach(function (name) {\n    if (!data.hasOwnProperty(name)) {\n      data[name] = item.custom[name];\n    }\n  });\n\n  data.server = {\n    host: options.host,\n    argv: process.argv.concat(),\n    pid: process.pid\n  };\n\n  if (options.branch) {\n    data.server.branch = options.branch;\n  }\n  if (options.root) {\n    data.server.root = options.root;\n  }\n\n  item.data = data;\n  callback(null, item);\n}\n\nfunction addMessageData(item, options, callback) {\n  item.data = item.data || {};\n  item.data.body = item.data.body || {};\n  var message = item.message || 'Item sent with null or missing arguments.';\n  item.data.body.message = {\n    body: message\n  };\n  callback(null, item);\n}\n\nfunction addErrorData(item, options, callback) {\n  if (item.stackInfo) {\n    item.data = item.data || {};\n    item.data.body = item.data.body || {};\n    item.data.body.trace_chain = item.stackInfo;\n  }\n  callback(null, item);\n}\n\nfunction addBody(item, options, callback) {\n  if (item.stackInfo) {\n    addErrorData(item, options, callback);\n  } else {\n    addMessageData(item, options, callback);\n  }\n}\n\nfunction handleItemWithError(item, options, callback) {\n  if (!item.err) {\n    return callback(null, item);\n  }\n\n  var err = item.err;\n  var errors = [];\n  var chain = [];\n  do {\n    errors.push(err);\n    err = err.nested || err.cause;\n  } while (err);\n  item.stackInfo = chain;\n\n  if (options.addErrorContext) {\n    _.addErrorContext(item, errors);\n  }\n\n  var cb = function(e) {\n    if (e) {\n      item.message = item.err.message || item.err.description || item.message || String(item.err);\n      item.diagnostic.buildTraceData = e.message;\n      delete item.stackInfo;\n    }\n    callback(null, item);\n  };\n  async.eachSeries(errors, _buildTraceData(chain, options, item), cb);\n}\n\nfunction addRequestData(item, options, callback) {\n  item.data = item.data || {};\n\n  var req = item.request;\n  if (!req) {\n    callback(null, item);\n    return;\n  }\n\n  var baseUrl = req.baseUrl || '';\n\n  if (options.addRequestData && _.isFunction(options.addRequestData)) {\n    options.addRequestData(item.data, req);\n    callback(null, item);\n    return;\n  }\n\n  var requestData = _buildRequestData(req);\n  _.filterIp(requestData, options.captureIp);\n  item.data.request = requestData;\n\n  var routePath;\n\n  if (req.route) {\n    routePath = req.route.path;\n    item.data.context = baseUrl && baseUrl.length ? baseUrl + routePath : routePath;\n  } else {\n    try {\n      routePath = req.app._router.matchRequest(req).path;\n      item.data.context = baseUrl && baseUrl.length ? baseUrl + routePath : routePath;\n    } catch (ignore) {\n      // Ignored\n    }\n  }\n\n  var captureEmail = options.captureEmail;\n  var captureUsername = options.captureUsername;\n  if (req.rollbar_person) {\n    var person = req.rollbar_person;\n    if (!captureEmail && person.email) {\n      person.email = null;\n    }\n    if (!captureUsername && person.username) {\n      person.username = null;\n    }\n    item.data.person = person;\n  } else if (req.user) {\n    item.data.person = {id: req.user.id};\n    if (req.user.username && captureUsername) {\n      item.data.person.username = req.user.username;\n    }\n    if (req.user.email && captureEmail) {\n      item.data.person.email = req.user.email;\n    }\n  } else if (req.user_id || req.userId) {\n    var userId = req.user_id || req.userId;\n    if (_.isFunction(userId)) {\n      userId = userId();\n    }\n    item.data.person = {id: userId};\n  }\n\n  callback(null, item);\n}\n\nfunction addLambdaData(item, options, callback) {\n  var c = item.lambdaContext;\n  if (!c) {\n    callback(null, item);\n    return;\n  }\n\n  var data = {\n    remainingTimeInMillis: c.getRemainingTimeInMillis(),\n    callbackWaitsForEmptyEventLoop: c.callbackWaitsForEmptyEventLoop,\n    functionName: c.functionName,\n    functionVersion: c.functionVersion,\n    arn: c.invokedFunctionArn,\n    requestId: c.awsRequestId\n  };\n\n  item.data = item.data || {};\n  item.data.custom = item.data.custom || {};\n  item.data.custom.lambda = data;\n\n  callback(null, item);\n}\n\nfunction scrubPayload(item, options, callback) {\n  var scrubHeaders = options.scrubHeaders || [];\n  var scrubFields = options.scrubFields || [];\n  var scrubPaths = options.scrubPaths || [];\n  scrubFields = scrubHeaders.concat(scrubFields);\n\n  parseRequestBody(item.data.request, options);\n  item.data = scrub(item.data, scrubFields, scrubPaths);\n  serializeRequestBody(item.data.request, options);\n\n  callback(null, item);\n}\n\nfunction parseRequestBody(req, options) {\n  if (!req || !options.scrubRequestBody) { return }\n\n  try {\n    if (_.isString(req.body) && _isJsonContentType(req)) {\n      req.body = JSON.parse(req.body);\n    }\n  } catch (e) {\n    req.body = null;\n    req.error = 'request.body parse failed: ' + e.message;\n  }\n}\n\nfunction serializeRequestBody(req, options) {\n  if (!req || !options.scrubRequestBody) { return }\n\n  try {\n    if (_.isObject(req.body) && _isJsonContentType(req)) {\n      req.body = JSON.stringify(req.body);\n    }\n  } catch (e) {\n    req.body = null;\n    req.error = 'request.body serialization failed: ' + e.message;\n  }\n}\n\n/** Helpers **/\n\nfunction _isJsonContentType(req) {\n  return req.headers && req.headers['content-type'] && req.headers['content-type'].includes('json');\n}\n\nfunction _buildTraceData(chain, options, item) {\n  return function(ex, cb) {\n    parser.parseException(ex, options, item, function (err, errData) {\n      if (err) {\n        return cb(err);\n      }\n\n      chain.push({\n        frames: errData.frames,\n        exception: {\n          class: errData['class'],\n          message: errData.message\n        }\n      });\n\n      return cb(null);\n    });\n  };\n}\n\nfunction _extractIp(req) {\n  var ip = req.ip;\n  if (!ip) {\n    ip = requestIp.getClientIp(req);\n  }\n  return ip;\n}\n\nfunction _buildRequestData(req) {\n  var headers = req.headers || {};\n  var host = headers.host || '<no host>';\n  var proto = req.protocol || ((req.socket && req.socket.encrypted) ? 'https' : 'http' );\n  var parsedUrl;\n  var baseUrl = req.baseUrl || '';\n  if (_.isType(req.url, 'string')) {\n    var fullUrl = baseUrl && baseUrl.length ? baseUrl + req.url : req.url\n    parsedUrl = url.parse(fullUrl, true);\n  } else {\n    parsedUrl = req.url || {};\n  }\n  parsedUrl.protocol = parsedUrl.protocol || proto;\n  parsedUrl.host = parsedUrl.host || host;\n  var reqUrl = url.format(parsedUrl);\n  var data = {\n    url: reqUrl,\n    user_ip: _extractIp(req),\n    headers: headers,\n    method: req.method\n  };\n  if (parsedUrl.search && parsedUrl.search.length > 0) {\n    data.GET = parsedUrl.query;\n  }\n\n  var body = req.body || req.payload;\n  if (body) {\n    var bodyParams = {};\n    if (_.isIterable(body)) {\n      for (var k in body) {\n        if (Object.prototype.hasOwnProperty.call(body, k)) {\n          bodyParams[k] = body[k];\n        }\n      }\n      data[req.method] = bodyParams;\n    } else {\n      data.body = body;\n    }\n  }\n  return data;\n}\n\nmodule.exports = {\n  baseData: baseData,\n  handleItemWithError: handleItemWithError,\n  addBody: addBody,\n  addMessageData: addMessageData,\n  addErrorData: addErrorData,\n  addRequestData: addRequestData,\n  addLambdaData: addLambdaData,\n  scrubPayload: scrubPayload\n};\n", "var _ = require('./utility');\n\nfunction itemToPayload(item, options, callback) {\n  var payloadOptions = options.payload || {};\n  if (payloadOptions.body) {\n    delete payloadOptions.body;\n  }\n\n  var data = _.merge(item.data, payloadOptions);\n  if (item._isUncaught) {\n    data._isUncaught = true;\n  }\n  if (item._originalArgs) {\n    data._originalArgs = item._originalArgs;\n  }\n  callback(null, data);\n}\n\nfunction addTelemetryData(item, options, callback) {\n  if (item.telemetryEvents) {\n    _.set(item, 'data.body.telemetry', item.telemetryEvents);\n  }\n  callback(null, item);\n}\n\nfunction addMessageWithError(item, options, callback) {\n  if (!item.message) {\n    callback(null, item);\n    return;\n  }\n  var tracePath = 'data.body.trace_chain.0';\n  var trace = _.get(item, tracePath);\n  if (!trace) {\n    tracePath = 'data.body.trace';\n    trace = _.get(item, tracePath);\n  }\n  if (trace) {\n    if (!(trace.exception && trace.exception.description)) {\n      _.set(item, tracePath+'.exception.description', item.message);\n      callback(null, item);\n      return;\n    }\n    var extra = _.get(item, tracePath+'.extra') || {};\n    var newExtra =  _.merge(extra, {message: item.message});\n    _.set(item, tracePath+'.extra', newExtra);\n  }\n  callback(null, item);\n}\n\nfunction userTransform(logger) {\n  return function(item, options, callback) {\n    var newItem = _.merge(item);\n    var response = null;\n    try {\n      if (_.isFunction(options.transform)) {\n        response = options.transform(newItem.data, item);\n      }\n    } catch (e) {\n      options.transform = null;\n      logger.error('Error while calling custom transform() function. Removing custom transform().', e);\n      callback(null, item);\n      return;\n    }\n    if(_.isPromise(response)) {\n      response.then(function (promisedItem) {\n        if(promisedItem) {\n          newItem.data = promisedItem;\n        }\n        callback(null, newItem);\n      }, function (error) {\n        callback(error, item);\n      });\n    } else {\n      callback(null, newItem);\n    }\n  }\n}\n\nfunction addConfigToPayload(item, options, callback) {\n  if (!options.sendConfig) {\n    return callback(null, item);\n  }\n  var configKey = '_rollbarConfig';\n  var custom = _.get(item, 'data.custom') || {};\n  custom[configKey] = options;\n  item.data.custom = custom;\n  callback(null, item);\n}\n\nfunction addFunctionOption(options, name) {\n  if(_.isFunction(options[name])) {\n    options[name] = options[name].toString();\n  }\n}\n\nfunction addConfiguredOptions(item, options, callback) {\n  var configuredOptions = options._configuredOptions;\n\n  // These must be stringified or they'll get dropped during serialization.\n  addFunctionOption(configuredOptions, 'transform');\n  addFunctionOption(configuredOptions, 'checkIgnore');\n  addFunctionOption(configuredOptions, 'onSendCallback');\n\n  delete configuredOptions.accessToken;\n  item.data.notifier.configured_options = configuredOptions;\n  callback(null, item);\n}\n\nfunction addDiagnosticKeys(item, options, callback) {\n  var diagnostic = _.merge(item.notifier.client.notifier.diagnostic, item.diagnostic);\n\n  if (_.get(item, 'err._isAnonymous')) {\n    diagnostic.is_anonymous = true;\n  }\n\n  if (item._isUncaught) {\n    diagnostic.is_uncaught = item._isUncaught;\n  }\n\n  if (item.err) {\n    try {\n      diagnostic.raw_error = {\n        message: item.err.message,\n        name: item.err.name,\n        constructor_name: item.err.constructor && item.err.constructor.name,\n        filename: item.err.fileName,\n        line: item.err.lineNumber,\n        column: item.err.columnNumber,\n        stack: item.err.stack\n      };\n    } catch (e) {\n      diagnostic.raw_error = { failed: String(e) };\n    }\n  }\n\n  item.data.notifier.diagnostic = _.merge(item.data.notifier.diagnostic, diagnostic);\n  callback(null, item);\n}\n\nmodule.exports = {\n  itemToPayload: itemToPayload,\n  addTelemetryData: addTelemetryData,\n  addMessageWithError: addMessageWithError,\n  userTransform: userTransform,\n  addConfigToPayload: addConfigToPayload,\n  addConfiguredOptions: addConfiguredOptions,\n  addDiagnosticKeys: addDiagnosticKeys\n};\n", "var _ = require('./utility');\n\nfunction checkLevel(item, settings) {\n  var level = item.level;\n  var levelVal = _.LEVELS[level] || 0;\n  var reportLevel = settings.reportLevel;\n  var reportLevelVal = _.LEVELS[reportLevel] || 0;\n\n  if (levelVal < reportLevelVal) {\n    return false;\n  }\n  return true;\n}\n\nfunction userCheckIgnore(logger) {\n  return function(item, settings) {\n    var isUncaught = !!item._isUncaught;\n    delete item._isUncaught;\n    var args = item._originalArgs;\n    delete item._originalArgs;\n    try {\n      if (_.isFunction(settings.onSendCallback)) {\n        settings.onSendCallback(isUncaught, args, item);\n      }\n    } catch (e) {\n      settings.onSendCallback = null;\n      logger.error('Error while calling onSendCallback, removing', e);\n    }\n    try {\n      if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {\n        return false;\n      }\n    } catch (e) {\n      settings.checkIgnore = null;\n      logger.error('Error while calling custom checkIgnore(), removing', e);\n    }\n    return true;\n  }\n}\n\nfunction urlIsNotBlockListed(logger) {\n  return function(item, settings) {\n    return !urlIsOnAList(item, settings, 'blocklist', logger);\n  }\n}\n\nfunction urlIsSafeListed(logger) {\n  return function(item, settings) {\n    return urlIsOnAList(item, settings, 'safelist', logger);\n  }\n}\n\nfunction matchFrames(trace, list, block) {\n  if (!trace) { return !block }\n\n  var frames = trace.frames;\n\n  if (!frames || frames.length === 0) { return !block; }\n\n  var frame, filename, url, urlRegex;\n  var listLength = list.length;\n  var frameLength = frames.length;\n  for (var i = 0; i < frameLength; i++) {\n    frame = frames[i];\n    filename = frame.filename;\n\n    if (!_.isType(filename, 'string')) { return !block; }\n\n    for (var j = 0; j < listLength; j++) {\n      url = list[j];\n      urlRegex = new RegExp(url);\n\n      if (urlRegex.test(filename)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction urlIsOnAList(item, settings, safeOrBlock, logger) {\n  // safelist is the default\n  var block = false;\n  if (safeOrBlock === 'blocklist') {\n    block = true;\n  }\n\n  var list, traces;\n  try {\n    list = block ? settings.hostBlockList : settings.hostSafeList;\n    traces = _.get(item, 'body.trace_chain') || [_.get(item, 'body.trace')];\n\n    // These two checks are important to come first as they are defaults\n    // in case the list is missing or the trace is missing or not well-formed\n    if (!list || list.length === 0) {\n      return !block;\n    }\n    if (traces.length === 0 || !traces[0]) {\n      return !block;\n    }\n\n    var tracesLength = traces.length;\n    for (var i = 0; i < tracesLength; i++) {\n      if(matchFrames(traces[i], list, block)) {\n        return true;\n      }\n    }\n  } catch (e)\n  /* istanbul ignore next */\n  {\n    if (block) {\n      settings.hostBlockList = null;\n    } else {\n      settings.hostSafeList = null;\n    }\n    var listName = block ? 'hostBlockList' : 'hostSafeList';\n    logger.error('Error while reading your configuration\\'s ' + listName + ' option. Removing custom ' + listName + '.', e);\n    return !block;\n  }\n  return false;\n}\n\nfunction messageIsIgnored(logger) {\n  return function(item, settings) {\n    var i, j, ignoredMessages, len, messageIsIgnored, rIgnoredMessage, messages;\n\n    try {\n      messageIsIgnored = false;\n      ignoredMessages = settings.ignoredMessages;\n\n      if (!ignoredMessages || ignoredMessages.length === 0) {\n        return true;\n      }\n\n      messages = messagesFromItem(item);\n\n      if (messages.length === 0){\n        return true;\n      }\n\n      len = ignoredMessages.length;\n      for (i = 0; i < len; i++) {\n        rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n\n        for (j = 0; j < messages.length; j++) {\n          messageIsIgnored = rIgnoredMessage.test(messages[j]);\n\n          if (messageIsIgnored) {\n            return false;\n          }\n        }\n      }\n    } catch(e)\n    /* istanbul ignore next */\n    {\n      settings.ignoredMessages = null;\n      logger.error('Error while reading your configuration\\'s ignoredMessages option. Removing custom ignoredMessages.');\n    }\n\n    return true;\n  }\n}\n\nfunction messagesFromItem(item) {\n  var body = item.body;\n  var messages = [];\n\n  // The payload schema only allows one of trace_chain, message, or trace.\n  // However, existing test cases are based on having both trace and message present.\n  // So here we preserve the ability to collect strings from any combination of these keys.\n  if (body.trace_chain) {\n    var traceChain = body.trace_chain;\n    for (var i = 0; i < traceChain.length; i++) {\n      var trace = traceChain[i];\n      messages.push(_.get(trace, 'exception.message'));\n    }\n  }\n  if (body.trace) {\n    messages.push(_.get(body, 'trace.exception.message'));\n  }\n  if (body.message) {\n    messages.push(_.get(body, 'message.body'));\n  }\n  return messages;\n}\n\nmodule.exports = {\n  checkLevel: checkLevel,\n  userCheckIgnore: userCheckIgnore,\n  urlIsNotBlockListed: urlIsNotBlockListed,\n  urlIsSafeListed: urlIsSafeListed,\n  messageIsIgnored: messageIsIgnored\n};\n", "//  json3.js\n//  2017-02-21\n//  Public Domain.\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n//  See http://www.JSON.org/js.html\n//  This code should be minified before deployment.\n//  See http://javascript.crockford.com/jsmin.html\n\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n//  NOT CONTROL.\n\n//  This file creates a global JSON object containing two methods: stringify\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n//  If a project might run on IE8 or earlier, then this file should be included.\n//  This file does nothing on ES5 systems.\n\n//      JSON.stringify(value, replacer, space)\n//          value       any JavaScript value, usually an object or array.\n//          replacer    an optional parameter that determines how object\n//                      values are stringified for objects. It can be a\n//                      function or an array of strings.\n//          space       an optional parameter that specifies the indentation\n//                      of nested structures. If it is omitted, the text will\n//                      be packed without extra whitespace. If it is a number,\n//                      it will specify the number of spaces to indent at each\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n//                      it contains the characters used to indent at each level.\n//          This method produces a JSON text from a JavaScript value.\n//          When an object value is found, if the object contains a toJSON\n//          method, its toJSON method will be called and the result will be\n//          stringified. A toJSON method does not serialize: it returns the\n//          value represented by the name/value pair that should be serialized,\n//          or undefined if nothing should be serialized. The toJSON method\n//          will be passed the key associated with the value, and this will be\n//          bound to the value.\n\n//          For example, this would serialize Dates as ISO strings.\n\n//              Date.prototype.toJSON = function (key) {\n//                  function f(n) {\n//                      // Format integers to have at least two digits.\n//                      return (n < 10)\n//                          ? \"0\" + n\n//                          : n;\n//                  }\n//                  return this.getUTCFullYear()   + \"-\" +\n//                       f(this.getUTCMonth() + 1) + \"-\" +\n//                       f(this.getUTCDate())      + \"T\" +\n//                       f(this.getUTCHours())     + \":\" +\n//                       f(this.getUTCMinutes())   + \":\" +\n//                       f(this.getUTCSeconds())   + \"Z\";\n//              };\n\n//          You can provide an optional replacer method. It will be passed the\n//          key and value of each member, with this bound to the containing\n//          object. The value that is returned from your method will be\n//          serialized. If your method returns undefined, then the member will\n//          be excluded from the serialization.\n\n//          If the replacer parameter is an array of strings, then it will be\n//          used to select the members to be serialized. It filters the results\n//          such that only members with keys listed in the replacer array are\n//          stringified.\n\n//          Values that do not have JSON representations, such as undefined or\n//          functions, will not be serialized. Such values in objects will be\n//          dropped; in arrays they will be replaced with null. You can use\n//          a replacer function to replace those with JSON values.\n\n//          JSON.stringify(undefined) returns undefined.\n\n//          The optional space parameter produces a stringification of the\n//          value that is filled with line breaks and indentation to make it\n//          easier to read.\n\n//          If the space parameter is a non-empty string, then that string will\n//          be used for indentation. If the space parameter is a number, then\n//          the indentation will be that many spaces.\n\n//          Example:\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n//          text = JSON.stringify([new Date()], function (key, value) {\n//              return this[key] instanceof Date\n//                  ? \"Date(\" + this[key] + \")\"\n//                  : value;\n//          });\n//          // text is '[\"Date(---current time---)\"]'\n\n//      JSON.parse(text, reviver)\n//          This method parses a JSON text to produce an object or array.\n//          It can throw a SyntaxError exception.\n//          This has been modified to use JSON-js/json_parse_state.js as the\n//          parser instead of the one built around eval found in JSON-js/json2.js\n\n//          The optional reviver parameter is a function that can filter and\n//          transform the results. It receives each of the keys and values,\n//          and its return value is used instead of the original value.\n//          If it returns what it received, then the structure is not modified.\n//          If it returns undefined then the member is deleted.\n\n//          Example:\n\n//          // Parse the text. Values that look like ISO date strings will\n//          // be converted to Date objects.\n\n//          myData = JSON.parse(text, function (key, value) {\n//              var a;\n//              if (typeof value === \"string\") {\n//                  a =\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n//                  if (a) {\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n//                          +a[5], +a[6]));\n//                  }\n//              }\n//              return value;\n//          });\n\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n//              var d;\n//              if (typeof value === \"string\" &&\n//                      value.slice(0, 5) === \"Date(\" &&\n//                      value.slice(-1) === \")\") {\n//                  d = new Date(value.slice(5, -1));\n//                  if (d) {\n//                      return d;\n//                  }\n//              }\n//              return value;\n//          });\n\n//  This is a reference implementation. You are free to copy, modify, or\n//  redistribute.\n\n/*jslint\n  for, this\n  */\n\n/*property\n  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n  lastIndex, length, parse, prototype, push, replace, slice, stringify,\n  test, toJSON, toString, valueOf\n  */\n\nvar setupCustomJSON = function(JSON) {\n\n  var rx_one = /^[\\],:{}\\s]*$/;\n  var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n  var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n  var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n  var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n  function f(n) {\n    // Format integers to have at least two digits.\n    return n < 10\n      ? \"0\" + n\n      : n;\n  }\n\n  function this_value() {\n    return this.valueOf();\n  }\n\n  if (typeof Date.prototype.toJSON !== \"function\") {\n\n    Date.prototype.toJSON = function () {\n\n      return isFinite(this.valueOf())\n        ? this.getUTCFullYear() + \"-\" +\n        f(this.getUTCMonth() + 1) + \"-\" +\n        f(this.getUTCDate()) + \"T\" +\n        f(this.getUTCHours()) + \":\" +\n        f(this.getUTCMinutes()) + \":\" +\n        f(this.getUTCSeconds()) + \"Z\"\n        : null;\n    };\n\n    Boolean.prototype.toJSON = this_value;\n    Number.prototype.toJSON = this_value;\n    String.prototype.toJSON = this_value;\n  }\n\n  var gap;\n  var indent;\n  var meta;\n  var rep;\n\n\n  function quote(string) {\n\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n\n    rx_escapable.lastIndex = 0;\n    return rx_escapable.test(string)\n      ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n        var c = meta[a];\n        return typeof c === \"string\"\n          ? c\n          : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + \"\\\"\"\n    : \"\\\"\" + string + \"\\\"\";\n  }\n\n\n  function str(key, holder) {\n\n    // Produce a string from holder[key].\n\n    var i;          // The loop counter.\n    var k;          // The member key.\n    var v;          // The member value.\n    var length;\n    var mind = gap;\n    var partial;\n    var value = holder[key];\n\n    // If the value has a toJSON method, call it to obtain a replacement value.\n\n    if (value && typeof value === \"object\" &&\n        typeof value.toJSON === \"function\") {\n      value = value.toJSON(key);\n    }\n\n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n\n    if (typeof rep === \"function\") {\n      value = rep.call(holder, key, value);\n    }\n\n    // What happens next depends on the value's type.\n\n    switch (typeof value) {\n      case \"string\":\n        return quote(value);\n\n      case \"number\":\n\n        // JSON numbers must be finite. Encode non-finite numbers as null.\n\n        return isFinite(value)\n          ? String(value)\n          : \"null\";\n\n      case \"boolean\":\n      case \"null\":\n\n        // If the value is a boolean or null, convert it to a string. Note:\n        // typeof null does not produce \"null\". The case is included here in\n        // the remote chance that this gets fixed someday.\n\n        return String(value);\n\n        // If the type is \"object\", we might be dealing with an object or an array or\n        // null.\n\n      case \"object\":\n\n        // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n        // so watch out for that case.\n\n        if (!value) {\n          return \"null\";\n        }\n\n        // Make an array to hold the partial results of stringifying this object value.\n\n        gap += indent;\n        partial = [];\n\n        // Is the value an array?\n\n        if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\n          // The value is an array. Stringify every element. Use null as a placeholder\n          // for non-JSON values.\n\n          length = value.length;\n          for (i = 0; i < length; i += 1) {\n            partial[i] = str(i, value) || \"null\";\n          }\n\n          // Join all of the elements together, separated with commas, and wrap them in\n          // brackets.\n\n          v = partial.length === 0\n            ? \"[]\"\n            : gap\n            ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n            : \"[\" + partial.join(\",\") + \"]\";\n          gap = mind;\n          return v;\n        }\n\n        // If the replacer is an array, use it to select the members to be stringified.\n\n        if (rep && typeof rep === \"object\") {\n          length = rep.length;\n          for (i = 0; i < length; i += 1) {\n            if (typeof rep[i] === \"string\") {\n              k = rep[i];\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        } else {\n\n          // Otherwise, iterate through all of the keys in the object.\n\n          for (k in value) {\n            if (Object.prototype.hasOwnProperty.call(value, k)) {\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        }\n\n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0\n          ? \"{}\"\n          : gap\n          ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n          : \"{\" + partial.join(\",\") + \"}\";\n        gap = mind;\n        return v;\n    }\n  }\n\n  // If the JSON object does not yet have a stringify method, give it one.\n\n  if (typeof JSON.stringify !== \"function\") {\n    meta = {    // table of character substitutions\n      \"\\b\": \"\\\\b\",\n      \"\\t\": \"\\\\t\",\n      \"\\n\": \"\\\\n\",\n      \"\\f\": \"\\\\f\",\n      \"\\r\": \"\\\\r\",\n      \"\\\"\": \"\\\\\\\"\",\n      \"\\\\\": \"\\\\\\\\\"\n    };\n    JSON.stringify = function (value, replacer, space) {\n\n      // The stringify method takes a value and an optional replacer, and an optional\n      // space parameter, and returns a JSON text. The replacer can be a function\n      // that can replace values, or an array of strings that will select the keys.\n      // A default replacer method can be provided. Use of the space parameter can\n      // produce text that is more easily readable.\n\n      var i;\n      gap = \"\";\n      indent = \"\";\n\n      // If the space parameter is a number, make an indent string containing that\n      // many spaces.\n\n      if (typeof space === \"number\") {\n        for (i = 0; i < space; i += 1) {\n          indent += \" \";\n        }\n\n        // If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === \"string\") {\n        indent = space;\n      }\n\n      // If there is a replacer, it must be a function or an array.\n      // Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== \"function\" &&\n          (typeof replacer !== \"object\" ||\n           typeof replacer.length !== \"number\")) {\n        throw new Error(\"JSON.stringify\");\n      }\n\n      // Make a fake root object containing our value under the key of \"\".\n      // Return the result of stringifying the value.\n\n      return str(\"\", {\"\": value});\n    };\n  }\n\n\n  // If the JSON object does not yet have a parse method, give it one.\n\n  if (typeof JSON.parse !== \"function\") {\n    JSON.parse = (function () {\n\n      // This function creates a JSON parse function that uses a state machine rather\n      // than the dangerous eval function to parse a JSON text.\n\n      var state;      // The state of the parser, one of\n      // 'go'         The starting state\n      // 'ok'         The final, accepting state\n      // 'firstokey'  Ready for the first key of the object or\n      //              the closing of an empty object\n      // 'okey'       Ready for the next key of the object\n      // 'colon'      Ready for the colon\n      // 'ovalue'     Ready for the value half of a key/value pair\n      // 'ocomma'     Ready for a comma or closing }\n      // 'firstavalue' Ready for the first value of an array or\n      //              an empty array\n      // 'avalue'     Ready for the next value of an array\n      // 'acomma'     Ready for a comma or closing ]\n      var stack;      // The stack, for controlling nesting.\n      var container;  // The current container object or array\n      var key;        // The current key\n      var value;      // The current value\n      var escapes = { // Escapement translation table\n        \"\\\\\": \"\\\\\",\n        \"\\\"\": \"\\\"\",\n        \"/\": \"/\",\n        \"t\": \"\\t\",\n        \"n\": \"\\n\",\n        \"r\": \"\\r\",\n        \"f\": \"\\f\",\n        \"b\": \"\\b\"\n      };\n      var string = {   // The actions for string tokens\n        go: function () {\n          state = \"ok\";\n        },\n        firstokey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        okey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var number = {   // The actions for number tokens\n        go: function () {\n          state = \"ok\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var action = {\n\n        // The action table describes the behavior of the machine. It contains an\n        // object for each token. Each object contains a method that is called when\n        // a token is matched in a state. An object will lack a method for illegal\n        // states.\n\n        \"{\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = {};\n            state = \"firstokey\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          }\n        },\n        \"}\": {\n          firstokey: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          ocomma: function () {\n            var pop = stack.pop();\n            container[key] = value;\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \"[\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = [];\n            state = \"firstavalue\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          }\n        },\n        \"]\": {\n          firstavalue: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          acomma: function () {\n            var pop = stack.pop();\n            container.push(value);\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \":\": {\n          colon: function () {\n            if (Object.hasOwnProperty.call(container, key)) {\n              throw new SyntaxError(\"Duplicate key '\" + key + \"\\\"\");\n            }\n            state = \"ovalue\";\n          }\n        },\n        \",\": {\n          ocomma: function () {\n            container[key] = value;\n            state = \"okey\";\n          },\n          acomma: function () {\n            container.push(value);\n            state = \"avalue\";\n          }\n        },\n        \"true\": {\n          go: function () {\n            value = true;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = true;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = true;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = true;\n            state = \"acomma\";\n          }\n        },\n        \"false\": {\n          go: function () {\n            value = false;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = false;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = false;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = false;\n            state = \"acomma\";\n          }\n        },\n        \"null\": {\n          go: function () {\n            value = null;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = null;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = null;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = null;\n            state = \"acomma\";\n          }\n        }\n      };\n\n      function debackslashify(text) {\n\n        // Remove and replace any backslash escapement.\n\n        return text.replace(/\\\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {\n          return b\n            ? String.fromCharCode(parseInt(b, 16))\n            : escapes[c];\n        });\n      }\n\n      return function (source, reviver) {\n\n        // A regular expression is used to extract tokens from the JSON text.\n        // The extraction process is cautious.\n\n        var result;\n        var tx = /^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")/;\n\n        // Set the starting state.\n\n        state = \"go\";\n\n        // The stack records the container, key, and state for each object or array\n        // that contains another object or array while processing nested structures.\n\n        stack = [];\n\n        // If any error occurs, we will catch it and ultimately throw a syntax error.\n\n        try {\n\n          // For each token...\n\n          while (true) {\n            result = tx.exec(source);\n            if (!result) {\n              break;\n            }\n\n            // result is the result array from matching the tokenizing regular expression.\n            //  result[0] contains everything that matched, including any initial whitespace.\n            //  result[1] contains any punctuation that was matched, or true, false, or null.\n            //  result[2] contains a matched number, still in string form.\n            //  result[3] contains a matched string, without quotes but with escapement.\n\n            if (result[1]) {\n\n              // Token: Execute the action for this state and token.\n\n              action[result[1]][state]();\n\n            } else if (result[2]) {\n\n              // Number token: Convert the number string into a number value and execute\n              // the action for this state and number.\n\n              value = +result[2];\n              number[state]();\n            } else {\n\n              // String token: Replace the escapement sequences and execute the action for\n              // this state and string.\n\n              value = debackslashify(result[3]);\n              string[state]();\n            }\n\n            // Remove the token from the string. The loop will continue as long as there\n            // are tokens. This is a slow process, but it allows the use of ^ matching,\n            // which assures that no illegal tokens slip through.\n\n            source = source.slice(result[0].length);\n          }\n\n          // If we find a state/token combination that is illegal, then the action will\n          // cause an error. We handle the error by simply changing the state.\n\n        } catch (e) {\n          state = e;\n        }\n\n        // The parsing is finished. If we are not in the final \"ok\" state, or if the\n        // remaining source contains anything except whitespace, then we did not have\n        //a well-formed JSON text.\n\n        if (state !== \"ok\" || (/[^\\u0020\\t\\n\\r]/.test(source))) {\n          throw (state instanceof SyntaxError)\n            ? state\n            : new SyntaxError(\"JSON\");\n        }\n\n        // If there is a reviver function, we recursively walk the new structure,\n        // passing each name/value pair to the reviver function for possible\n        // transformation, starting with a temporary root object that holds the current\n        // value in an empty key. If there is not a reviver function, we simply return\n        // that value.\n\n        return (typeof reviver === \"function\")\n          ? (function walk(holder, key) {\n            var k;\n            var v;\n            var val = holder[key];\n            if (val && typeof val === \"object\") {\n              for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(val, k)) {\n                  v = walk(val, k);\n                  if (v !== undefined) {\n                    val[k] = v;\n                  } else {\n                    delete val[k];\n                  }\n                }\n              }\n            }\n            return reviver.call(holder, key, val);\n          }({\"\": value}, \"\"))\n        : value;\n      };\n    }());\n  }\n}\n\nmodule.exports = setupCustomJSON;\n", "var util = require('util');\nvar os = require('os');\n\nvar packageJson = require('../../package.json');\nvar Client = require('../rollbar');\nvar _ = require('../utility');\nvar API = require('../api');\nvar logger = require('./logger');\n\nvar Transport = require('./transport');\nvar urllib = require('url');\nvar jsonBackup = require('json-stringify-safe');\n\nvar Telemeter = require('../telemetry');\nvar Instrumenter = require('./telemetry');\nvar transforms = require('./transforms');\nvar sharedTransforms = require('../transforms');\nvar sharedPredicates = require('../predicates');\nvar truncation = require('../truncation');\nvar polyfillJSON = require('../../vendor/JSON-js/json3');\n\nfunction Rollbar(options, client) {\n  if (_.isType(options, 'string')) {\n    var accessToken = options;\n    options = {};\n    options.accessToken = accessToken;\n  }\n  if (options.minimumLevel !== undefined) {\n    options.reportLevel = options.minimumLevel;\n    delete options.minimumLevel;\n  }\n  this.options = _.handleOptions(Rollbar.defaultOptions, options, null, logger);\n  this.options._configuredOptions = options;\n  // On the server we want to ignore any maxItems setting\n  delete this.options.maxItems;\n  this.options.environment = this.options.environment || 'unspecified';\n  logger.setVerbose(this.options.verbose);\n  this.lambdaContext = null;\n  this.lambdaTimeoutHandle = null;\n  var transport = new Transport();\n  var api = new API(this.options, transport, urllib, truncation, jsonBackup);\n  var telemeter = new Telemeter(this.options)\n  this.client = client || new Client(this.options, api, logger, telemeter, 'server');\n  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this);\n  this.instrumenter.instrument();\n  if (this.options.locals) {\n    this.locals = initLocals(this.options.locals, logger);\n  }\n  addTransformsToNotifier(this.client.notifier);\n  addPredicatesToQueue(this.client.queue);\n  this.setupUnhandledCapture();\n  _.setupJSON(polyfillJSON);\n}\n\nfunction initLocals(localsOptions, logger) {\n  // Capturing stack local variables is only supported in Node 10 and higher.\n  var nodeMajorVersion = process.versions.node.split('.')[0];\n  if (nodeMajorVersion < 10) { return null; }\n\n  var Locals;\n  if (typeof localsOptions === 'function') {\n    Locals = localsOptions;\n    localsOptions = null; // use defaults\n  } else if (_.isType(localsOptions, 'object')) {\n    Locals = localsOptions.module;\n    delete localsOptions.module;\n  } else {\n    logger.error('options.locals or options.locals.module must be a Locals module');\n    return null;\n  }\n  return new Locals(localsOptions, logger);\n}\n\nvar _instance = null;\nRollbar.init = function (options, client) {\n  if (_instance) {\n    return _instance.global(options).configure(options);\n  }\n  _instance = new Rollbar(options, client);\n  return _instance;\n};\n\nfunction handleUninitialized(maybeCallback) {\n  var message = 'Rollbar is not initialized';\n  logger.error(message);\n  if (maybeCallback) {\n    maybeCallback(new Error(message));\n  }\n}\n\nRollbar.prototype.global = function (options) {\n  options = _.handleOptions(options);\n  // On the server we want to ignore any maxItems setting\n  delete options.maxItems;\n  this.client.global(options);\n  return this;\n};\nRollbar.global = function (options) {\n  if (_instance) {\n    return _instance.global(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.configure = function (options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = { payload: payloadData };\n  }\n  this.options = _.handleOptions(oldOptions, options, payload, logger);\n  this.options._configuredOptions = _.handleOptions(oldOptions._configuredOptions, options, payload);\n  // On the server we want to ignore any maxItems setting\n  delete this.options.maxItems;\n  logger.setVerbose(this.options.verbose);\n  this.client.configure(options, payloadData);\n  this.setupUnhandledCapture();\n\n  if (this.options.locals) {\n    if (this.locals) {\n      this.locals.updateOptions(this.options.locals);\n    } else {\n      this.locals = initLocals(this.options.locals, logger)\n    }\n  }\n  return this;\n};\nRollbar.configure = function (options, payloadData) {\n  if (_instance) {\n    return _instance.configure(options, payloadData);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.lastError = function () {\n  return this.client.lastError;\n};\nRollbar.lastError = function () {\n  if (_instance) {\n    return _instance.lastError();\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.log = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.log(item);\n  return { uuid: uuid };\n};\nRollbar.log = function () {\n  if (_instance) {\n    return _instance.log.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.debug = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.debug(item);\n  return { uuid: uuid };\n};\nRollbar.debug = function () {\n  if (_instance) {\n    return _instance.debug.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.info = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.info(item);\n  return { uuid: uuid };\n};\nRollbar.info = function () {\n  if (_instance) {\n    return _instance.info.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warn = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warn(item);\n  return { uuid: uuid };\n};\nRollbar.warn = function () {\n  if (_instance) {\n    return _instance.warn.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\n\nRollbar.prototype.warning = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warning(item);\n  return { uuid: uuid };\n};\nRollbar.warning = function () {\n  if (_instance) {\n    return _instance.warning.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\n\nRollbar.prototype.error = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.error(item);\n  return { uuid: uuid };\n};\nRollbar.error = function () {\n  if (_instance) {\n    return _instance.error.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\nRollbar.prototype._uncaughtError = function () {\n  var item = this._createItem(arguments);\n  item._isUncaught = true;\n  var uuid = item.uuid;\n  this.client.error(item);\n  return { uuid: uuid };\n};\n\nRollbar.prototype.critical = function () {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.critical(item);\n  return { uuid: uuid };\n};\nRollbar.critical = function () {\n  if (_instance) {\n    return _instance.critical.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.buildJsonPayload = function (item) {\n  return this.client.buildJsonPayload(item);\n};\nRollbar.buildJsonPayload = function () {\n  if (_instance) {\n    return _instance.buildJsonPayload.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.sendJsonPayload = function (jsonPayload) {\n  return this.client.sendJsonPayload(jsonPayload);\n};\nRollbar.sendJsonPayload = function () {\n  if (_instance) {\n    return _instance.sendJsonPayload.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.wait = function (callback) {\n  this.client.wait(callback);\n};\nRollbar.wait = function (callback) {\n  if (_instance) {\n    return _instance.wait(callback)\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.errorHandler = function () {\n  return function (err, request, response, next) {\n    var cb = function (rollbarError) {\n      if (rollbarError) {\n        logger.error('Error reporting to rollbar, ignoring: ' + rollbarError);\n      }\n      return next(err, request, response);\n    };\n    if (!err) {\n      return next(err, request, response);\n    }\n\n    if (err instanceof Error) {\n      return this.error(err, request, cb);\n    }\n    return this.error('Error: ' + err, request, cb);\n  }.bind(this);\n};\nRollbar.errorHandler = function () {\n  if (_instance) {\n    return _instance.errorHandler()\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.lambdaHandler = function (handler, timeoutHandler) {\n  if (handler.length <= 2) {\n    return this.asyncLambdaHandler(handler, timeoutHandler);\n  }\n  return this.syncLambdaHandler(handler, timeoutHandler);\n};\n\nRollbar.prototype.asyncLambdaHandler = function (handler, timeoutHandler) {\n  var self = this;\n  var _timeoutHandler = function (event, context) {\n    var message = 'Function timed out';\n    var custom = {\n      originalEvent: event,\n      originalRequestId: context.awsRequestId,\n    };\n    self.error(message, custom);\n  };\n  var shouldReportTimeouts = self.options.captureLambdaTimeouts;\n  return function rollbarAsyncLambdaHandler(event, context) {\n    return new Promise(function (resolve, reject) {\n      self.lambdaContext = context;\n      if (shouldReportTimeouts) {\n        var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context);\n        self.lambdaTimeoutHandle = setTimeout(timeoutCb, context.getRemainingTimeInMillis() - 1000);\n      }\n      handler(event, context)\n        .then(function (resp) {\n          self.wait(function () {\n            clearTimeout(self.lambdaTimeoutHandle);\n            resolve(resp);\n          });\n        })\n        .catch(function (err) {\n          self.error(err);\n          self.wait(function () {\n            clearTimeout(self.lambdaTimeoutHandle);\n            reject(err);\n          });\n        });\n    });\n  };\n};\nRollbar.prototype.syncLambdaHandler = function (handler, timeoutHandler) {\n  var self = this;\n  var _timeoutHandler = function (event, context, _cb) {\n    var message = 'Function timed out';\n    var custom = {\n      originalEvent: event,\n      originalRequestId: context.awsRequestId,\n    };\n    self.error(message, custom);\n  };\n  var shouldReportTimeouts = self.options.captureLambdaTimeouts;\n  return function (event, context, callback) {\n    self.lambdaContext = context;\n    if (shouldReportTimeouts) {\n      var timeoutCb = (timeoutHandler || _timeoutHandler).bind(null, event, context, callback);\n      self.lambdaTimeoutHandle = setTimeout(timeoutCb, context.getRemainingTimeInMillis() - 1000);\n    }\n    try {\n      handler(event, context, function (err, resp) {\n        if (err) {\n          self.error(err);\n        }\n        self.wait(function () {\n          clearTimeout(self.lambdaTimeoutHandle);\n          callback(err, resp);\n        });\n      });\n    } catch (err) {\n      self.error(err);\n      self.wait(function () {\n        clearTimeout(self.lambdaTimeoutHandle);\n        throw err;\n      });\n    }\n  };\n};\nRollbar.lambdaHandler = function (handler) {\n  if (_instance) {\n    return _instance.lambdaHandler(handler);\n  } else {\n    handleUninitialized();\n  }\n};\n\nfunction wrapCallback(r, f) {\n  return function () {\n    var err = arguments[0];\n    if (err) {\n      r.error(err);\n    }\n    return f.apply(this, arguments);\n  };\n}\n\nRollbar.prototype.wrapCallback = function (f) {\n  return wrapCallback(this, f);\n};\nRollbar.wrapCallback = function (f) {\n  if (_instance) {\n    return _instance.wrapCallback(f);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.captureEvent = function () {\n  var event = _.createTelemetryEvent(arguments);\n  return this.client.captureEvent(event.type, event.metadata, event.level);\n};\nRollbar.captureEvent = function () {\n  if (_instance) {\n    return _instance.captureEvent.apply(_instance, arguments);\n  } else {\n    handleUninitialized();\n  }\n};\n\n/** DEPRECATED **/\n\nRollbar.prototype.reportMessage = function (message, level, request, callback) {\n  logger.log('reportMessage is deprecated');\n  if (_.isFunction(this[level])) {\n    return this[level](message, request, callback);\n  } else {\n    return this.error(message, request, callback);\n  }\n};\nRollbar.reportMessage = function (message, level, request, callback) {\n  if (_instance) {\n    return _instance.reportMessage(message, level, request, callback);\n  } else {\n    handleUninitialized(callback);\n  }\n};\n\nRollbar.prototype.reportMessageWithPayloadData = function (message, payloadData, request, callback) {\n  logger.log('reportMessageWithPayloadData is deprecated');\n  return this.error(message, request, payloadData, callback);\n};\nRollbar.reportMessageWithPayloadData = function (message, payloadData, request, callback) {\n  if (_instance) {\n    return _instance.reportMessageWithPayloadData(message, payloadData, request, callback);\n  } else {\n    handleUninitialized(callback);\n  }\n};\n\n\nRollbar.prototype.handleError = function (err, request, callback) {\n  logger.log('handleError is deprecated');\n  return this.error(err, request, callback);\n};\nRollbar.handleError = function (err, request, callback) {\n  if (_instance) {\n    return _instance.handleError(err, request, callback);\n  } else {\n    handleUninitialized(callback);\n  }\n};\n\n\nRollbar.prototype.handleErrorWithPayloadData = function (err, payloadData, request, callback) {\n  logger.log('handleErrorWithPayloadData is deprecated');\n  return this.error(err, request, payloadData, callback);\n};\nRollbar.handleErrorWithPayloadData = function (err, payloadData, request, callback) {\n  if (_instance) {\n    return _instance.handleErrorWithPayloadData(err, payloadData, request, callback);\n  } else {\n    handleUninitialized(callback);\n  }\n};\n\nRollbar.handleUncaughtExceptions = function (accessToken, options) {\n  if (_instance) {\n    options = options || {};\n    options.accessToken = accessToken;\n    return _instance.configure(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.handleUnhandledRejections = function (accessToken, options) {\n  if (_instance) {\n    options = options || {};\n    options.accessToken = accessToken;\n    return _instance.configure(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.handleUncaughtExceptionsAndRejections = function (accessToken, options) {\n  if (_instance) {\n    options = options || {};\n    options.accessToken = accessToken;\n    return _instance.configure(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\n/** Internal **/\n\nfunction addTransformsToNotifier(notifier) {\n  notifier\n    .addTransform(transforms.baseData)\n    .addTransform(transforms.handleItemWithError)\n    .addTransform(transforms.addBody)\n    .addTransform(sharedTransforms.addMessageWithError)\n    .addTransform(sharedTransforms.addTelemetryData)\n    .addTransform(transforms.addRequestData)\n    .addTransform(transforms.addLambdaData)\n    .addTransform(sharedTransforms.addConfigToPayload)\n    .addTransform(transforms.scrubPayload)\n    .addTransform(sharedTransforms.userTransform(logger))\n    .addTransform(sharedTransforms.addConfiguredOptions)\n    .addTransform(sharedTransforms.addDiagnosticKeys)\n    .addTransform(sharedTransforms.itemToPayload);\n}\n\nfunction addPredicatesToQueue(queue) {\n  queue\n    .addPredicate(sharedPredicates.checkLevel)\n    .addPredicate(sharedPredicates.userCheckIgnore(logger))\n    .addPredicate(sharedPredicates.urlIsNotBlockListed(logger))\n    .addPredicate(sharedPredicates.urlIsSafeListed(logger))\n    .addPredicate(sharedPredicates.messageIsIgnored(logger));\n}\n\nRollbar.prototype._createItem = function (args) {\n  var requestKeys = ['headers', 'protocol', 'url', 'method', 'body', 'route'];\n  var item = _.createItem(args, logger, this, requestKeys, this.lambdaContext);\n\n  if (item.err && item.notifier.locals) {\n    item.localsMap = item.notifier.locals.currentLocalsMap();\n  }\n\n  return item;\n};\n\nfunction _getFirstFunction(args) {\n  for (var i = 0, len = args.length; i < len; ++i) {\n    if (_.isFunction(args[i])) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nRollbar.prototype.setupUnhandledCapture = function () {\n  if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {\n    this.handleUncaughtExceptions();\n  }\n  if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {\n    this.handleUnhandledRejections();\n  }\n};\n\nRollbar.prototype.handleUncaughtExceptions = function () {\n  var exitOnUncaught = !!this.options.exitOnUncaughtException;\n  delete this.options.exitOnUncaughtException;\n\n  addOrReplaceRollbarHandler('uncaughtException', function (err) {\n    if (!this.options.captureUncaught && !this.options.handleUncaughtExceptions) {\n      return;\n    }\n\n    this._uncaughtError(err, function (err) {\n      if (err) {\n        logger.error('Encountered error while handling an uncaught exception.');\n        logger.error(err);\n      }\n    });\n    if (exitOnUncaught) {\n      setImmediate(function () {\n        this.wait(function () {\n          process.exit(1);\n        });\n      }.bind(this));\n    }\n  }.bind(this));\n};\n\nRollbar.prototype.handleUnhandledRejections = function () {\n  addOrReplaceRollbarHandler('unhandledRejection', function (reason) {\n    if (!this.options.captureUnhandledRejections && !this.options.handleUnhandledRejections) {\n      return;\n    }\n\n    this._uncaughtError(reason, function (err) {\n      if (err) {\n        logger.error('Encountered error while handling an uncaught exception.');\n        logger.error(err);\n      }\n    });\n  }.bind(this));\n};\n\nfunction addOrReplaceRollbarHandler(event, action) {\n  // We only support up to two arguments which is enough for how this is used\n  // rather than dealing with `arguments` and `apply`\n  var fn = function (a, b) {\n    action(a, b);\n  };\n  fn._rollbarHandler = true;\n\n  var listeners = process.listeners(event);\n  var len = listeners.length;\n  for (var i = 0; i < len; ++i) {\n    if (listeners[i]._rollbarHandler) {\n      process.removeListener(event, listeners[i]);\n    }\n  }\n  process.on(event, fn);\n}\n\nfunction RollbarError(message, nested) {\n  Error.call(this);\n  Error.captureStackTrace(this, this.constructor);\n\n  this.message = message;\n  this.nested = nested;\n  this.name = this.constructor.name;\n}\nutil.inherits(RollbarError, Error);\nRollbar.Error = RollbarError;\n\nRollbar.defaultOptions = {\n  host: os.hostname(),\n  environment: process.env.NODE_ENV || 'development',\n  framework: 'node-js',\n  showReportedMessageTraces: false,\n  notifier: {\n    name: 'node_rollbar',\n    version: packageJson.version\n  },\n  scrubHeaders: packageJson.defaults.server.scrubHeaders,\n  scrubFields: packageJson.defaults.server.scrubFields,\n  addRequestData: null,\n  reportLevel: packageJson.defaults.reportLevel,\n  verbose: false,\n  enabled: true,\n  transmit: true,\n  sendConfig: false,\n  includeItemsInTelemetry: false,\n  captureEmail: false,\n  captureUsername: false,\n  captureIp: true,\n  captureLambdaTimeouts: true,\n  ignoreDuplicateErrors: true,\n  scrubRequestBody: true,\n  autoInstrument: false\n};\n\nmodule.exports = Rollbar;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// utils.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 0. helper functions\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst spawn = require('child_process').spawn;\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('util');\n\nlet _platform = process.platform;\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\n// const _sunos = (_platform === 'sunos');\n\nlet _cores = 0;\nlet wmicPath = '';\nlet codepage = '';\n\nconst execOptsWin = {\n  windowsHide: true,\n  maxBuffer: 1024 * 20000,\n  encoding: 'UTF-8',\n  env: util._extend({}, process.env, { LANG: 'en_US.UTF-8' })\n};\n\nfunction toInt(value) {\n  let result = parseInt(value, 10);\n  if (isNaN(result)) {\n    result = 0;\n  }\n  return result;\n}\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nfunction unique(obj) {\n  let uniques = [];\n  let stringify = {};\n  for (let i = 0; i < obj.length; i++) {\n    let keys = Object.keys(obj[i]);\n    keys.sort(function (a, b) { return a - b; });\n    let str = '';\n    for (let j = 0; j < keys.length; j++) {\n      str += JSON.stringify(keys[j]);\n      str += JSON.stringify(obj[i][keys[j]]);\n    }\n    if (!{}.hasOwnProperty.call(stringify, str)) {\n      uniques.push(obj[i]);\n      stringify[str] = true;\n    }\n  }\n  return uniques;\n}\n\nfunction sortByKey(array, keys) {\n  return array.sort(function (a, b) {\n    let x = '';\n    let y = '';\n    keys.forEach(function (key) {\n      x = x + a[key]; y = y + b[key];\n    });\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n}\n\nfunction cores() {\n  if (_cores === 0) {\n    _cores = os.cpus().length;\n  }\n  return _cores;\n}\n\nfunction getValue(lines, property, separator, trimmed) {\n  separator = separator || ':';\n  property = property.toLowerCase();\n  trimmed = trimmed || false;\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i].toLowerCase().replace(/\\t/g, '');\n    if (trimmed) {\n      line = line.trim();\n    }\n    if (line.startsWith(property)) {\n      const parts = lines[i].split(separator);\n      if (parts.length >= 2) {\n        parts.shift();\n        return parts.join(separator).trim();\n      } else {\n        return '';\n      }\n    }\n  }\n  return '';\n}\n\nfunction decodeEscapeSequence(str, base) {\n  base = base || 16;\n  return str.replace(/\\\\x([0-9A-Fa-f]{2})/g, function () {\n    return String.fromCharCode(parseInt(arguments[1], base));\n  });\n}\n\nfunction detectSplit(str) {\n  let seperator = '';\n  let part = 0;\n  str.split('').forEach(element => {\n    if (element >= '0' && element <= '9') {\n      if (part === 1) { part++; }\n    } else {\n      if (part === 0) { part++; }\n      if (part === 1) {\n        seperator += element;\n      }\n    }\n  });\n  return seperator;\n}\n\nfunction parseTime(t, pmDesignator) {\n  pmDesignator = pmDesignator || '';\n  t = t.toUpperCase();\n  let hour = 0;\n  let min = 0;\n  let splitter = detectSplit(t);\n  let parts = t.split(splitter);\n  if (parts.length >= 2) {\n    if (parts[2]) {\n      parts[1] += parts[2];\n    }\n    let isPM = (parts[1] && (parts[1].toLowerCase().indexOf('pm') > -1) || (parts[1].toLowerCase().indexOf('p.m.') > -1) || (parts[1].toLowerCase().indexOf('p. m.') > -1) || (parts[1].toLowerCase().indexOf('n') > -1) || (parts[1].toLowerCase().indexOf('ch') > -1) || (parts[1].toLowerCase().indexOf('\u00F6s') > -1) || (pmDesignator && parts[1].toLowerCase().indexOf(pmDesignator) > -1));\n    hour = parseInt(parts[0], 10);\n    min = parseInt(parts[1], 10);\n    hour = isPM && hour < 12 ? hour + 12 : hour;\n    return ('0' + hour).substr(-2) + ':' + ('0' + min).substr(-2);\n  }\n}\n\nfunction parseDateTime(dt, culture) {\n  const result = {\n    date: '',\n    time: ''\n  };\n  culture = culture || {};\n  let dateFormat = (culture.dateFormat || '').toLowerCase();\n  let pmDesignator = (culture.pmDesignator || '');\n\n  const parts = dt.split(' ');\n  if (parts[0]) {\n    if (parts[0].indexOf('/') >= 0) {\n      // Dateformat: mm/dd/yyyy or dd/mm/yyyy or dd/mm/yy or yyyy/mm/dd\n      const dtparts = parts[0].split('/');\n      if (dtparts.length === 3) {\n        if (dtparts[0].length === 4) {\n          // Dateformat: yyyy/mm/dd\n          result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n        } else if (dtparts[2].length === 2) {\n          if ((dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1)) {\n            // Dateformat: mm/dd/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        } else {\n          // Dateformat: mm/dd/yyyy or dd/mm/yyyy\n          const isEN = ((dt.toLowerCase().indexOf('pm') > -1) || (dt.toLowerCase().indexOf('p.m.') > -1) || (dt.toLowerCase().indexOf('p. m.') > -1) || (dt.toLowerCase().indexOf('am') > -1) || (dt.toLowerCase().indexOf('a.m.') > -1) || (dt.toLowerCase().indexOf('a. m.') > -1));\n          if ((isEN || dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1) && dateFormat.indexOf('dd/') !== 0) {\n            // Dateformat: mm/dd/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        }\n      }\n    }\n    if (parts[0].indexOf('.') >= 0) {\n      const dtparts = parts[0].split('.');\n      if (dtparts.length === 3) {\n        if (dateFormat.indexOf('.d.') > -1 || dateFormat.indexOf('.dd.') > -1) {\n          // Dateformat: mm.dd.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n        } else {\n          // Dateformat: dd.mm.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n        }\n      }\n    }\n    if (parts[0].indexOf('-') >= 0) {\n      // Dateformat: yyyy-mm-dd\n      const dtparts = parts[0].split('-');\n      if (dtparts.length === 3) {\n        result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n      }\n    }\n  }\n  if (parts[1]) {\n    parts.shift();\n    let time = parts.join(' ');\n    result.time = parseTime(time, pmDesignator);\n  }\n  return result;\n}\n\nfunction parseHead(head, rights) {\n  let space = (rights > 0);\n  let count = 1;\n  let from = 0;\n  let to = 0;\n  let result = [];\n  for (let i = 0; i < head.length; i++) {\n    if (count <= rights) {\n      // if (head[i] === ' ' && !space) {\n      if (/\\s/.test(head[i]) && !space) {\n        to = i - 1;\n        result.push({\n          from: from,\n          to: to + 1,\n          cap: head.substring(from, to + 1)\n        });\n        from = to + 2;\n        count++;\n      }\n      space = head[i] === ' ';\n    } else {\n      if (!/\\s/.test(head[i]) && space) {\n        to = i - 1;\n        if (from < to) {\n          result.push({\n            from: from,\n            to: to,\n            cap: head.substring(from, to)\n          });\n        }\n        from = to + 1;\n        count++;\n      }\n      space = head[i] === ' ';\n    }\n  }\n  to = 1000;\n  result.push({\n    from: from,\n    to: to,\n    cap: head.substring(from, to)\n  });\n  let len = result.length;\n  for (var i = 0; i < len; i++) {\n    if (result[i].cap.replace(/\\s/g, '').length === 0) {\n      if (i + 1 < len) {\n        result[i].to = result[i + 1].to;\n        result[i].cap = result[i].cap + result[i + 1].cap;\n        result.splice(i + 1, 1);\n        len = len - 1;\n      }\n    }\n  }\n  return result;\n}\n\nfunction findObjectByKey(array, key, value) {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i][key] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getWmic() {\n  if (os.type() === 'Windows_NT' && !wmicPath) {\n    wmicPath = process.env.WINDIR + '\\\\system32\\\\wbem\\\\wmic.exe';\n    if (!fs.existsSync(wmicPath)) {\n      try {\n        const wmicPathArray = execSync('WHERE WMIC').toString().split('\\r\\n');\n        if (wmicPathArray && wmicPathArray.length) {\n          wmicPath = wmicPathArray[0];\n        } else {\n          wmicPath = 'wmic';\n        }\n      } catch (e) {\n        wmicPath = 'wmic';\n      }\n    }\n  }\n  return wmicPath;\n}\n\nfunction wmic(command, options) {\n  options = options || execOptsWin;\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec(process.env.WINDIR + '\\\\system32\\\\chcp.com 65001 | ' + getWmic() + ' ' + command, options, function (error, stdout) {\n          resolve(stdout, error);\n        }).stdin.end();\n      } catch (e) {\n        resolve('', e);\n      }\n    });\n  });\n}\n\nfunction getVboxmanage() {\n  return _windows ? process.env.VBOX_INSTALL_PATH || process.env.VBOX_MSI_INSTALL_PATH + '\\\\VBoxManage.exe' + '\" ' : 'vboxmanage';\n}\n\nfunction powerShell(cmd) {\n\n  let result = '';\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        const child = spawn('powershell.exe', ['-NoLogo', '-InputFormat', 'Text', '-NoExit', '-ExecutionPolicy', 'Unrestricted', '-Command', '-'], {\n          stdio: 'pipe',\n          windowsHide: true,\n          maxBuffer: 1024 * 20000,\n          encoding: 'UTF-8',\n          env: util._extend({}, process.env, { LANG: 'en_US.UTF-8' })\n        });\n\n        if (child && !child.pid) {\n          child.on('error', function () {\n            resolve(result);\n          });\n        }\n        if (child && child.pid) {\n          child.stdout.on('data', function (data) {\n            result = result + data.toString('utf8');\n          });\n          child.stderr.on('data', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('close', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('error', function () {\n            child.kill();\n            resolve(result);\n          });\n          try {\n            child.stdin.write(cmd + os.EOL);\n            child.stdin.write('exit' + os.EOL);\n            child.stdin.end();\n          } catch (e) {\n            child.kill();\n            resolve(result);\n          }\n        } else {\n          resolve(result);\n        }\n      } catch (e) {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction getCodepage() {\n  if (_windows) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('chcp');\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split(':');\n        codepage = parts.length > 1 ? parts[1].replace('.', '') : '';\n      } catch (err) {\n        codepage = '437';\n      }\n    }\n    return codepage;\n  }\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('echo $LANG');\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split('.');\n        codepage = parts.length > 1 ? parts[1].trim() : '';\n        if (!codepage) {\n          codepage = 'UTF-8';\n        }\n      } catch (err) {\n        codepage = 'UTF-8';\n      }\n    }\n    return codepage;\n  }\n}\n\nfunction isRaspberry() {\n  const PI_MODEL_NO = [\n    'BCM2708',\n    'BCM2709',\n    'BCM2710',\n    'BCM2835',\n    'BCM2837B0'\n  ];\n  let cpuinfo = [];\n  try {\n    cpuinfo = fs.readFileSync('/proc/cpuinfo', { encoding: 'utf8' }).split('\\n');\n  } catch (e) {\n    return false;\n  }\n  const hardware = getValue(cpuinfo, 'hardware');\n  return (hardware && PI_MODEL_NO.indexOf(hardware) > -1);\n}\n\nfunction isRaspbian() {\n  let osrelease = [];\n  try {\n    osrelease = fs.readFileSync('/etc/os-release', { encoding: 'utf8' }).split('\\n');\n  } catch (e) {\n    return false;\n  }\n  const id = getValue(osrelease, 'id');\n  return (id && id.indexOf('raspbian') > -1);\n}\n\nfunction execWin(cmd, opts, callback) {\n  if (!callback) {\n    callback = opts;\n    opts = execOptsWin;\n  }\n  let newCmd = 'chcp 65001 > nul && cmd /C ' + cmd + ' && chcp ' + codepage + ' > nul';\n  exec(newCmd, opts, function (error, stdout) {\n    callback(error, stdout);\n  });\n}\n\nfunction darwinXcodeExists() {\n  const cmdLineToolsExists = fs.existsSync('/Library/Developer/CommandLineTools/usr/bin/');\n  const xcodeAppExists = fs.existsSync('/Applications/Xcode.app/Contents/Developer/Tools');\n  const xcodeExists = fs.existsSync('/Library/Developer/Xcode/');\n  return (cmdLineToolsExists || xcodeExists || xcodeAppExists);\n}\n\nfunction nanoSeconds() {\n  const time = process.hrtime();\n  if (!Array.isArray(time) || time.length !== 2) {\n    return 0;\n  }\n  return +time[0] * 1e9 + +time[1];\n}\n\nfunction countUniqueLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      if (uniqueLines.indexOf(line) === -1) {\n        uniqueLines.push(line);\n      }\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction countLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      uniqueLines.push(line);\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction sanitizeShellString(str) {\n  let result = str || '';\n  result = result.replace(/>/g, '');\n  result = result.replace(/</g, '');\n  result = result.replace(/\\*/g, '');\n  result = result.replace(/\\?/g, '');\n  result = result.replace(/\\[/g, '');\n  result = result.replace(/\\]/g, '');\n  result = result.replace(/\\|/g, '');\n  result = result.replace(/\\`/g, '');\n  result = result.replace(/\\$/g, '');\n  result = result.replace(/;/g, '');\n  result = result.replace(/&/g, '');\n  result = result.replace(/\\)/g, '');\n  result = result.replace(/\\(/g, '');\n  result = result.replace(/\\$/g, '');\n  result = result.replace(/#/g, '');\n  result = result.replace(/\\\\/g, '');\n  result = result.replace(/\\t/g, '');\n  result = result.replace(/\\n/g, '');\n  result = result.replace(/\\\"/g, '');\n  return result;\n}\n\nfunction hex2bin(hex) {\n  return (\"00000000\" + (parseInt(hex, 16)).toString(2)).substr(-8);\n}\n\nfunction decodePiCpuinfo(lines) {\n\n  // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n\n  const oldRevisionCodes = {\n    '0002': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0003': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0004': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0005': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '0006': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0007': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0008': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0009': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '000d': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '000e': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '000f': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0010': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0011': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0012': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0013': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0014': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0015': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: '512MB\tEmbest',\n      processor: 'BCM2835'\n    }\n  }\n\n  const processorList = [\n    'BMC2835',\n    'BMC2836',\n    'BMC2837',\n    'BMC2711',\n  ];\n  const manufacturerList = [\n    'Sony UK',\n    'Egoman',\n    'Embest',\n    'Sony Japan',\n    'Embest',\n    'Stadium'\n  ];\n  const typeList = {\n    '00': 'A',\n    '01': 'B',\n    '02': 'A+',\n    '03': 'B+',\n    '04': '2B',\n    '05': 'Alpha (early prototype)',\n    '06': 'CM1',\n    '08': '3B',\n    '09': 'Zero',\n    '0a': 'CM3',\n    '0c': 'Zero W',\n    '0d': '3B+',\n    '0e': '3A+',\n    '0f': 'Internal use only',\n    '10': 'CM3+',\n    '11': '4B',\n    '13': '400',\n    '14': 'CM4'\n  };\n\n  const revisionCode = getValue(lines, 'revision', ':', true);\n  const model = getValue(lines, 'model:', ':', true);\n  const serial = getValue(lines, 'serial', ':', true);\n\n  let result = {};\n  if (oldRevisionCodes.hasOwnProperty(revisionCode)) {\n    // old revision codes\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: oldRevisionCodes[revisionCode].memory,\n      manufacturer: oldRevisionCodes[revisionCode].manufacturer,\n      processor: oldRevisionCodes[revisionCode].processor,\n      type: oldRevisionCodes[revisionCode].type,\n      revision: oldRevisionCodes[revisionCode].revision,\n    }\n\n  } else {\n    // new revision code\n    const revision = ('00000000' + getValue(lines, 'revision', ':', true).toLowerCase()).substr(-8);\n    // const revisionStyleNew = hex2bin(revision.substr(2, 1)).substr(4, 1) === '1';\n    const memSizeCode = parseInt(hex2bin(revision.substr(2, 1)).substr(5, 3), 2) || 0;\n    const manufacturer = manufacturerList[parseInt(revision.substr(3, 1), 10)];\n    const processor = processorList[parseInt(revision.substr(4, 1), 10)];\n    const typeCode = revision.substr(5, 2);\n\n\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: 256 * Math.pow(2, memSizeCode),\n      manufacturer,\n      processor,\n      type: typeList.hasOwnProperty(typeCode) ? typeList[typeCode] : '',\n      revision: '1.' + revision.substr(7, 1),\n    }\n  }\n  return result;\n}\n\nfunction noop() { }\n\nexports.toInt = toInt;\nexports.execOptsWin = execOptsWin;\nexports.getCodepage = getCodepage;\nexports.execWin = execWin;\nexports.isFunction = isFunction;\nexports.unique = unique;\nexports.sortByKey = sortByKey;\nexports.cores = cores;\nexports.getValue = getValue;\nexports.decodeEscapeSequence = decodeEscapeSequence;\nexports.parseDateTime = parseDateTime;\nexports.parseHead = parseHead;\nexports.findObjectByKey = findObjectByKey;\nexports.getWmic = getWmic;\nexports.wmic = wmic;\nexports.darwinXcodeExists = darwinXcodeExists;\nexports.getVboxmanage = getVboxmanage;\nexports.powerShell = powerShell;\nexports.nanoSeconds = nanoSeconds;\nexports.countUniqueLines = countUniqueLines;\nexports.countLines = countLines;\nexports.noop = noop;\nexports.isRaspberry = isRaspberry;\nexports.isRaspbian = isRaspbian;\nexports.sanitizeShellString = sanitizeShellString;\nexports.decodePiCpuinfo = decodePiCpuinfo;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// system.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 2. System (Hardware, BIOS, Base Board)\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction system(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: 'Computer',\n        version: '',\n        serial: '-',\n        uuid: '-',\n        sku: '-',\n      };\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t system 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          // if (!error) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'manufacturer');\n          result.model = util.getValue(lines, 'product name');\n          result.version = util.getValue(lines, 'version');\n          result.serial = util.getValue(lines, 'serial number');\n          result.uuid = util.getValue(lines, 'uuid');\n          result.sku = util.getValue(lines, 'sku number');\n          // }\n          // Non-Root values\n          const cmd = `echo -n \"product_name: \"; cat /sys/devices/virtual/dmi/id/product_name 2>/dev/null; echo;\n            echo -n \"product_serial: \"; cat /sys/devices/virtual/dmi/id/product_serial 2>/dev/null; echo;\n            echo -n \"product_uuid: \"; cat /sys/devices/virtual/dmi/id/product_uuid 2>/dev/null; echo;\n            echo -n \"product_version: \"; cat /sys/devices/virtual/dmi/id/product_version 2>/dev/null; echo;\n            echo -n \"sys_vendor: \"; cat /sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = result.manufacturer === '' ? util.getValue(lines, 'sys_vendor') : result.manufacturer;\n            result.model = result.model === '' ? util.getValue(lines, 'product_name') : result.model;\n            result.version = result.version === '' ? util.getValue(lines, 'product_version') : result.version;\n            result.serial = result.serial === '' ? util.getValue(lines, 'product_serial') : result.serial;\n            result.uuid = result.uuid === '' ? util.getValue(lines, 'product_uuid') : result.uuid;\n          } catch (e) {\n            util.noop();\n          }\n          if (!result.serial || result.serial.toLowerCase().indexOf('o.e.m.') !== -1) result.serial = '-';\n          if (!result.manufacturer || result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) result.manufacturer = '';\n          if (!result.model || result.model.toLowerCase().indexOf('o.e.m.') !== -1) result.model = 'Computer';\n          if (!result.version || result.version.toLowerCase().indexOf('o.e.m.') !== -1) result.version = '';\n          if (!result.sku || result.sku.toLowerCase().indexOf('o.e.m.') !== -1) result.sku = '-';\n          // detect docker\n          if (fs.existsSync('/.dockerenv') || fs.existsSync('/.dockerinit')) {\n            result.model = 'Docker Container';\n          }\n          if (result.manufacturer === '' && result.model === 'Computer' && result.version === '') { // still default values\n            exec('dmesg | grep -i virtual | grep -iE \"vmware|qemu|kvm|xen\"', function (error, stdout) {\n              // detect virtual machines\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                if (lines.length > 0) result.model = 'Virtual machine';\n              }\n\n              if (result.manufacturer === '' && result.model === 'Computer' && result.version === '') {\n                // Check Raspberry Pi\n                fs.readFile('/proc/cpuinfo', function (error, stdout) {\n                  if (!error) {\n                    let lines = stdout.toString().split('\\n');\n                    result.model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n                    result.version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n                    result.serial = util.getValue(lines, 'serial', ':', true);\n                    const model = util.getValue(lines, 'model:', ':', true);\n                    // reference values: https://elinux.org/RPi_HardwareHistory\n                    // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n                    if ((result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2835' || result.model === 'BCM2837') && model.toLowerCase().indexOf('raspberry') >= 0) {\n                      const rPIRevision = util.decodePiCpuinfo(lines);\n                      result.model = rPIRevision.model;\n                      result.version = rPIRevision.revisionCode;\n                      result.manufacturer = 'Raspberry Pi Foundation';\n                      result.raspberry = {\n                        manufacturer: rPIRevision.manufacturer,\n                        processor: rPIRevision.processor,\n                        type: rPIRevision.type,\n                        revision: rPIRevision.revision\n                      };\n                    }\n\n                    // if (result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2835' || result.model === 'BCM2837') {\n\n\n                    //   // Pi 4\n                    //   if (['d03114'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 4 Model B';\n                    //     result.version = result.version + ' - Rev. 1.4';\n                    //   }\n                    //   if (['b03112', 'c03112'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 4 Model B';\n                    //     result.version = result.version + ' - Rev. 1.2';\n                    //   }\n                    //   if (['a03111', 'b03111', 'c03111'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 4 Model B';\n                    //     result.version = result.version + ' - Rev. 1.1';\n                    //   }\n                    //   // Pi 3\n                    //   if (['a02082', 'a22082', 'a32082', 'a52082'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 3 Model B';\n                    //     result.version = result.version + ' - Rev. 1.2';\n                    //   }\n                    //   if (['a22083'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 3 Model B';\n                    //     result.version = result.version + ' - Rev. 1.3';\n                    //   }\n                    //   if (['a020d3'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 3 Model B+';\n                    //     result.version = result.version + ' - Rev. 1.3';\n                    //   }\n                    //   if (['9020e0'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 3 Model A+';\n                    //     result.version = result.version + ' - Rev. 1.3';\n                    //   }\n                    //   // Pi 2 Model B\n                    //   if (['a01040'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 2 Model B';\n                    //     result.version = result.version + ' - Rev. 1.0';\n                    //   }\n                    //   if (['a01041', 'a21041'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 2 Model B';\n                    //     result.version = result.version + ' - Rev. 1.1';\n                    //   }\n                    //   if (['a22042', 'a02042'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi 2 Model B';\n                    //     result.version = result.version + ' - Rev. 1.2';\n                    //   }\n\n                    //   // Compute Model\n                    //   if (['a02100'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi CM3+';\n                    //     result.version = result.version + ' - Rev 1.0';\n                    //   }\n                    //   if (['a020a0', 'a220a0'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi CM3';\n                    //     result.version = result.version + ' - Rev 1.0';\n                    //   }\n                    //   if (['900061'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi CM';\n                    //     result.version = result.version + ' - Rev 1.1';\n                    //   }\n\n                    //   // Pi Zero\n                    //   if (['900092', '920092'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Zero';\n                    //     result.version = result.version + ' - Rev 1.2';\n                    //   }\n                    //   if (['900093', '920093'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Zero';\n                    //     result.version = result.version + ' - Rev 1.3';\n                    //   }\n                    //   if (['9000c1'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Zero W';\n                    //     result.version = result.version + ' - Rev 1.1';\n                    //   }\n\n                    //   // A, B, A+ B+\n                    //   if (['0002', '0003'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model B';\n                    //     result.version = result.version + ' - Rev 1.0';\n                    //   }\n                    //   if (['0004', '0005', '0006', '000d', '000e', '000f'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model B';\n                    //     result.version = result.version + ' - Rev 2.0';\n                    //   }\n                    //   if (['0007', '0008', '0009'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model A';\n                    //     result.version = result.version + ' - Rev 2.0';\n                    //   }\n                    //   if (['0010'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model B+';\n                    //     result.version = result.version + ' - Rev 1.0';\n                    //   }\n                    //   if (['0012'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model A+';\n                    //     result.version = result.version + ' - Rev 1.0';\n                    //   }\n                    //   if (['0013', '900032'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model B+';\n                    //     result.version = result.version + ' - Rev 1.2';\n                    //   }\n                    //   if (['0015', '900021'].indexOf(result.version) >= 0) {\n                    //     result.model = result.model + ' - Pi Model A+';\n                    //     result.version = result.version + ' - Rev 1.1';\n                    //   }\n                    //   if (result.model.indexOf('Pi') !== -1 && result.version) {  // Pi, Pi Zero\n                    //     result.manufacturer = 'Raspberry Pi Foundation';\n                    //   }\n                    // }\n                  }\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.uuid = util.getValue(lines, 'ioplatformuuid', '=', true);\n            result.sku = util.getValue(lines, 'board-id', '=', true);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('csproduct get /value').then((stdout, error) => {\n            if (!error) {\n              // let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0)[0].trim().split(/\\s\\s+/);\n              let lines = stdout.split('\\r\\n');\n              result.manufacturer = util.getValue(lines, 'vendor', '=');\n              result.model = util.getValue(lines, 'name', '=');\n              result.version = util.getValue(lines, 'version', '=');\n              result.serial = util.getValue(lines, 'identifyingnumber', '=');\n              result.uuid = util.getValue(lines, 'uuid', '=');\n              util.wmic('/namespace:\\\\\\\\root\\\\wmi path MS_SystemInformation get /value').then((stdout, error) => {\n                if (!error) {\n                  let lines = stdout.split('\\r\\n');\n                  result.sku = util.getValue(lines, 'systemsku', '=');\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.system = system;\n\nfunction bios(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        vendor: '',\n        version: '',\n        releaseDate: '',\n        revision: '',\n      };\n      let cmd = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode --type 0 2>/dev/null; unset LC_ALL';\n        }\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.vendor = util.getValue(lines, 'Vendor');\n          result.version = util.getValue(lines, 'Version');\n          let datetime = util.getValue(lines, 'Release Date');\n          result.releaseDate = util.parseDateTime(datetime).date;\n          result.revision = util.getValue(lines, 'BIOS Revision');\n          // Non-Root values\n          const cmd = `echo -n \"bios_date: \"; cat /sys/devices/virtual/dmi/id/bios_date 2>/dev/null; echo;\n            echo -n \"bios_vendor: \"; cat /sys/devices/virtual/dmi/id/bios_vendor 2>/dev/null; echo;\n            echo -n \"bios_version: \"; cat /sys/devices/virtual/dmi/id/bios_version 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.vendor = !result.vendor ? util.getValue(lines, 'bios_vendor') : result.vendor;\n            result.version = !result.version ? util.getValue(lines, 'bios_version') : result.version;\n            datetime = util.getValue(lines, 'bios_date');\n            result.releaseDate = !result.releaseDate ? util.parseDateTime(datetime).date : result.releaseDate;\n          } catch (e) {\n            util.noop();\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        result.vendor = 'Apple Inc.';\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        result.vendor = 'Sun Microsystems';\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('bios get /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              const description = util.getValue(lines, 'description', '=');\n              if (description.indexOf(' Version ') !== -1) {\n                // ... Phoenix ROM BIOS PLUS Version 1.10 A04\n                result.vendor = description.split(' Version ')[0].trim();\n                result.version = description.split(' Version ')[1].trim();\n              } else if (description.indexOf(' Ver: ') !== -1) {\n                // ... BIOS Date: 06/27/16 17:50:16 Ver: 1.4.5\n                result.vendor = util.getValue(lines, 'manufacturer', '=');\n                result.version = description.split(' Ver: ')[1].trim();\n              } else {\n                result.vendor = util.getValue(lines, 'manufacturer', '=');\n                result.version = util.getValue(lines, 'version', '=');\n              }\n              result.releaseDate = util.getValue(lines, 'releasedate', '=');\n              if (result.releaseDate.length >= 10) {\n                result.releaseDate = result.releaseDate.substr(0, 4) + '-' + result.releaseDate.substr(4, 2) + '-' + result.releaseDate.substr(6, 2);\n              }\n              result.revision = util.getValue(lines, 'buildnumber', '=');\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.bios = bios;\n\nfunction baseboard(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n      };\n      let cmd = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n          // 'BCM2709', 'BCM2835', 'BCM2708' -->\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t 2 2>/dev/null; unset LC_ALL';\n        }\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'Manufacturer');\n          result.model = util.getValue(lines, 'Product Name');\n          result.version = util.getValue(lines, 'Version');\n          result.serial = util.getValue(lines, 'Serial Number');\n          result.assetTag = util.getValue(lines, 'Asset Tag');\n          // Non-Root values\n          const cmd = `echo -n \"board_asset_tag: \"; cat /sys/devices/virtual/dmi/id/board_asset_tag 2>/dev/null; echo;\n            echo -n \"board_name: \"; cat /sys/devices/virtual/dmi/id/board_name 2>/dev/null; echo;\n            echo -n \"board_serial: \"; cat /sys/devices/virtual/dmi/id/board_serial 2>/dev/null; echo;\n            echo -n \"board_vendor: \"; cat /sys/devices/virtual/dmi/id/board_vendor 2>/dev/null; echo;\n            echo -n \"board_version: \"; cat /sys/devices/virtual/dmi/id/board_version 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = !result.manufacturer ? util.getValue(lines, 'board_vendor') : result.manufacturer;\n            result.model = !result.model ? util.getValue(lines, 'board_name') : result.model;\n            result.version = !result.version ? util.getValue(lines, 'board_version') : result.version;\n            result.serial = !result.serial ? util.getValue(lines, 'board_serial') : result.serial;\n            result.assetTag = !result.assetTag ? util.getValue(lines, 'board_asset_tag') : result.assetTag;\n          } catch (e) {\n            util.noop();\n          }\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) result.serial = '-';\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) result.assetTag = '-';\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.assetTag = util.getValue(lines, 'board-id', '=', true);\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('baseboard get /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n\n              result.manufacturer = util.getValue(lines, 'manufacturer', '=');\n              result.model = util.getValue(lines, 'model', '=');\n              if (!result.model) {\n                result.model = util.getValue(lines, 'product', '=');\n              }\n              result.version = util.getValue(lines, 'version', '=');\n              result.serial = util.getValue(lines, 'serialnumber', '=');\n              result.assetTag = util.getValue(lines, 'partnumber', '=');\n              if (!result.assetTag) {\n                result.assetTag = util.getValue(lines, 'sku', '=');\n              }\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.baseboard = baseboard;\n\nfunction chassis(callback) {\n  const chassisTypes = ['Other',\n    'Unknown',\n    'Desktop',\n    'Low Profile Desktop',\n    'Pizza Box',\n    'Mini Tower',\n    'Tower',\n    'Portable',\n    'Laptop',\n    'Notebook',\n    'Hand Held',\n    'Docking Station',\n    'All in One',\n    'Sub Notebook',\n    'Space-Saving',\n    'Lunch Box',\n    'Main System Chassis',\n    'Expansion Chassis',\n    'SubChassis',\n    'Bus Expansion Chassis',\n    'Peripheral Chassis',\n    'Storage Chassis',\n    'Rack Mount Chassis',\n    'Sealed-Case PC',\n    'Multi-System Chassis',\n    'Compact PCI',\n    'Advanced TCA',\n    'Blade',\n    'Blade Enclosure',\n    'Tablet',\n    'Concertible',\n    'Detachable',\n    'IoT Gateway ',\n    'Embedded PC',\n    'Mini PC',\n    'Stick PC',\n  ];\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: '',\n        type: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        sku: '',\n      };\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        const cmd = `echo -n \"chassis_asset_tag: \"; cat /sys/devices/virtual/dmi/id/chassis_asset_tag 2>/dev/null; echo;\n            echo -n \"chassis_serial: \"; cat /sys/devices/virtual/dmi/id/chassis_serial 2>/dev/null; echo;\n            echo -n \"chassis_type: \"; cat /sys/devices/virtual/dmi/id/chassis_type 2>/dev/null; echo;\n            echo -n \"chassis_vendor: \"; cat /sys/devices/virtual/dmi/id/chassis_vendor 2>/dev/null; echo;\n            echo -n \"chassis_version: \"; cat /sys/devices/virtual/dmi/id/chassis_version 2>/dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'chassis_vendor');\n          const ctype = parseInt(util.getValue(lines, 'chassis_type').replace(/\\D/g, ''));\n          result.type = (ctype && !isNaN(ctype) && ctype < chassisTypes.length) ? chassisTypes[ctype - 1] : '';\n          result.version = util.getValue(lines, 'chassis_version');\n          result.serial = util.getValue(lines, 'chassis_serial');\n          result.assetTag = util.getValue(lines, 'chassis_asset_tag');\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) result.serial = '-';\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) result.assetTag = '-';\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = util.getValue(lines, 'model', '=', true);\n            result.version = util.getValue(lines, 'version', '=', true);\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.assetTag = util.getValue(lines, 'board-id', '=', true);\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('path Win32_SystemEnclosure get /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n\n              result.manufacturer = util.getValue(lines, 'manufacturer', '=');\n              result.model = util.getValue(lines, 'model', '=');\n              const ctype = parseInt(util.getValue(lines, 'ChassisTypes', '=').replace(/\\D/g, ''));\n              result.type = (ctype && !isNaN(ctype) && ctype < chassisTypes.length) ? chassisTypes[ctype - 1] : '';\n              result.version = util.getValue(lines, 'version', '=');\n              result.serial = util.getValue(lines, 'serialnumber', '=');\n              result.assetTag = util.getValue(lines, 'partnumber', '=');\n              result.sku = util.getValue(lines, 'sku', '=');\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.chassis = chassis;\n\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// osinfo.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 3. Operating System\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst NOT_SUPPORTED = 'not supported';\n\n// --------------------------\n// Get current time and OS uptime\n\nfunction time() {\n  let t = new Date().toString().split(' ');\n\n  return {\n    current: Date.now(),\n    uptime: os.uptime(),\n    timezone: (t.length >= 7) ? t[5] : '',\n    timezoneName: (t.length >= 7) ? t.slice(6).join(' ').replace(/\\(/g, '').replace(/\\)/g, '') : ''\n  };\n}\n\nexports.time = time;\n\n// --------------------------\n// Get logo filename of OS distribution\n\nfunction getLogoFile(distro) {\n  distro = distro || '';\n  distro = distro.toLowerCase();\n  let result = _platform;\n  if (_windows) {\n    result = 'windows';\n  }\n  else if (distro.indexOf('mac os') !== -1) {\n    result = 'apple';\n  }\n  else if (distro.indexOf('arch') !== -1) {\n    result = 'arch';\n  }\n  else if (distro.indexOf('centos') !== -1) {\n    result = 'centos';\n  }\n  else if (distro.indexOf('coreos') !== -1) {\n    result = 'coreos';\n  }\n  else if (distro.indexOf('debian') !== -1) {\n    result = 'debian';\n  }\n  else if (distro.indexOf('deepin') !== -1) {\n    result = 'deepin';\n  }\n  else if (distro.indexOf('elementary') !== -1) {\n    result = 'elementary';\n  }\n  else if (distro.indexOf('fedora') !== -1) {\n    result = 'fedora';\n  }\n  else if (distro.indexOf('gentoo') !== -1) {\n    result = 'gentoo';\n  }\n  else if (distro.indexOf('mageia') !== -1) {\n    result = 'mageia';\n  }\n  else if (distro.indexOf('mandriva') !== -1) {\n    result = 'mandriva';\n  }\n  else if (distro.indexOf('manjaro') !== -1) {\n    result = 'manjaro';\n  }\n  else if (distro.indexOf('mint') !== -1) {\n    result = 'mint';\n  }\n  else if (distro.indexOf('mx') !== -1) {\n    result = 'mx';\n  }\n  else if (distro.indexOf('openbsd') !== -1) {\n    result = 'openbsd';\n  }\n  else if (distro.indexOf('freebsd') !== -1) {\n    result = 'freebsd';\n  }\n  else if (distro.indexOf('opensuse') !== -1) {\n    result = 'opensuse';\n  }\n  else if (distro.indexOf('pclinuxos') !== -1) {\n    result = 'pclinuxos';\n  }\n  else if (distro.indexOf('puppy') !== -1) {\n    result = 'puppy';\n  }\n  else if (distro.indexOf('raspbian') !== -1) {\n    result = 'raspbian';\n  }\n  else if (distro.indexOf('reactos') !== -1) {\n    result = 'reactos';\n  }\n  else if (distro.indexOf('redhat') !== -1) {\n    result = 'redhat';\n  }\n  else if (distro.indexOf('slackware') !== -1) {\n    result = 'slackware';\n  }\n  else if (distro.indexOf('sugar') !== -1) {\n    result = 'sugar';\n  }\n  else if (distro.indexOf('steam') !== -1) {\n    result = 'steam';\n  }\n  else if (distro.indexOf('suse') !== -1) {\n    result = 'suse';\n  }\n  else if (distro.indexOf('mate') !== -1) {\n    result = 'ubuntu-mate';\n  }\n  else if (distro.indexOf('lubuntu') !== -1) {\n    result = 'lubuntu';\n  }\n  else if (distro.indexOf('xubuntu') !== -1) {\n    result = 'xubuntu';\n  }\n  else if (distro.indexOf('ubuntu') !== -1) {\n    result = 'ubuntu';\n  }\n  else if (distro.indexOf('solaris') !== -1) {\n    result = 'solaris';\n  }\n  else if (distro.indexOf('tails') !== -1) {\n    result = 'tails';\n  }\n  else if (distro.indexOf('robolinux') !== -1) {\n    result = 'robolinux';\n  } else if (_linux && distro) {\n    result = distro.toLowerCase().trim().replace(/\\s+/g, '-');\n  }\n  return result;\n}\n\n// --------------------------\n// OS Information\n\nfunction osInfo(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n\n        platform: (_platform === 'Windows_NT' ? 'Windows' : _platform),\n        distro: 'unknown',\n        release: 'unknown',\n        codename: '',\n        kernel: os.release(),\n        arch: os.arch(),\n        hostname: os.hostname(),\n        codepage: '',\n        logofile: '',\n        serial: '',\n        build: '',\n        servicepack: '',\n        uefi: false\n      };\n\n      if (_linux) {\n\n        exec('cat /etc/*-release; cat /usr/lib/os-release; cat /etc/openwrt_release', function (error, stdout) {\n          //if (!error) {\n          /**\n           * @namespace\n           * @property {string}  DISTRIB_ID\n           * @property {string}  NAME\n           * @property {string}  DISTRIB_RELEASE\n           * @property {string}  VERSION_ID\n           * @property {string}  DISTRIB_CODENAME\n           */\n          let release = {};\n          let lines = stdout.toString().split('\\n');\n          lines.forEach(function (line) {\n            if (line.indexOf('=') !== -1) {\n              release[line.split('=')[0].trim().toUpperCase()] = line.split('=')[1].trim();\n            }\n          });\n          let releaseVersion = (release.VERSION || '').replace(/\"/g, '');\n          let codename = (release.DISTRIB_CODENAME || release.VERSION_CODENAME || '').replace(/\"/g, '');\n          if (releaseVersion.indexOf('(') >= 0) {\n            codename = releaseVersion.split('(')[1].replace(/[()]/g, '').trim();\n            releaseVersion = releaseVersion.split('(')[0].trim();\n          }\n          result.distro = (release.DISTRIB_ID || release.NAME || 'unknown').replace(/\"/g, '');\n          result.logofile = getLogoFile(result.distro);\n          result.release = (releaseVersion || release.DISTRIB_RELEASE || release.VERSION_ID || 'unknown').replace(/\"/g, '');\n          result.codename = codename;\n          result.codepage = util.getCodepage();\n          result.build = (release.BUILD_ID || '').replace(/\"/g, '').trim();\n          isUefiLinux().then(uefi => {\n            result.uefi = uefi;\n            uuid().then(data => {\n              result.serial = data.os;\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          });\n          //}\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n\n        exec('sysctl kern.ostype kern.osrelease kern.osrevision kern.hostuuid machdep.bootmethod', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.distro = util.getValue(lines, 'kern.ostype');\n            result.logofile = getLogoFile(result.distro);\n            result.release = util.getValue(lines, 'kern.osrelease').split('-')[0];\n            result.serial = util.getValue(lines, 'kern.uuid');\n            result.codename = '';\n            result.codepage = util.getCodepage();\n            result.uefi = util.getValue(lines, 'machdep.bootmethod').toLowerCase().indexOf('uefi') >= 0;\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sw_vers; sysctl kern.ostype kern.osrelease kern.osrevision kern.uuid', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.serial = util.getValue(lines, 'kern.uuid');\n          result.distro = util.getValue(lines, 'ProductName');\n          result.release = util.getValue(lines, 'ProductVersion');\n          result.build = util.getValue(lines, 'BuildVersion');\n          result.logofile = getLogoFile(result.distro);\n          result.codename = 'macOS';\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.5') > -1 ? 'Mac OS X Leopard' : result.codename);\n          result.codename = (result.release.indexOf('10.6') > -1 ? 'Mac OS X Snow Leopard' : result.codename);\n          result.codename = (result.release.indexOf('10.7') > -1 ? 'Mac OS X Lion' : result.codename);\n          result.codename = (result.release.indexOf('10.8') > -1 ? 'OS X Mountain Lion' : result.codename);\n          result.codename = (result.release.indexOf('10.9') > -1 ? 'OS X Mavericks' : result.codename);\n          result.codename = (result.release.indexOf('10.10') > -1 ? 'OS X Yosemite' : result.codename);\n          result.codename = (result.release.indexOf('10.11') > -1 ? 'OS X El Capitan' : result.codename);\n          result.codename = (result.release.indexOf('10.12') > -1 ? 'macOS Sierra' : result.codename);\n          result.codename = (result.release.indexOf('10.13') > -1 ? 'macOS High Sierra' : result.codename);\n          result.codename = (result.release.indexOf('10.14') > -1 ? 'macOS Mojave' : result.codename);\n          result.codename = (result.release.indexOf('10.15') > -1 ? 'macOS Catalina' : result.codename);\n          result.uefi = true;\n          result.codepage = util.getCodepage();\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        result.release = result.kernel;\n        exec('uname -o', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.distro = lines[0];\n          result.logofile = getLogoFile(result.distro);\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        result.logofile = getLogoFile();\n        result.release = result.kernel;\n        try {\n          util.wmic('os get /value').then((stdout) => {\n            let lines = stdout.toString().split('\\r\\n');\n            result.distro = util.getValue(lines, 'Caption', '=').trim();\n            result.serial = util.getValue(lines, 'SerialNumber', '=').trim();\n            result.build = util.getValue(lines, 'BuildNumber', '=').trim();\n            result.servicepack = util.getValue(lines, 'ServicePackMajorVersion', '=').trim() + '.' + util.getValue(lines, 'ServicePackMinorVersion', '=').trim();\n            result.codepage = util.getCodepage();\n            isUefiWindows().then(uefi => {\n              result.uefi = uefi;\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.osInfo = osInfo;\n\nfunction isUefiLinux() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      fs.stat('/sys/firmware/efi', function (err) {\n        if (!err) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  });\n}\n\nfunction isUefiWindows() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec('findstr /C:\"Detected boot environment\" \"%windir%\\\\Panther\\\\setupact.log\"', util.execOptsWin, function (error, stdout) {\n          if (!error) {\n            const line = stdout.toString().split('\\n\\r')[0];\n            resolve(line.toLowerCase().indexOf('uefi') >= 0);\n            return;\n          }\n          resolve(false);\n        });\n      } catch (e) {\n        resolve(false);\n      }\n    });\n  });\n}\n\nfunction versions(apps, callback) {\n  let versionObject = {\n    kernel: os.release(),\n    openssl: '',\n    systemOpenssl: '',\n    systemOpensslLib: '',\n    node: process.versions.node,\n    v8: process.versions.v8,\n    npm: '',\n    yarn: '',\n    pm2: '',\n    gulp: '',\n    grunt: '',\n    git: '',\n    tsc: '',\n    mysql: '',\n    redis: '',\n    mongodb: '',\n    apache: '',\n    nginx: '',\n    php: '',\n    docker: '',\n    postfix: '',\n    postgresql: '',\n    perl: '',\n    python: '',\n    python3: '',\n    pip: '',\n    pip3: '',\n    java: '',\n    gcc: '',\n    virtualbox: '',\n    dotnet: ''\n  };\n\n  function checkVersionParam(apps) {\n    if (apps === '*') {\n      return {\n        versions: versionObject,\n        counter: 26\n      };\n    }\n    if (!Array.isArray(apps)) {\n      apps = apps.trim().toLowerCase().replace(/,+/g, '|').replace(/ /g, '|');\n      apps = apps.split('|');\n      const result = {\n        versions: {},\n        counter: 0\n      };\n      apps.forEach(el => {\n        if (el) {\n          for (let key in versionObject) {\n            if ({}.hasOwnProperty.call(versionObject, key)) {\n              if (key.toLowerCase() === el.toLowerCase() && !{}.hasOwnProperty.call(result.versions, key)) {\n                result.versions[key] = versionObject[key];\n                if (key === 'openssl') {\n                  result.versions.systemOpenssl = '';\n                  result.versions.systemOpensslLib = '';\n                }\n\n                if (!result.versions[key]) { result.counter++; }\n              }\n            }\n          }\n        }\n      });\n      return result;\n    }\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (util.isFunction(apps) && !callback) {\n        callback = apps;\n        apps = '*';\n      } else {\n        apps = apps || '*';\n      }\n      const appsObj = checkVersionParam(apps);\n      let totalFunctions = appsObj.counter;\n\n      let functionProcessed = (function () {\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(appsObj.versions);\n            }\n            resolve(appsObj.versions);\n          }\n        };\n      })();\n\n      let cmd = '';\n      try {\n        if ({}.hasOwnProperty.call(appsObj.versions, 'openssl')) {\n          appsObj.versions.openssl = process.versions.openssl;\n          exec('openssl version', function (error, stdout) {\n            if (!error) {\n              let openssl_string = stdout.toString().split('\\n')[0].trim();\n              let openssl = openssl_string.split(' ');\n              appsObj.versions.systemOpenssl = openssl.length > 0 ? openssl[1] : openssl[0];\n              appsObj.versions.systemOpensslLib = openssl.length > 0 ? openssl[0] : 'openssl';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'npm')) {\n          exec('npm -v', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.npm = stdout.toString().split('\\n')[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pm2')) {\n          cmd = 'pm2';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} -v`, function (error, stdout) {\n            if (!error) {\n              let pm2 = stdout.toString().split('\\n')[0].trim();\n              if (!pm2.startsWith('[PM2]')) {\n                appsObj.versions.pm2 = pm2;\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'yarn')) {\n          exec('yarn --version', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.yarn = stdout.toString().split('\\n')[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gulp')) {\n          cmd = 'gulp';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const gulp = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.gulp = (gulp.toLowerCase().split('version')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'tsc')) {\n          cmd = 'tsc';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const tsc = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.tsc = (tsc.toLowerCase().split('version')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'grunt')) {\n          cmd = 'grunt';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const grunt = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.grunt = (grunt.toLowerCase().split('cli v')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'git')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/git');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('git --version', function (error, stdout) {\n                if (!error) {\n                  let git = stdout.toString().split('\\n')[0] || '';\n                  git = (git.toLowerCase().split('version')[1] || '').trim();\n                  appsObj.versions.git = (git.split(' ')[0] || '').trim();\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('git --version', function (error, stdout) {\n              if (!error) {\n                let git = stdout.toString().split('\\n')[0] || '';\n                git = (git.toLowerCase().split('version')[1] || '').trim();\n                appsObj.versions.git = (git.split(' ')[0] || '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'apache')) {\n          exec('apachectl -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const apache = (stdout.toString().split('\\n')[0] || '').split(':');\n              appsObj.versions.apache = (apache.length > 1 ? apache[1].replace('Apache', '').replace('/', '').trim() : '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'nginx')) {\n          exec('nginx -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const nginx = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.nginx = (nginx.toLowerCase().split('/')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mysql')) {\n          exec('mysql -V', function (error, stdout) {\n            if (!error) {\n              let mysql = stdout.toString().split('\\n')[0] || '';\n              mysql = mysql.toLowerCase();\n              if (mysql.indexOf(',') > -1) {\n                mysql = (mysql.split(',')[0] || '').trim();\n                const parts = mysql.split(' ');\n                appsObj.versions.mysql = (parts[parts.length - 1] || '').trim();\n              } else {\n                if (mysql.indexOf(' ver ') > -1) {\n                  mysql = mysql.split(' ver ')[1];\n                  appsObj.versions.mysql = mysql.split(' ')[0];\n                }\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'php')) {\n          exec('php -v', function (error, stdout) {\n            if (!error) {\n              const php = stdout.toString().split('\\n')[0] || '';\n              let parts = php.split('(');\n              if (parts[0].indexOf('-')) {\n                parts = parts[0].split('-');\n              }\n              appsObj.versions.php = parts[0].replace(/[^0-9.]/g, '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'redis')) {\n          exec('redis-server --version', function (error, stdout) {\n            if (!error) {\n              const redis = stdout.toString().split('\\n')[0] || '';\n              const parts = redis.split(' ');\n              appsObj.versions.redis = util.getValue(parts, 'v', '=', true);\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'docker')) {\n          exec('docker --version', function (error, stdout) {\n            if (!error) {\n              const docker = stdout.toString().split('\\n')[0] || '';\n              const parts = docker.split(' ');\n              appsObj.versions.docker = parts.length > 2 && parts[2].endsWith(',') ? parts[2].slice(0, -1) : '';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postfix')) {\n          exec('postconf -d | grep mail_version', function (error, stdout) {\n            if (!error) {\n              const postfix = stdout.toString().split('\\n') || [];\n              appsObj.versions.postfix = util.getValue(postfix, 'mail_version', '=', true);\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mongodb')) {\n          exec('mongod --version', function (error, stdout) {\n            if (!error) {\n              const mongodb = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.mongodb = (mongodb.toLowerCase().split(',')[0] || '').replace(/[^0-9.]/g, '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postgresql')) {\n          if (_linux) {\n            exec('locate bin/postgres', function (error, stdout) {\n              if (!error) {\n                const postgresqlBin = stdout.toString().split('\\n').sort();\n                if (postgresqlBin.length) {\n                  exec(postgresqlBin[postgresqlBin.length - 1] + ' -V', function (error, stdout) {\n                    if (!error) {\n                      const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                      appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    }\n                    functionProcessed();\n                  });\n                } else {\n                  functionProcessed();\n                }\n              } else {\n                exec('psql -V', function (error, stdout) {\n                  if (!error) {\n                    const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                    appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    appsObj.versions.postgresql = appsObj.versions.postgresql.split('-')[0];\n                  }\n                  functionProcessed();\n                });\n                functionProcessed();\n              }\n            });\n          } else {\n            if (_windows) {\n              util.wmic('service get /value').then((stdout) => {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n                for (let i = 0; i < serviceSections.length; i++) {\n                  if (serviceSections[i].trim() !== '') {\n                    let lines = serviceSections[i].trim().split('\\r\\n');\n                    let srvCaption = util.getValue(lines, 'caption', '=', true).toLowerCase();\n                    if (srvCaption.indexOf('postgresql') > -1) {\n                      const parts = srvCaption.split(' server ');\n                      if (parts.length > 1) {\n                        appsObj.versions.postgresql = parts[1];\n                      }\n                    }\n                  }\n                }\n                functionProcessed();\n              });\n            } else {\n              exec('postgres -V', function (error, stdout) {\n                if (!error) {\n                  const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                  appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                }\n                functionProcessed();\n              });\n            }\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'perl')) {\n          exec('perl -v', function (error, stdout) {\n            if (!error) {\n              const perl = stdout.toString().split('\\n') || '';\n              while (perl.length > 0 && perl[0].trim() === '') {\n                perl.shift();\n              }\n              if (perl.length > 0) {\n                appsObj.versions.perl = perl[0].split('(').pop().split(')')[0].replace('v', '');\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python')) {\n          exec('python -V 2>&1', function (error, stdout) {\n            if (!error) {\n              const python = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python3')) {\n          exec('python3 -V 2>&1', function (error, stdout) {\n            if (!error) {\n              const python = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip')) {\n          exec('pip -V 2>&1', function (error, stdout) {\n            if (!error) {\n              const pip = stdout.toString().split('\\n')[0] || '';\n              const parts = pip.split(' ');\n              appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip3')) {\n          exec('pip3 -V 2>&1', function (error, stdout) {\n            if (!error) {\n              const pip = stdout.toString().split('\\n')[0] || '';\n              const parts = pip.split(' ');\n              appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'java')) {\n          if (_darwin) {\n            // check if any JVM is installed but avoid dialog box that Java needs to be installed\n            exec('/usr/libexec/java_home -V 2>&1', function (error, stdout) {\n              if (!error && stdout.toString().toLowerCase().indexOf('no java runtime') === -1) {\n                // now this can be done savely\n                exec('java -version 2>&1', function (error, stdout) {\n                  if (!error) {\n                    const java = stdout.toString().split('\\n')[0] || '';\n                    const parts = java.split('\"');\n                    appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n                  }\n                  functionProcessed();\n                });\n              } else {\n                functionProcessed();\n              }\n            });\n          } else {\n            exec('java -version 2>&1', function (error, stdout) {\n              if (!error) {\n                const java = stdout.toString().split('\\n')[0] || '';\n                const parts = java.split('\"');\n                appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gcc')) {\n          if ((_darwin && util.darwinXcodeExists()) || !_darwin) {\n            exec('gcc -dumpversion', function (error, stdout) {\n              if (!error) {\n                appsObj.versions.gcc = stdout.toString().split('\\n')[0].trim() || '';\n              }\n              if (appsObj.versions.gcc.indexOf('.') > -1) {\n                functionProcessed();\n              } else {\n                exec('gcc --version', function (error, stdout) {\n                  if (!error) {\n                    const gcc = stdout.toString().split('\\n')[0].trim();\n                    if (gcc.indexOf('gcc') > -1 && gcc.indexOf(')') > -1) {\n                      const parts = gcc.split(')');\n                      appsObj.versions.gcc = parts[1].trim() || appsObj.versions.gcc;\n                    }\n                  }\n                  functionProcessed();\n                });\n              }\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'virtualbox')) {\n          exec(util.getVboxmanage() + ' -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const vbox = stdout.toString().split('\\n')[0] || '';\n              const parts = vbox.split('r');\n              appsObj.versions.virtualbox = parts[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'dotnet')) {\n          exec('dotnet --version 2>&1', function (error, stdout) {\n            if (!error) {\n              const dotnet = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.dotnet = dotnet.trim();\n            }\n            functionProcessed();\n          });\n        }\n      } catch (e) {\n        if (callback) { callback(appsObj.versions); }\n        resolve(appsObj.versions);\n      }\n    });\n  });\n}\n\nexports.versions = versions;\n\nfunction shell(callback) {\n  return new Promise((resolve, reject) => {\n    process.nextTick(() => {\n      if (_windows) {\n        let error = new Error(NOT_SUPPORTED);\n        if (callback) {\n          callback(NOT_SUPPORTED);\n        }\n        reject(error);\n      }\n\n      let result = '';\n      exec('echo $SHELL', function (error, stdout) {\n        if (!error) {\n          result = stdout.toString().split('\\n')[0];\n        }\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.shell = shell;\n\nfunction uuid(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        os: ''\n      };\n      let parts;\n\n      if (_darwin) {\n        exec('ioreg -rd1 -c IOPlatformExpertDevice | grep IOPlatformUUID', function (error, stdout) {\n          if (!error) {\n            parts = stdout.toString().split('\\n')[0].replace(/\"/g, '').split('=');\n            result.os = parts.length > 1 ? parts[1].trim().toLowerCase() : '';\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        exec('( cat /var/lib/dbus/machine-id /etc/machine-id 2> /dev/null || hostname ) | head -n 1 || :', function (error, stdout) {\n          if (!error) {\n            result.os = stdout.toString().split('\\n')[0].trim().toLowerCase();\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('kenv -q smbios.system.uuid', function (error, stdout) {\n          if (!error) {\n            result.os = stdout.toString().split('\\n')[0].trim().toLowerCase();\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        exec('%windir%\\\\System32\\\\reg query \"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\" /v MachineGuid', util.execOptsWin, function (error, stdout) {\n          if (!error) {\n            parts = stdout.toString().split('\\n\\r')[0].split('REG_SZ');\n            result.os = parts.length > 1 ? parts[1].replace(/\\r+|\\n+|\\s+/ig, '').toLowerCase() : '';\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n    });\n  });\n}\n\nexports.uuid = uuid;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// cpu.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 4. CPU\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _cpu_speed = '0.00';\nlet _current_cpu = {\n  user: 0,\n  nice: 0,\n  system: 0,\n  idle: 0,\n  irq: 0,\n  load: 0,\n  tick: 0,\n  ms: 0,\n  currentload: 0,\n  currentload_user: 0,\n  currentload_system: 0,\n  currentload_nice: 0,\n  currentload_idle: 0,\n  currentload_irq: 0,\n  raw_currentload: 0,\n  raw_currentload_user: 0,\n  raw_currentload_system: 0,\n  raw_currentload_nice: 0,\n  raw_currentload_idle: 0,\n  raw_currentload_irq: 0\n};\nlet _cpus = [];\nlet _corecount = 0;\n\nconst AMDBaseFrequencies = {\n  '8346': '1.8',\n  '8347': '1.9',\n  '8350': '2.0',\n  '8354': '2.2',\n  '8356|SE': '2.4',\n  '8356': '2.3',\n  '8360': '2.5',\n  '2372': '2.1',\n  '2373': '2.1',\n  '2374': '2.2',\n  '2376': '2.3',\n  '2377': '2.3',\n  '2378': '2.4',\n  '2379': '2.4',\n  '2380': '2.5',\n  '2381': '2.5',\n  '2382': '2.6',\n  '2384': '2.7',\n  '2386': '2.8',\n  '2387': '2.8',\n  '2389': '2.9',\n  '2393': '3.1',\n  '8374': '2.2',\n  '8376': '2.3',\n  '8378': '2.4',\n  '8379': '2.4',\n  '8380': '2.5',\n  '8381': '2.5',\n  '8382': '2.6',\n  '8384': '2.7',\n  '8386': '2.8',\n  '8387': '2.8',\n  '8389': '2.9',\n  '8393': '3.1',\n  '2419EE': '1.8',\n  '2423HE': '2.0',\n  '2425HE': '2.1',\n  '2427': '2.2',\n  '2431': '2.4',\n  '2435': '2.6',\n  '2439SE': '2.8',\n  '8425HE': '2.1',\n  '8431': '2.4',\n  '8435': '2.6',\n  '8439SE': '2.8',\n  '4122': '2.2',\n  '4130': '2.6',\n  '4162EE': '1.7',\n  '4164EE': '1.8',\n  '4170HE': '2.1',\n  '4174HE': '2.3',\n  '4176HE': '2.4',\n  '4180': '2.6',\n  '4184': '2.8',\n  '6124HE': '1.8',\n  '6128HE': '2.0',\n  '6132HE': '2.2',\n  '6128': '2.0',\n  '6134': '2.3',\n  '6136': '2.4',\n  '6140': '2.6',\n  '6164HE': '1.7',\n  '6166HE': '1.8',\n  '6168': '1.9',\n  '6172': '2.1',\n  '6174': '2.2',\n  '6176': '2.3',\n  '6176SE': '2.3',\n  '6180SE': '2.5',\n  '3250': '2.5',\n  '3260': '2.7',\n  '3280': '2.4',\n  '4226': '2.7',\n  '4228': '2.8',\n  '4230': '2.9',\n  '4234': '3.1',\n  '4238': '3.3',\n  '4240': '3.4',\n  '4256': '1.6',\n  '4274': '2.5',\n  '4276': '2.6',\n  '4280': '2.8',\n  '4284': '3.0',\n  '6204': '3.3',\n  '6212': '2.6',\n  '6220': '3.0',\n  '6234': '2.4',\n  '6238': '2.6',\n  '6262HE': '1.6',\n  '6272': '2.1',\n  '6274': '2.2',\n  '6276': '2.3',\n  '6278': '2.4',\n  '6282SE': '2.6',\n  '6284SE': '2.7',\n  '6308': '3.5',\n  '6320': '2.8',\n  '6328': '3.2',\n  '6338P': '2.3',\n  '6344': '2.6',\n  '6348': '2.8',\n  '6366': '1.8',\n  '6370P': '2.0',\n  '6376': '2.3',\n  '6378': '2.4',\n  '6380': '2.5',\n  '6386': '2.8',\n  'FX|4100': '3.6',\n  'FX|4120': '3.9',\n  'FX|4130': '3.8',\n  'FX|4150': '3.8',\n  'FX|4170': '4.2',\n  'FX|6100': '3.3',\n  'FX|6120': '3.6',\n  'FX|6130': '3.6',\n  'FX|6200': '3.8',\n  'FX|8100': '2.8',\n  'FX|8120': '3.1',\n  'FX|8140': '3.2',\n  'FX|8150': '3.6',\n  'FX|8170': '3.9',\n  'FX|4300': '3.8',\n  'FX|4320': '4.0',\n  'FX|4350': '4.2',\n  'FX|6300': '3.5',\n  'FX|6350': '3.9',\n  'FX|8300': '3.3',\n  'FX|8310': '3.4',\n  'FX|8320': '3.5',\n  'FX|8350': '4.0',\n  'FX|8370': '4.0',\n  'FX|9370': '4.4',\n  'FX|9590': '4.7',\n  'FX|8320E': '3.2',\n  'FX|8370E': '3.3',\n  '1950X': '3.4',\n  '1920X': '3.5',\n  '1920': '3.2',\n  '1900X': '3.8',\n  '1800X': '3.6',\n  '1700X': '3.4',\n  'Pro 1700X': '3.5',\n  '1700': '3.0',\n  'Pro 1700': '3.0',\n  '1600X': '3.6',\n  '1600': '3.2',\n  'Pro 1600': '3.2',\n  '1500X': '3.5',\n  'Pro 1500': '3.5',\n  '1400': '3.2',\n  '1300X': '3.5',\n  'Pro 1300': '3.5',\n  '1200': '3.1',\n  'Pro 1200': '3.1',\n  '2200U': '2.5',\n  '2300U': '2.0',\n  'Pro 2300U': '2.0',\n  '2500U': '2.0',\n  'Pro 2500U': '2.2',\n  '2700U': '2.0',\n  'Pro 2700U': '2.2',\n  '2600H': '3.2',\n  '2800H': '3.3',\n  '7601': '2.2',\n  '7551': '2.0',\n  '7501': '2.0',\n  '74501': '2.3',\n  '7401': '2.0',\n  '7351': '2.4',\n  '7301': '2.2',\n  '7281': '2.1',\n  '7251': '2.1',\n  '7551P': '2.0',\n  '7401P': '2.0',\n  '7351P': '2.4',\n  '2300X': '3.5',\n  '2500X': '3.6',\n  '2600': '3.4',\n  '2600E': '3.1',\n  '2600X': '3.6',\n  '2700': '3.2',\n  '2700E': '2.8',\n  '2700X': '3.7',\n  'Pro 2700X': '3.6',\n  '2920': '3.5',\n  '2950': '3.5',\n  '2970WX': '3.0',\n  '2990WX': '3.0',\n  '3200U': '2.6',\n  '3300U': '2.1',\n  '3500U': '2.1',\n  '3550H': '2.1',\n  '3580U': '2.1',\n  '3700U': '2.3',\n  '3750H': '2.3',\n  '3780U': '2.3',\n  '3500X': '3.6',\n  '3600': '3.6',\n  'Pro 3600': '3.6',\n  '3600X': '3.8',\n  'Pro 3700': '3.6',\n  '3700X': '3.6',\n  '3800X': '3.9',\n  '3900': '3.1',\n  'Pro 3900': '3.1',\n  '3900X': '3.8',\n  '3950X': '3.5',\n  '3960X': '3.8',\n  '3970X': '3.7',\n  '7232P': '3.1',\n  '7302P': '3.0',\n  '7402P': '2.8',\n  '7502P': '2.5',\n  '7702P': '2.0',\n  '7252': '3.1',\n  '7262': '3.2',\n  '7272': '2.9',\n  '7282': '2.8',\n  '7302': '3.0',\n  '7352': '2.3',\n  '7402': '2.8',\n  '7452': '2.35',\n  '7502': '2.5',\n  '7542': '2.9',\n  '7552': '2.2',\n  '7642': '2.3',\n  '7702': '2.0',\n  '7742': '2.25',\n  '7H12': '2.6'\n};\n\nconst socketTypes = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Daughter Board',\n  4: 'ZIF Socket',\n  5: 'Replacement/Piggy Back',\n  6: 'None',\n  7: 'LIF Socket',\n  8: 'Slot 1',\n  9: 'Slot 2',\n  10: '370 Pin Socket',\n  11: 'Slot A',\n  12: 'Slot M',\n  13: '423',\n  14: 'A (Socket 462)',\n  15: '478',\n  16: '754',\n  17: '940',\n  18: '939',\n  19: 'mPGA604',\n  20: 'LGA771',\n  21: 'LGA775',\n  22: 'S1',\n  23: 'AM2',\n  24: 'F (1207)',\n  25: 'LGA1366',\n  26: 'G34',\n  27: 'AM3',\n  28: 'C32',\n  29: 'LGA1156',\n  30: 'LGA1567',\n  31: 'PGA988A',\n  32: 'BGA1288',\n  33: 'rPGA988B',\n  34: 'BGA1023',\n  35: 'BGA1224',\n  36: 'LGA1155',\n  37: 'LGA1356',\n  38: 'LGA2011',\n  39: 'FS1',\n  40: 'FS2',\n  41: 'FM1',\n  42: 'FM2',\n  43: 'LGA2011-3',\n  44: 'LGA1356-3',\n  45: 'LGA1150',\n  46: 'BGA1168',\n  47: 'BGA1234',\n  48: 'BGA1364',\n  49: 'AM4',\n  50: 'LGA1151',\n  51: 'BGA1356',\n  52: 'BGA1440',\n  53: 'BGA1515',\n  54: 'LGA3647-1',\n  55: 'SP3',\n  56: 'SP3r2',\n  57: 'LGA2066',\n  58: 'BGA1392',\n  59: 'BGA1510',\n  60: 'BGA1528'\n};\n\nfunction cpuBrandManufacturer(res) {\n  res.brand = res.brand.replace(/\\(R\\)+/g, '\u00AE').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(TM\\)+/g, '\u2122').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(C\\)+/g, '\u00A9').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/CPU+/g, '').replace(/\\s+/g, ' ').trim();\n  res.manufacturer = res.brand.split(' ')[0];\n\n  let parts = res.brand.split(' ');\n  parts.shift();\n  res.brand = parts.join(' ');\n  return res;\n}\n\nfunction getAMDSpeed(brand) {\n  let result = '0.00';\n  for (let key in AMDBaseFrequencies) {\n    if ({}.hasOwnProperty.call(AMDBaseFrequencies, key)) {\n      let parts = key.split('|');\n      let found = 0;\n      parts.forEach(item => {\n        if (brand.indexOf(item) > -1) {\n          found++;\n        }\n      });\n      if (found === parts.length) {\n        result = AMDBaseFrequencies[key];\n      }\n    }\n  }\n  return result;\n}\n\n// --------------------------\n// CPU - brand, speed\n\nfunction getCpu() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const UNKNOWN = 'unknown';\n      let result = {\n        manufacturer: UNKNOWN,\n        brand: UNKNOWN,\n        vendor: '',\n        family: '',\n        model: '',\n        stepping: '',\n        revision: '',\n        voltage: '',\n        speed: '0.00',\n        speedmin: '',\n        speedmax: '',\n        governor: '',\n        cores: util.cores(),\n        physicalCores: util.cores(),\n        processors: 1,\n        socket: '',\n        cache: {}\n      };\n      if (_darwin) {\n        exec('sysctl machdep.cpu hw.cpufrequency_max hw.cpufrequency_min hw.packages hw.physicalcpu_max hw.ncpu', function (error, stdout) {\n          // if (!error) {\n          let lines = stdout.toString().split('\\n');\n          const modelline = util.getValue(lines, 'machdep.cpu.brand_string');\n          result.brand = modelline.split('@')[0].trim();\n          result.speed = modelline.split('@')[1].trim();\n          result.speed = parseFloat(result.speed.replace(/GHz+/g, '')).toFixed(2);\n          _cpu_speed = result.speed;\n          result = cpuBrandManufacturer(result);\n          result.speedmin = (util.getValue(lines, 'hw.cpufrequency_min') / 1000000000.0).toFixed(2);\n          result.speedmax = (util.getValue(lines, 'hw.cpufrequency_max') / 1000000000.0).toFixed(2);\n          result.vendor = util.getValue(lines, 'machdep.cpu.vendor');\n          result.family = util.getValue(lines, 'machdep.cpu.family');\n          result.model = util.getValue(lines, 'machdep.cpu.model');\n          result.stepping = util.getValue(lines, 'machdep.cpu.stepping');\n          const countProcessors = util.getValue(lines, 'hw.packages');\n          const countCores = util.getValue(lines, 'hw.physicalcpu_max');\n          const countThreads = util.getValue(lines, 'hw.ncpu');\n          if (countProcessors) {\n            result.processors = parseInt(countProcessors) || 1;\n          }\n          if (countCores && countThreads) {\n            result.cores = parseInt(countThreads) || util.cores();\n            result.physicalCores = parseInt(countCores) || util.cores();\n          }\n          // }\n          cpuCache().then(res => {\n            result.cache = res;\n            resolve(result);\n          });\n        });\n      }\n      if (_linux) {\n        let modelline = '';\n        let lines = [];\n        if (os.cpus()[0] && os.cpus()[0].model) modelline = os.cpus()[0].model;\n        exec('export LC_ALL=C; lscpu; echo -n \"Governor: \"; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2>/dev/null; echo; unset LC_ALL', function (error, stdout) {\n          if (!error) {\n            lines = stdout.toString().split('\\n');\n          }\n          modelline = util.getValue(lines, 'model name') || modelline;\n          result.brand = modelline.split('@')[0].trim();\n          result.speed = modelline.split('@')[1] ? parseFloat(modelline.split('@')[1].trim()).toFixed(2) : '0.00';\n          if (result.speed === '0.00' && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n            result.speed = getAMDSpeed(result.brand);\n          }\n          if (result.speed === '0.00') {\n            let current = getCpuCurrentSpeedSync();\n            if (current.avg !== 0) result.speed = current.avg.toFixed(2);\n          }\n          _cpu_speed = result.speed;\n          result.speedmin = Math.round(parseFloat(util.getValue(lines, 'cpu min mhz').replace(/,/g, '.')) / 10.0) / 100;\n          result.speedmin = result.speedmin ? parseFloat(result.speedmin).toFixed(2) : '';\n          result.speedmax = Math.round(parseFloat(util.getValue(lines, 'cpu max mhz').replace(/,/g, '.')) / 10.0) / 100;\n          result.speedmax = result.speedmax ? parseFloat(result.speedmax).toFixed(2) : '';\n\n          result = cpuBrandManufacturer(result);\n          result.vendor = util.getValue(lines, 'vendor id');\n          // if (!result.vendor) { result.vendor = util.getValue(lines, 'anbieterkennung'); }\n\n          result.family = util.getValue(lines, 'cpu family');\n          // if (!result.family) { result.family = util.getValue(lines, 'prozessorfamilie'); }\n          result.model = util.getValue(lines, 'model:');\n          // if (!result.model) { result.model = util.getValue(lines, 'modell:'); }\n          result.stepping = util.getValue(lines, 'stepping');\n          result.revision = util.getValue(lines, 'cpu revision');\n          result.cache.l1d = util.getValue(lines, 'l1d cache');\n          if (result.cache.l1d) { result.cache.l1d = parseInt(result.cache.l1d) * (result.cache.l1d.indexOf('K') !== -1 ? 1024 : 1); }\n          result.cache.l1i = util.getValue(lines, 'l1i cache');\n          if (result.cache.l1i) { result.cache.l1i = parseInt(result.cache.l1i) * (result.cache.l1i.indexOf('K') !== -1 ? 1024 : 1); }\n          result.cache.l2 = util.getValue(lines, 'l2 cache');\n          if (result.cache.l2) { result.cache.l2 = parseInt(result.cache.l2) * (result.cache.l2.indexOf('K') !== -1 ? 1024 : 1); }\n          result.cache.l3 = util.getValue(lines, 'l3 cache');\n          if (result.cache.l3) { result.cache.l3 = parseInt(result.cache.l3) * (result.cache.l3.indexOf('K') !== -1 ? 1024 : 1); }\n\n          const threadsPerCore = util.getValue(lines, 'thread(s) per core') || '1';\n          // const coresPerSocketInt = parseInt(util.getValue(lines, 'cores(s) per socket') || '1', 10);\n          const processors = util.getValue(lines, 'socket(s)') || '1';\n          let threadsPerCoreInt = parseInt(threadsPerCore, 10);\n          let processorsInt = parseInt(processors, 10);\n          result.physicalCores = result.cores / threadsPerCoreInt;\n          result.processors = processorsInt;\n          result.governor = util.getValue(lines, 'governor') || '';\n\n          // Test Raspberry\n          if (result.vendor === 'ARM') {\n            const linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n            const rPIRevision = util.decodePiCpuinfo(linesRpi);\n            if (rPIRevision.model.toLowerCase().indexOf('raspberry') >= 0) {\n              result.family = result.manufacturer;\n              result.manufacturer = rPIRevision.manufacturer;\n              result.brand = rPIRevision.processor;\n              result.revision = rPIRevision.revisionCode;\n              result.socket = 'SOC';\n            }\n          }\n\n          // socket type\n          let lines2 = [];\n          exec('export LC_ALL=C; dmidecode \u2013t 4 2>/dev/null | grep \"Upgrade: Socket\"; unset LC_ALL', function (error2, stdout2) {\n            lines2 = stdout2.toString().split('\\n');\n            if (lines2 && lines2.length) {\n              result.socket = util.getValue(lines2, 'Upgrade').replace('Socket', '').trim() || result.socket;\n            }\n            resolve(result);\n          });\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        let modelline = '';\n        let lines = [];\n        if (os.cpus()[0] && os.cpus()[0].model) modelline = os.cpus()[0].model;\n        exec('export LC_ALL=C; dmidecode -t 4; dmidecode -t 7 unset LC_ALL', function (error, stdout) {\n          let cache = [];\n          if (!error) {\n            const data = stdout.toString().split('# dmidecode');\n            const processor = data.length > 1 ? data[1] : '';\n            cache = data.length > 2 ? data[2].split('Cache Information') : [];\n\n            lines = processor.split('\\n');\n          }\n          result.brand = modelline.split('@')[0].trim();\n          result.speed = modelline.split('@')[1] ? parseFloat(modelline.split('@')[1].trim()).toFixed(2) : '0.00';\n          if (result.speed === '0.00' && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n            result.speed = getAMDSpeed(result.brand);\n          }\n          if (result.speed === '0.00') {\n            let current = getCpuCurrentSpeedSync();\n            if (current.avg !== 0) result.speed = current.avg.toFixed(2);\n          }\n          _cpu_speed = result.speed;\n          result.speedmin = '';\n          result.speedmax = Math.round(parseFloat(util.getValue(lines, 'max speed').replace(/Mhz/g, '')) / 10.0) / 100;\n          result.speedmax = result.speedmax ? parseFloat(result.speedmax).toFixed(2) : '';\n\n          result = cpuBrandManufacturer(result);\n          result.vendor = util.getValue(lines, 'manufacturer');\n          let sig = util.getValue(lines, 'signature');\n          sig = sig.split(',');\n          for (var i = 0; i < sig.length; i++) {\n            sig[i] = sig[i].trim();\n          }\n          result.family = util.getValue(sig, 'Family', ' ', true);\n          result.model = util.getValue(sig, 'Model', ' ', true);\n          result.stepping = util.getValue(sig, 'Stepping', ' ', true);\n          result.revision = '';\n          const voltage = parseFloat(util.getValue(lines, 'voltage'));\n          result.voltage = isNaN(voltage) ? '' : voltage.toFixed(2);\n          for (let i = 0; i < cache.length; i++) {\n            lines = cache[i].split('\\n');\n            let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n            cacheType = cacheType.length ? cacheType[0] : '';\n            const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n            let size = parseInt(sizeParts[0], 10);\n            const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n            size = size * (unit === 'kb' ? 1024 : (unit === 'mb' ? 1024 * 1024 : (unit === 'gb' ? 1024 * 1024 * 1024 : 1)));\n            if (cacheType) {\n              if (cacheType === 'l1') {\n                result.cache[cacheType + 'd'] = size / 2;\n                result.cache[cacheType + 'i'] = size / 2;\n              } else {\n                result.cache[cacheType] = size;\n              }\n            }\n          }\n          // socket type\n          result.socket = util.getValue(lines, 'Upgrade').replace('Socket', '').trim();\n          // # threads / # cores\n          const threadCount = util.getValue(lines, 'thread count').trim();\n          const coreCount = util.getValue(lines, 'core count').trim();\n          if (coreCount && threadCount) {\n            result.cores = threadCount;\n            result.physicalCores = coreCount;\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('cpu get /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n');\n              let name = util.getValue(lines, 'name', '=') || '';\n              if (name.indexOf('@') >= 0) {\n                result.brand = name.split('@')[0].trim();\n                result.speed = name.split('@')[1] ? parseFloat(name.split('@')[1].trim()).toFixed(2) : '0.00';\n                _cpu_speed = result.speed;\n              } else {\n                result.brand = name.trim();\n                result.speed = '0.00';\n              }\n              result = cpuBrandManufacturer(result);\n              result.revision = util.getValue(lines, 'revision', '=');\n              result.cache.l1d = 0;\n              result.cache.l1i = 0;\n              result.cache.l2 = util.getValue(lines, 'l2cachesize', '=');\n              result.cache.l3 = util.getValue(lines, 'l3cachesize', '=');\n              if (result.cache.l2) { result.cache.l2 = parseInt(result.cache.l2, 10) * 1024; }\n              if (result.cache.l3) { result.cache.l3 = parseInt(result.cache.l3, 10) * 1024; }\n              result.vendor = util.getValue(lines, 'manufacturer', '=');\n              result.speedmax = Math.round(parseFloat(util.getValue(lines, 'maxclockspeed', '=').replace(/,/g, '.')) / 10.0) / 100;\n              result.speedmax = result.speedmax ? parseFloat(result.speedmax).toFixed(2) : '';\n              if (result.speed === '0.00' && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n                result.speed = getAMDSpeed(result.brand);\n              }\n              if (result.speed === '0.00') {\n                result.speed = result.speedmax;\n              }\n\n              let description = util.getValue(lines, 'description', '=').split(' ');\n              for (let i = 0; i < description.length; i++) {\n                if (description[i].toLowerCase().startsWith('family') && (i + 1) < description.length && description[i + 1]) {\n                  result.family = description[i + 1];\n                }\n                if (description[i].toLowerCase().startsWith('model') && (i + 1) < description.length && description[i + 1]) {\n                  result.model = description[i + 1];\n                }\n                if (description[i].toLowerCase().startsWith('stepping') && (i + 1) < description.length && description[i + 1]) {\n                  result.stepping = description[i + 1];\n                }\n              }\n              // socket type\n              const socketId = util.getValue(lines, 'UpgradeMethod', '=');\n              if (socketTypes[socketId]) {\n                result.socket = socketTypes[socketId];\n              }\n              // # threads / # cores\n              const countProcessors = util.countLines(lines, 'Caption');\n              const countThreads = util.getValue(lines, 'NumberOfLogicalProcessors', '=');\n              const countCores = util.getValue(lines, 'NumberOfCores', '=');\n              if (countProcessors) {\n                result.processors = parseInt(countProcessors) || 1;\n              }\n              if (countCores && countThreads) {\n                result.cores = parseInt(countThreads) || util.cores();\n                result.physicalCores = parseInt(countCores) || util.cores();\n              }\n              if (countProcessors > 1) {\n                result.cores = result.cores * countProcessors;\n                result.physicalCores = result.physicalCores * countProcessors;\n              }\n            }\n            util.wmic('path Win32_CacheMemory get CacheType,InstalledSize,Purpose').then((stdout, error) => {\n              if (!error) {\n                let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n                lines.forEach(function (line) {\n                  if (line !== '') {\n                    line = line.trim().split(/\\s\\s+/);\n                    // L1 Instructions\n                    if (line[2] === 'L1 Cache' && line[0] === '3') {\n                      result.cache.l1i = parseInt(line[1], 10);\n                    }\n                    // L1 Data\n                    if (line[2] === 'L1 Cache' && line[0] === '4') {\n                      result.cache.l1d = parseInt(line[1], 10);\n                    }\n                  }\n                });\n              }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\n// --------------------------\n// CPU - Processor Data\n\nfunction cpu(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getCpu().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.cpu = cpu;\n\n// --------------------------\n// CPU - current speed - in GHz\n\nfunction getCpuCurrentSpeedSync() {\n\n  let cpus = os.cpus();\n  let minFreq = 999999999;\n  let maxFreq = 0;\n  let avgFreq = 0;\n  let cores = [];\n\n  if (cpus && cpus.length) {\n    for (let i in cpus) {\n      if ({}.hasOwnProperty.call(cpus, i)) {\n        avgFreq = avgFreq + cpus[i].speed;\n        if (cpus[i].speed > maxFreq) maxFreq = cpus[i].speed;\n        if (cpus[i].speed < minFreq) minFreq = cpus[i].speed;\n      }\n      cores.push(parseFloat(((cpus[i].speed + 1) / 1000).toFixed(2)));\n    }\n    avgFreq = avgFreq / cpus.length;\n    return {\n      min: parseFloat(((minFreq + 1) / 1000).toFixed(2)),\n      max: parseFloat(((maxFreq + 1) / 1000).toFixed(2)),\n      avg: parseFloat(((avgFreq + 1) / 1000).toFixed(2)),\n      cores: cores\n    };\n  } else {\n    return {\n      min: 0,\n      max: 0,\n      avg: 0,\n      cores: cores\n    };\n  }\n}\n\nfunction cpuCurrentspeed(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = getCpuCurrentSpeedSync();\n      if (result.avg === 0 && _cpu_speed !== '0.00') {\n        const currCpuSpeed = parseFloat(_cpu_speed);\n        result = {\n          min: currCpuSpeed,\n          max: currCpuSpeed,\n          avg: currCpuSpeed,\n          cores: []\n        };\n      }\n      if (callback) { callback(result); }\n      resolve(result);\n    });\n  });\n}\n\nexports.cpuCurrentspeed = cpuCurrentspeed;\n\n// --------------------------\n// CPU - temperature\n// if sensors are installed\n\nfunction cpuTemperature(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        main: -1.0,\n        cores: [],\n        max: -1.0\n      };\n      if (_linux) {\n        const cmd = 'cat /sys/class/hwmon/hwmon1/temp*_la*;echo \"---\";cat /sys/class/hwmon/hwmon1/temp*_i*';\n        try {\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              let parts = stdout.toString().split('---');\n              let labels = parts[0].split('\\n');\n              let temps = parts[1].split('\\n');\n              temps.shift();\n              for (let i = 0; i < temps.length; i++) {\n                if (temps[i] && (labels[i] === undefined || (labels[i] && labels[i].toLowerCase().startsWith('core')))) {\n                  result.cores.push(Math.round(parseInt(temps[i], 10) / 100) / 10);\n                } else if (temps[i] && labels[i] && result.main === -1) {\n                  result.main = Math.round(parseInt(temps[i], 10) / 100) / 10;\n                }\n              }\n              if (result.cores.length > 0) {\n                if (result.main === -1) {\n                  result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n                }\n                let maxtmp = Math.max.apply(Math, result.cores);\n                result.max = (maxtmp > result.main) ? maxtmp : result.main;\n              }\n              if (result.main !== -1) {\n                if (result.max === -1) {\n                  result.max = result.main;\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n                return;\n              }\n            }\n            exec('sensors', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                let tdieTemp = -1;\n                lines.forEach(function (line) {\n                  let regex = /[+-]([^\u00B0]*)/g;\n                  let temps = line.match(regex);\n                  let firstPart = line.split(':')[0].toUpperCase();\n                  if (firstPart.indexOf('PHYSICAL') !== -1 || firstPart.indexOf('PACKAGE') !== -1) {\n                    result.main = parseFloat(temps);\n                  }\n                  if (firstPart.indexOf('CORE ') !== -1) {\n                    result.cores.push(parseFloat(temps));\n                  }\n                  if (firstPart.indexOf('TDIE') !== -1 && tdieTemp === -1) {\n                    tdieTemp = parseFloat(temps);\n                  }\n                });\n                if (result.cores.length > 0) {\n                  if (result.main === -1) {\n                    result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n                  }\n                  let maxtmp = Math.max.apply(Math, result.cores);\n                  result.max = (maxtmp > result.main) ? maxtmp : result.main;\n                } else {\n                  if (result.main === -1 && tdieTemp !== -1) {\n                    result.main = tdieTemp;\n                    result.max = tdieTemp;\n                  }\n                }\n                if (result.main !== -1.0 || result.max !== -1.0) {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                  return;\n                }\n              }\n              fs.stat('/sys/class/thermal/thermal_zone0/temp', function (err) {\n                if (err === null) {\n                  fs.readFile('/sys/class/thermal/thermal_zone0/temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n                      if (lines.length > 0) {\n                        result.main = parseFloat(lines[0]) / 1000.0;\n                        result.max = result.main;\n                      }\n                    }\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                } else {\n                  exec('/opt/vc/bin/vcgencmd measure_temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n                      if (lines.length > 0 && lines[0].indexOf('=')) {\n                        result.main = parseFloat(lines[0].split('=')[1]);\n                        result.max = result.main;\n                      }\n                    }\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                }\n              });\n            });\n          });\n        } catch (er) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl dev.cpu | grep temp', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            let sum = 0;\n            lines.forEach(function (line) {\n              const parts = line.split(':');\n              if (parts.length > 1) {\n                const temp = parseFloat(parts[1].replace(',', '.'));\n                if (temp > result.max) result.max = temp;\n                sum = sum + temp;\n                result.cores.push(temp);\n              }\n            });\n            if (result.cores.length) {\n              result.main = Math.round(sum / result.cores.length * 100) / 100;\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let osxTemp = null;\n        try {\n          osxTemp = require('osx-temperature-sensor');\n        } catch (er) {\n          osxTemp = null;\n        }\n        if (osxTemp) {\n          result = osxTemp.cpuTemperature();\n        }\n\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('/namespace:\\\\\\\\root\\\\wmi PATH MSAcpi_ThermalZoneTemperature get CurrentTemperature').then((stdout, error) => {\n            if (!error) {\n              let sum = 0;\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                let value = (parseInt(line, 10) - 2732) / 10;\n                sum = sum + value;\n                if (value > result.max) result.max = value;\n                result.cores.push(value);\n              });\n              if (result.cores.length) {\n                result.main = sum / result.cores.length;\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuTemperature = cpuTemperature;\n\n// --------------------------\n// CPU Flags\n\nfunction cpuFlags(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = '';\n      if (_windows) {\n        try {\n          exec('reg query \"HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\" /v FeatureSet', util.execOptsWin, function (error, stdout) {\n            if (!error) {\n              let flag_hex = stdout.split('0x').pop().trim();\n              let flag_bin_unpadded = parseInt(flag_hex, 16).toString(2);\n              let flag_bin = '0'.repeat(32 - flag_bin_unpadded.length) + flag_bin_unpadded;\n              // empty flags are the reserved fields in the CPUID feature bit list\n              // as found on wikipedia:\n              // https://en.wikipedia.org/wiki/CPUID\n              let all_flags = [\n                'fpu', 'vme', 'de', 'pse', 'tsc', 'msr', 'pae', 'mce', 'cx8', 'apic',\n                '', 'sep', 'mtrr', 'pge', 'mca', 'cmov', 'pat', 'pse-36', 'psn', 'clfsh',\n                '', 'ds', 'acpi', 'mmx', 'fxsr', 'sse', 'sse2', 'ss', 'htt', 'tm', 'ia64', 'pbe'\n              ];\n              for (let f = 0; f < all_flags.length; f++) {\n                if (flag_bin[f] === '1' && all_flags[f] !== '') {\n                  result += ' ' + all_flags[f];\n                }\n              }\n              result = result.trim();\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_linux) {\n        try {\n\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                if (line.split(':')[0].toUpperCase().indexOf('FLAGS') !== -1) {\n                  result = line.split(':')[1].trim().toLowerCase();\n                }\n              });\n            }\n            if (!result) {\n              fs.readFile('/proc/cpuinfo', function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  result = util.getValue(lines, 'features', ':', true).toLowerCase();\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 4 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let flags = [];\n          if (!error) {\n            let parts = stdout.toString().split('\\tFlags:');\n            const lines = parts.length > 1 ? parts[1].split('\\tVersion:')[0].split['\\n'] : [];\n            lines.forEach(function (line) {\n              let flag = (line.indexOf('(') ? line.split('(')[0].toLowerCase() : '').trim().replace(/\\t/g, '');\n              if (flag) {\n                flags.push(flag);\n              }\n            });\n          }\n          result = flags.join(' ').trim();\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sysctl machdep.cpu.features', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 0 && lines[0].indexOf('machdep.cpu.features:') !== -1) {\n              result = lines[0].split(':')[1].trim().toLowerCase();\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.cpuFlags = cpuFlags;\n\n// --------------------------\n// CPU Cache\n\nfunction cpuCache(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        l1d: -1,\n        l1i: -1,\n        l2: -1,\n        l3: -1,\n      };\n      if (_linux) {\n        try {\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                let parts = line.split(':');\n                if (parts[0].toUpperCase().indexOf('L1D CACHE') !== -1) {\n                  result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n                if (parts[0].toUpperCase().indexOf('L1I CACHE') !== -1) {\n                  result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n                if (parts[0].toUpperCase().indexOf('L2 CACHE') !== -1) {\n                  result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n                if (parts[0].toUpperCase().indexOf('L3 CACHE') !== -1) {\n                  result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 7 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let cache = [];\n          if (!error) {\n            const data = stdout.toString();\n            cache = data.split('Cache Information');\n            cache.shift();\n          }\n          for (let i = 0; i < cache.length; i++) {\n            const lines = cache[i].split('\\n');\n            let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n            cacheType = cacheType.length ? cacheType[0] : '';\n            const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n            let size = parseInt(sizeParts[0], 10);\n            const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n            size = size * (unit === 'kb' ? 1024 : (unit === 'mb' ? 1024 * 1024 : (unit === 'gb' ? 1024 * 1024 * 1024 : 1)));\n            if (cacheType) {\n              if (cacheType === 'l1') {\n                result.cache[cacheType + 'd'] = size / 2;\n                result.cache[cacheType + 'i'] = size / 2;\n              } else {\n                result.cache[cacheType] = size;\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sysctl hw.l1icachesize hw.l1dcachesize hw.l2cachesize hw.l3cachesize', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            lines.forEach(function (line) {\n              let parts = line.split(':');\n              if (parts[0].toLowerCase().indexOf('hw.l1icachesize') !== -1) {\n                result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l1dcachesize') !== -1) {\n                result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l2cachesize') !== -1) {\n                result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l3cachesize') !== -1) {\n                result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n            });\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('cpu get l2cachesize, l3cachesize /value').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n');\n              result.l1d = 0;\n              result.l1i = 0;\n              result.l2 = util.getValue(lines, 'l2cachesize', '=');\n              result.l3 = util.getValue(lines, 'l3cachesize', '=');\n              if (result.l2) { result.l2 = parseInt(result.l2, 10) * 1024; }\n              if (result.l3) { result.l3 = parseInt(result.l3, 10) * 1024; }\n            }\n            util.wmic('path Win32_CacheMemory get CacheType,InstalledSize,Purpose').then((stdout, error) => {\n              if (!error) {\n                let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n                lines.forEach(function (line) {\n                  if (line !== '') {\n                    line = line.trim().split(/\\s\\s+/);\n                    // L1 Instructions\n                    if (line[2] === 'L1 Cache' && line[0] === '3') {\n                      result.l1i = parseInt(line[1], 10);\n                    }\n                    // L1 Data\n                    if (line[2] === 'L1 Cache' && line[0] === '4') {\n                      result.l1d = parseInt(line[1], 10);\n                    }\n                  }\n                });\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuCache = cpuCache;\n\n// --------------------------\n// CPU - current load - in %\n\nfunction getLoad() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let loads = os.loadavg().map(function (x) { return x / util.cores(); });\n      let avgload = parseFloat((Math.max.apply(Math, loads)).toFixed(2));\n      let result = {};\n\n      let now = Date.now() - _current_cpu.ms;\n      if (now >= 200) {\n        _current_cpu.ms = Date.now();\n        const cpus = os.cpus();\n        let totalUser = 0;\n        let totalSystem = 0;\n        let totalNice = 0;\n        let totalIrq = 0;\n        let totalIdle = 0;\n        let cores = [];\n        _corecount = (cpus && cpus.length) ? cpus.length : 0;\n\n        for (let i = 0; i < _corecount; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIdle += cpu.idle;\n          totalIrq += cpu.irq;\n          let tmp_tick = (_cpus && _cpus[i] && _cpus[i].totalTick ? _cpus[i].totalTick : 0);\n          let tmp_load = (_cpus && _cpus[i] && _cpus[i].totalLoad ? _cpus[i].totalLoad : 0);\n          let tmp_user = (_cpus && _cpus[i] && _cpus[i].user ? _cpus[i].user : 0);\n          let tmp_system = (_cpus && _cpus[i] && _cpus[i].sys ? _cpus[i].sys : 0);\n          let tmp_nice = (_cpus && _cpus[i] && _cpus[i].nice ? _cpus[i].nice : 0);\n          let tmp_idle = (_cpus && _cpus[i] && _cpus[i].idle ? _cpus[i].idle : 0);\n          let tmp_irq = (_cpus && _cpus[i] && _cpus[i].irq ? _cpus[i].irq : 0);\n          _cpus[i] = cpu;\n          _cpus[i].totalTick = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq + _cpus[i].idle;\n          _cpus[i].totalLoad = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq;\n          _cpus[i].currentTick = _cpus[i].totalTick - tmp_tick;\n          _cpus[i].load = (_cpus[i].totalLoad - tmp_load);\n          _cpus[i].load_user = (_cpus[i].user - tmp_user);\n          _cpus[i].load_system = (_cpus[i].sys - tmp_system);\n          _cpus[i].load_nice = (_cpus[i].nice - tmp_nice);\n          _cpus[i].load_idle = (_cpus[i].idle - tmp_idle);\n          _cpus[i].load_irq = (_cpus[i].irq - tmp_irq);\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].load_user = _cpus[i].load_user / _cpus[i].currentTick * 100;\n          cores[i].load_system = _cpus[i].load_system / _cpus[i].currentTick * 100;\n          cores[i].load_nice = _cpus[i].load_nice / _cpus[i].currentTick * 100;\n          cores[i].load_idle = _cpus[i].load_idle / _cpus[i].currentTick * 100;\n          cores[i].load_irq = _cpus[i].load_irq / _cpus[i].currentTick * 100;\n          cores[i].raw_load = _cpus[i].load;\n          cores[i].raw_load_user = _cpus[i].load_user;\n          cores[i].raw_load_system = _cpus[i].load_system;\n          cores[i].raw_load_nice = _cpus[i].load_nice;\n          cores[i].raw_load_idle = _cpus[i].load_idle;\n          cores[i].raw_load_irq = _cpus[i].load_irq;\n        }\n        let totalTick = totalUser + totalSystem + totalNice + totalIrq + totalIdle;\n        let totalLoad = totalUser + totalSystem + totalNice + totalIrq;\n        let currentTick = totalTick - _current_cpu.tick;\n        result = {\n          avgload: avgload,\n          currentload: (totalLoad - _current_cpu.load) / currentTick * 100,\n          currentload_user: (totalUser - _current_cpu.user) / currentTick * 100,\n          currentload_system: (totalSystem - _current_cpu.system) / currentTick * 100,\n          currentload_nice: (totalNice - _current_cpu.nice) / currentTick * 100,\n          currentload_idle: (totalIdle - _current_cpu.idle) / currentTick * 100,\n          currentload_irq: (totalIrq - _current_cpu.irq) / currentTick * 100,\n          raw_currentload: (totalLoad - _current_cpu.load),\n          raw_currentload_user: (totalUser - _current_cpu.user),\n          raw_currentload_system: (totalSystem - _current_cpu.system),\n          raw_currentload_nice: (totalNice - _current_cpu.nice),\n          raw_currentload_idle: (totalIdle - _current_cpu.idle),\n          raw_currentload_irq: (totalIrq - _current_cpu.irq),\n          cpus: cores\n        };\n        _current_cpu = {\n          user: totalUser,\n          nice: totalNice,\n          system: totalSystem,\n          idle: totalIdle,\n          irq: totalIrq,\n          tick: totalTick,\n          load: totalLoad,\n          ms: _current_cpu.ms,\n          currentload: result.currentload,\n          currentload_user: result.currentload_user,\n          currentload_system: result.currentload_system,\n          currentload_nice: result.currentload_nice,\n          currentload_idle: result.currentload_idle,\n          currentload_irq: result.currentload_irq,\n          raw_currentload: result.raw_currentload,\n          raw_currentload_user: result.raw_currentload_user,\n          raw_currentload_system: result.raw_currentload_system,\n          raw_currentload_nice: result.raw_currentload_nice,\n          raw_currentload_idle: result.raw_currentload_idle,\n          raw_currentload_irq: result.raw_currentload_irq,\n        };\n      } else {\n        let cores = [];\n        for (let i = 0; i < _corecount; i++) {\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].load_user = _cpus[i].load_user / _cpus[i].currentTick * 100;\n          cores[i].load_system = _cpus[i].load_system / _cpus[i].currentTick * 100;\n          cores[i].load_nice = _cpus[i].load_nice / _cpus[i].currentTick * 100;\n          cores[i].load_idle = _cpus[i].load_idle / _cpus[i].currentTick * 100;\n          cores[i].load_irq = _cpus[i].load_irq / _cpus[i].currentTick * 100;\n          cores[i].raw_load = _cpus[i].load;\n          cores[i].raw_load_user = _cpus[i].load_user;\n          cores[i].raw_load_system = _cpus[i].load_system;\n          cores[i].raw_load_nice = _cpus[i].load_nice;\n          cores[i].raw_load_idle = _cpus[i].load_idle;\n          cores[i].raw_load_irq = _cpus[i].load_irq;\n        }\n        result = {\n          avgload: avgload,\n          currentload: _current_cpu.currentload,\n          currentload_user: _current_cpu.currentload_user,\n          currentload_system: _current_cpu.currentload_system,\n          currentload_nice: _current_cpu.currentload_nice,\n          currentload_idle: _current_cpu.currentload_idle,\n          currentload_irq: _current_cpu.currentload_irq,\n          raw_currentload: _current_cpu.raw_currentload,\n          raw_currentload_user: _current_cpu.raw_currentload_user,\n          raw_currentload_system: _current_cpu.raw_currentload_system,\n          raw_currentload_nice: _current_cpu.raw_currentload_nice,\n          raw_currentload_idle: _current_cpu.raw_currentload_idle,\n          raw_currentload_irq: _current_cpu.raw_currentload_irq,\n          cpus: cores\n        };\n      }\n      resolve(result);\n    });\n  });\n}\n\nfunction currentLoad(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getLoad().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.currentLoad = currentLoad;\n\n// --------------------------\n// PS - full load\n// since bootup\n\nfunction getFullLoad() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const cpus = os.cpus();\n      let totalUser = 0;\n      let totalSystem = 0;\n      let totalNice = 0;\n      let totalIrq = 0;\n      let totalIdle = 0;\n\n      let result = 0;\n\n      if (cpus && cpus.length) {\n        for (let i = 0, len = cpus.length; i < len; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIrq += cpu.irq;\n          totalIdle += cpu.idle;\n        }\n        let totalTicks = totalIdle + totalIrq + totalNice + totalSystem + totalUser;\n        result = (totalTicks - totalIdle) / totalTicks * 100.0;\n\n      } else {\n        result = 0;\n      }\n      resolve(result);\n    });\n  });\n}\n\nfunction fullLoad(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getFullLoad().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.fullLoad = fullLoad;\n\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// memory.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 5. Memory\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst OSX_RAM_manufacturers = {\n  '0x014F': 'Transcend Information',\n  '0x2C00': 'Micron Technology Inc.',\n  '0x802C': 'Micron Technology Inc.',\n  '0x80AD': 'Hynix Semiconductor Inc.',\n  '0x80CE': 'Samsung Electronics Inc.',\n  '0xAD00': 'Hynix Semiconductor Inc.',\n  '0xCE00': 'Samsung Electronics Inc.',\n  '0x02FE': 'Elpida',\n  '0x5105': 'Qimonda AG i. In.',\n  '0x8551': 'Qimonda AG i. In.',\n  '0x859B': 'Crucial',\n  '0x04CD': 'G-Skill'\n};\n\n// _______________________________________________________________________________________\n// |                         R A M                              |          H D           |\n// |______________________|_________________________|           |                        |\n// |        active             buffers/cache        |           |                        |\n// |________________________________________________|___________|_________|______________|\n// |                     used                            free   |   used       free      |\n// |____________________________________________________________|________________________|\n// |                        total                               |          swap          |\n// |____________________________________________________________|________________________|\n\n// free (older versions)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers     cached\n// Mem:         16038 (1)   15653 (2)   384 (3)  0 (4)     236 (5)     14788 (6)\n// -/+ buffers/cache:       628 (7)     15409 (8)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// | active (2-(5+6) = 7) |  available (3+5+6 = 8)              |\n// |______________________|_________________________|___________|\n// |        active        |  buffers/cache (5+6)    |           |\n// |________________________________________________|___________|\n// |                   used (2)                     | free (3)  |\n// |____________________________________________________________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n\n//\n// free (since free von procps-ng 3.3.10)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers/cache   available\n// Mem:         16038 (1)   628 (2)     386 (3)  0 (4)     15024 (5)     14788 (6)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// |                      |      available (6) estimated        |\n// |______________________|_________________________|___________|\n// |     active (2)       |   buffers/cache (5)     | free (3)  |\n// |________________________________________________|___________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n//\n// Reference: http://www.software-architect.net/blog/article/date/2015/06/12/-826c6e5052.html\n\n// /procs/meminfo - sample (all in kB)\n//\n// MemTotal: 32806380 kB\n// MemFree: 17977744 kB\n// MemAvailable: 19768972 kB\n// Buffers: 517028 kB\n// Cached: 2161876 kB\n// SwapCached: 456 kB\n// Active: 12081176 kB\n// Inactive: 2164616 kB\n// Active(anon): 10832884 kB\n// Inactive(anon): 1477272 kB\n// Active(file): 1248292 kB\n// Inactive(file): 687344 kB\n// Unevictable: 0 kB\n// Mlocked: 0 kB\n// SwapTotal: 16768892 kB\n// SwapFree: 16768304 kB\n// Dirty: 268 kB\n// Writeback: 0 kB\n// AnonPages: 11568832 kB\n// Mapped: 719992 kB\n// Shmem: 743272 kB\n// Slab: 335716 kB\n// SReclaimable: 256364 kB\n// SUnreclaim: 79352 kB\n\nfunction mem(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        total: os.totalmem(),\n        free: os.freemem(),\n        used: os.totalmem() - os.freemem(),\n\n        active: os.totalmem() - os.freemem(),     // temporarily (fallback)\n        available: os.freemem(),                  // temporarily (fallback)\n        buffers: 0,\n        cached: 0,\n        slab: 0,\n        buffcache: 0,\n\n        swaptotal: 0,\n        swapused: 0,\n        swapfree: 0\n      };\n\n      if (_linux) {\n        fs.readFile('/proc/meminfo', function (error, stdout) {\n          if (!error) {\n            const lines = stdout.toString().split('\\n');\n            result.total = parseInt(util.getValue(lines, 'memtotal'), 10);\n            result.total = result.total ? result.total * 1024 : os.totalmem();\n            result.free = parseInt(util.getValue(lines, 'memfree'), 10);\n            result.free = result.free ? result.free * 1024 : os.freemem();\n            result.used = result.total - result.free;\n\n            result.buffers = parseInt(util.getValue(lines, 'buffers'), 10);\n            result.buffers = result.buffers ? result.buffers * 1024 : 0;\n            result.cached = parseInt(util.getValue(lines, 'cached'), 10);\n            result.cached = result.cached ? result.cached * 1024 : 0;\n            result.slab = parseInt(util.getValue(lines, 'slab'), 10);\n            result.slab = result.slab ? result.slab * 1024 : 0;\n            result.buffcache = result.buffers + result.cached + result.slab;\n\n            let available = parseInt(util.getValue(lines, 'memavailable'), 10);\n            result.available = available ? available * 1024 : result.free + result.buffcache;\n            result.active = result.total - result.available;\n\n            result.swaptotal = parseInt(util.getValue(lines, 'swaptotal'), 10);\n            result.swaptotal = result.swaptotal ? result.swaptotal * 1024 : 0;\n            result.swapfree = parseInt(util.getValue(lines, 'swapfree'), 10);\n            result.swapfree = result.swapfree ? result.swapfree * 1024 : 0;\n            result.swapused = result.swaptotal - result.swapfree;\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('/sbin/sysctl -a 2>/dev/null | grep -E \"hw.realmem|hw.physmem|vm.stats.vm.v_page_count|vm.stats.vm.v_wire_count|vm.stats.vm.v_active_count|vm.stats.vm.v_inactive_count|vm.stats.vm.v_cache_count|vm.stats.vm.v_free_count|vm.stats.vm.v_page_size\"', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            const pagesize = parseInt(util.getValue(lines, 'vm.stats.vm.v_page_size'), 10);\n            const inactive = parseInt(util.getValue(lines, 'vm.stats.vm.v_inactive_count'), 10) * pagesize;\n            const cache = parseInt(util.getValue(lines, 'vm.stats.vm.v_cache_count'), 10) * pagesize;\n\n            result.total = parseInt(util.getValue(lines, 'hw.realmem'), 10);\n            if (isNaN(result.total)) result.total = parseInt(util.getValue(lines, 'hw.physmem'), 10);\n            result.free = parseInt(util.getValue(lines, 'vm.stats.vm.v_free_count'), 10) * pagesize;\n            result.buffcache = inactive + cache;\n            result.available = result.buffcache + result.free;\n            result.active = result.total - result.free - result.buffcache;\n\n            result.swaptotal = 0;\n            result.swapfree = 0;\n            result.swapused = 0;\n\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_darwin) {\n        exec('vm_stat 2>/dev/null | grep \"Pages active\"', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n\n            result.active = parseInt(lines[0].split(':')[1], 10) * 4096;\n            result.buffcache = result.used - result.active;\n            result.available = result.free + result.buffcache;\n          }\n          exec('sysctl -n vm.swapusage 2>/dev/null', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              if (lines.length > 0) {\n                let line = lines[0].replace(/,/g, '.').replace(/M/g, '');\n                line = line.trim().split('  ');\n                for (let i = 0; i < line.length; i++) {\n                  if (line[i].toLowerCase().indexOf('total') !== -1) result.swaptotal = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024;\n                  if (line[i].toLowerCase().indexOf('used') !== -1) result.swapused = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024;\n                  if (line[i].toLowerCase().indexOf('free') !== -1) result.swapfree = parseFloat(line[i].split('=')[1].trim()) * 1024 * 1024;\n                }\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        });\n      }\n      if (_windows) {\n        let swaptotal = 0;\n        let swapused = 0;\n        try {\n          util.wmic('pagefile get AllocatedBaseSize, CurrentUsage').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(/\\s\\s+/);\n                  swaptotal = swaptotal + parseInt(line[0], 10);\n                  swapused = swapused + parseInt(line[1], 10);\n                }\n              });\n            }\n            result.swaptotal = swaptotal * 1024 * 1024;\n            result.swapused = swapused * 1024 * 1024;\n            result.swapfree = result.swaptotal - result.swapused;\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.mem = mem;\n\nfunction memLayout(callback) {\n\n  function getManufacturer(manId) {\n    if ({}.hasOwnProperty.call(OSX_RAM_manufacturers, manId)) {\n      return (OSX_RAM_manufacturers[manId]);\n    }\n    return manId;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t memory 2>/dev/null | grep -iE \"Size:|Type|Speed|Manufacturer|Form Factor|Locator|Memory Device|Serial Number|Voltage|Part Number\"; unset LC_ALL', function (error, stdout) {\n          if (!error) {\n            let devices = stdout.toString().split('Memory Device');\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const sizeString = util.getValue(lines, 'Size');\n              const size = sizeString.indexOf('GB') >= 0 ? parseInt(sizeString, 10) * 1024 * 1024 * 1024 : parseInt(sizeString, 10) * 1024 * 1024;\n              if (parseInt(util.getValue(lines, 'Size'), 10) > 0) {\n                result.push({\n                  size,\n                  bank: util.getValue(lines, 'Bank Locator'),\n                  type: util.getValue(lines, 'Type:'),\n                  clockSpeed: (util.getValue(lines, 'Configured Clock Speed:') ? parseInt(util.getValue(lines, 'Configured Clock Speed:'), 10) : (util.getValue(lines, 'Speed:') ? parseInt(util.getValue(lines, 'Speed:'), 10) : -1)),\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  manufacturer: util.getValue(lines, 'Manufacturer:'),\n                  partNum: util.getValue(lines, 'Part Number:'),\n                  serialNum: util.getValue(lines, 'Serial Number:'),\n                  voltageConfigured: parseFloat(util.getValue(lines, 'Configured Voltage:') || -1),\n                  voltageMin: parseFloat(util.getValue(lines, 'Minimum Voltage:') || -1),\n                  voltageMax: parseFloat(util.getValue(lines, 'Maximum Voltage:') || -1),\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: util.getValue(lines, 'Bank Locator'),\n                  type: 'Empty',\n                  clockSpeed: 0,\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: -1,\n                  voltageMin: -1,\n                  voltageMax: -1,\n                });\n              }\n            });\n          }\n          if (!result.length) {\n            result.push({\n              size: os.totalmem(),\n              bank: '',\n              type: '',\n              clockSpeed: 0,\n              formFactor: '',\n              partNum: '',\n              serialNum: '',\n              voltageConfigured: -1,\n              voltageMin: -1,\n              voltageMax: -1,\n            });\n\n            // Try Raspberry PI\n            try {\n              let stdout = execSync('cat /proc/cpuinfo 2>/dev/null');\n              let lines = stdout.toString().split('\\n');\n              let model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n              let version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n\n              if (model === 'BCM2835' || model === 'BCM2708' || model === 'BCM2709' || model === 'BCM2835' || model === 'BCM2837') {\n\n                const clockSpeed = {\n                  '0': 400,\n                  '1': 450,\n                  '2': 450,\n                  '3': 3200\n                };\n                result[0].clockSpeed = version && version[2] && clockSpeed[version[2]] || 400;\n                result[0].clockSpeed = version && version[4] && version[4] === 'd' ? '500' : result[0].clockSpeed;\n                result[0].type = 'LPDDR2';\n                result[0].type = version && version[2] && version[2] === '3' ? 'LPDDR4' : result[0].type;\n                result[0].formFactor = 'SoC';\n\n                stdout = execSync('vcgencmd get_config sdram_freq 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let freq = parseInt(util.getValue(lines, 'sdram_freq', '=', true), 10) || 0;\n                if (freq) {\n                  result.clockSpeed = freq;\n                }\n\n                stdout = execSync('vcgencmd measure_volts sdram_p 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let voltage = parseFloat(util.getValue(lines, 'volt', '=', true)) || 0;\n                if (voltage) {\n                  result[0].voltageConfigured = voltage;\n                  result[0].voltageMin = voltage;\n                  result[0].voltageMax = voltage;\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('system_profiler SPMemoryDataType', function (error, stdout) {\n          if (!error) {\n            let devices = stdout.toString().split('        BANK ');\n            let hasBank = true;\n            if (devices.length === 1) {\n              devices = stdout.toString().split('        DIMM');\n              hasBank = false;\n            }\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const bank = (hasBank ? 'BANK ' : 'DIMM') + lines[0].trim().split('/')[0];\n              const size = parseInt(util.getValue(lines, '          Size'));\n              if (size) {\n                result.push({\n                  size: size * 1024 * 1024 * 1024,\n                  bank: bank,\n                  type: util.getValue(lines, '          Type:'),\n                  clockSpeed: parseInt(util.getValue(lines, '          Speed:'), 10),\n                  formFactor: '',\n                  manufacturer: getManufacturer(util.getValue(lines, '          Manufacturer:')),\n                  partNum: util.getValue(lines, '          Part Number:'),\n                  serialNum: util.getValue(lines, '          Serial Number:'),\n                  voltageConfigured: -1,\n                  voltageMin: -1,\n                  voltageMax: -1,\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: bank,\n                  type: 'Empty',\n                  clockSpeed: 0,\n                  formFactor: '',\n                  manufacturer: '',\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: -1,\n                  voltageMin: -1,\n                  voltageMax: -1,\n                });\n              }\n            });\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        const memoryTypes = 'Unknown|Other|DRAM|Synchronous DRAM|Cache DRAM|EDO|EDRAM|VRAM|SRAM|RAM|ROM|FLASH|EEPROM|FEPROM|EPROM|CDRAM|3DRAM|SDRAM|SGRAM|RDRAM|DDR|DDR2|DDR2 FB-DIMM|Reserved|DDR3|FBD2|DDR4|LPDDR|LPDDR2|LPDDR3|LPDDR4'.split('|');\n        const FormFactors = 'Unknown|Other|SIP|DIP|ZIP|SOJ|Proprietary|SIMM|DIMM|TSOP|PGA|RIMM|SODIMM|SRIMM|SMD|SSMP|QFP|TQFP|SOIC|LCC|PLCC|BGA|FPBGA|LGA'.split('|');\n\n        try {\n          util.wmic('memorychip get /value').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split('BankL');\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                result.push({\n                  size: parseInt(util.getValue(lines, 'Capacity', '='), 10) || 0,\n                  bank: util.getValue(lines, 'abel', '='), // BankLabel\n                  type: memoryTypes[parseInt(util.getValue(lines, 'MemoryType', '='), 10)],\n                  clockSpeed: parseInt(util.getValue(lines, 'ConfiguredClockSpeed', '='), 10) || 0,\n                  formFactor: FormFactors[parseInt(util.getValue(lines, 'FormFactor', '='), 10) || 0],\n                  manufacturer: util.getValue(lines, 'Manufacturer', '='),\n                  partNum: util.getValue(lines, 'PartNumber', '='),\n                  serialNum: util.getValue(lines, 'SerialNumber', '='),\n                  voltageConfigured: (parseInt(util.getValue(lines, 'ConfiguredVoltage', '='), 10) || 0) / 1000.0,\n                  voltageMin: (parseInt(util.getValue(lines, 'MinVoltage', '='), 10) || 0) / 1000.0,\n                  voltageMax: (parseInt(util.getValue(lines, 'MaxVoltage', '='), 10) || 0) / 1000.0,\n                });\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.memLayout = memLayout;\n\n", "'use strict';\n// @ts-check;\n// ==================================================================================\n// battery.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 6. Battery\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nmodule.exports = function (callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        hasbattery: false,\n        cyclecount: 0,\n        ischarging: false,\n        designedcapacity: 0,\n        maxcapacity: 0,\n        currentcapacity: 0,\n        voltage: 0,\n        capacityUnit: '',\n        percent: 0,\n        timeremaining: -1,\n        acconnected: true,\n        type: '',\n        model: '',\n        manufacturer: '',\n        serial: ''\n      };\n\n      if (_linux) {\n        let battery_path = '';\n        if (fs.existsSync('/sys/class/power_supply/BAT1/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT1/';\n        } else if (fs.existsSync('/sys/class/power_supply/BAT0/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT0/';\n        }\n        if (battery_path) {\n          fs.readFile(battery_path + 'uevent', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n\n              result.ischarging = (util.getValue(lines, 'POWER_SUPPLY_STATUS', '=').toLowerCase() === 'charging');\n              result.acconnected = result.ischarging;\n              result.voltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_NOW', '='), 10) / 1000000.0;\n              result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n              result.cyclecount = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CYCLE_COUNT', '='), 10);\n              result.maxcapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL', '='), 10) / 1000.0 / (result.voltage || 1));\n              result.designedcapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL_DESIGN', '='), 10) / 1000.0 / (result.voltage || 1)) | result.maxcapacity;\n              result.currentcapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_NOW', '='), 10) / 1000.0 / (result.voltage || 1));\n              if (!result.maxcapacity) {\n                result.maxcapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL', '='), 10) / 1000.0;\n                result.designcapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL_DESIGN', '='), 10) / 1000.0 | result.maxcapacity;\n                result.currentcapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10) / 1000.0;\n              }\n              const percent = util.getValue(lines, 'POWER_SUPPLY_CAPACITY', '=');\n              const energy = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10);\n              const power = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_POWER_NOW', '='), 10);\n              const current = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CURRENT_NOW', '='), 10);\n\n              result.percent = parseInt('0' + percent, 10);\n              if (result.maxcapacity && result.currentcapacity) {\n                result.hasbattery = true;\n                if (!percent) {\n                  result.percent = 100.0 * result.currentcapacity / result.maxcapacity;\n                }\n              }\n              if (result.ischarging) {\n                result.hasbattery = true;\n              }\n              if (energy && power) {\n                result.timeremaining = Math.floor(energy / power * 60);\n              } else if (current && result.currentcapacity) {\n                result.timeremaining = Math.floor(result.currentcapacity / current * 60);\n              }\n              result.type = util.getValue(lines, 'POWER_SUPPLY_TECHNOLOGY', '=');\n              result.model = util.getValue(lines, 'POWER_SUPPLY_MODEL_NAME', '=');\n              result.manufacturer = util.getValue(lines, 'POWER_SUPPLY_MANUFACTURER', '=');\n              result.serial = util.getValue(lines, 'POWER_SUPPLY_SERIAL_NUMBER', '=');\n              if (callback) { callback(result); }\n              resolve(result);\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl hw.acpi.battery hw.acpi.acline', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          const batteries = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.units'), 10);\n          const percent = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.life'), 10);\n          result.hasbattery = (batteries > 0);\n          result.cyclecount = -1;\n          result.ischarging = util.getValue(lines, 'hw.acpi.acline') !== '1';\n          result.acconnected = result.ischarging;\n          result.maxcapacity = -1;\n          result.currentcapacity = -1;\n          result.capacityUnit = 'unknown';\n          result.percent = batteries ? percent : -1;\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('ioreg -n AppleSmartBattery -r | egrep \"CycleCount|IsCharging|DesignCapacity|MaxCapacity|CurrentCapacity|BatterySerialNumber|TimeRemaining|Voltage\"; pmset -g batt | grep %', function (error, stdout) {\n          if (stdout) {\n            let lines = stdout.toString().replace(/ +/g, '').replace(/\"+/g, '').replace(/-/g, '').split('\\n');\n            result.cyclecount = parseInt('0' + util.getValue(lines, 'cyclecount', '='), 10);\n            result.voltage = parseInt('0' + util.getValue(lines, 'voltage', '='), 10) / 1000.0;\n            result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n            result.maxcapacity = Math.round(parseInt('0' + util.getValue(lines, 'maxcapacity', '='), 10) * (result.voltage || 1));\n            result.currentcapacity = Math.round(parseInt('0' + util.getValue(lines, 'currentcapacity', '='), 10) * (result.voltage || 1));\n            result.designedcapacity = Math.round(parseInt('0' + util.getValue(lines, 'DesignCapacity', '='), 10) * (result.voltage || 1));\n            result.manufacturer = 'Apple';\n            result.serial = util.getValue(lines, 'BatterySerialNumber', '=');\n            let percent = -1;\n            const line = util.getValue(lines, 'internal', 'Battery');\n            let parts = line.split(';');\n            if (parts && parts[0]) {\n              let parts2 = parts[0].split('\\t');\n              if (parts2 && parts2[1]) {\n                percent = parseFloat(parts2[1].trim().replace(/%/g, ''));\n              }\n            }\n            if (parts && parts[1]) {\n              result.ischarging = (parts[1].trim() === 'charging');\n              result.acconnected = (parts[1].trim() !== 'discharging');\n            } else {\n              result.ischarging = util.getValue(lines, 'ischarging', '=').toLowerCase() === 'yes';\n              result.acconnected = result.ischarging;\n            }\n            if (result.maxcapacity && result.currentcapacity) {\n              result.hasbattery = true;\n              result.type = 'Li-ion';\n              result.percent = percent !== -1 ? percent : Math.round(100.0 * result.currentcapacity / result.maxcapacity);\n              if (!result.ischarging) {\n                result.timeremaining = parseInt('0' + util.getValue(lines, 'TimeRemaining', '='), 10);\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.wmic('Path Win32_Battery Get BatteryStatus, DesignCapacity, EstimatedChargeRemaining, DesignVoltage, FullChargeCapacity /value').then((stdout) => {\n            if (stdout) {\n              let lines = stdout.split('\\r\\n');\n              let status = util.getValue(lines, 'BatteryStatus', '=').trim();\n              // 1 = \"Discharging\"\n              // 2 = \"On A/C\"\n              // 3 = \"Fully Charged\"\n              // 4 = \"Low\"\n              // 5 = \"Critical\"\n              // 6 = \"Charging\"\n              // 7 = \"Charging High\"\n              // 8 = \"Charging Low\"\n              // 9 = \"Charging Critical\"\n              // 10 = \"Undefined\"\n              // 11 = \"Partially Charged\"\n              if (status && status != '10') {\n                const statusValue = parseInt(status);\n                result.hasbattery = true;\n                result.maxcapacity = parseInt(util.getValue(lines, 'DesignCapacity', '=') || 0);\n                result.designcapacity = parseInt(util.getValue(lines, 'DesignCapacity', '=') || 0);\n                result.voltage = parseInt(util.getValue(lines, 'DesignVoltage', '=') || 0) / 1000.0;\n                result.capacityUnit = 'mWh';\n                result.percent = parseInt(util.getValue(lines, 'EstimatedChargeRemaining', '=') || 0);\n                result.currentcapacity = parseInt(result.maxcapacity * result.percent / 100);\n                result.ischarging = (statusValue >= 6 && statusValue <= 9) || statusValue === 11 || (!(statusValue === 3) && !(statusValue === 1) && result.percent < 100);\n                result.acconnected = result.ischarging || statusValue === 2;\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n};\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// graphics.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 7. Graphics (controller, display)\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _resolutionx = 0;\nlet _resolutiony = 0;\nlet _pixeldepth = 0;\nlet _refreshrate = 0;\n\nconst videoTypes = {\n  '-2': 'UNINITIALIZED',\n  '-1': 'OTHER',\n  '0': 'HD15',\n  '1': 'SVIDEO',\n  '2': 'Composite video',\n  '3': 'Component video',\n  '4': 'DVI',\n  '5': 'HDMI',\n  '6': 'LVDS',\n  '8': 'D_JPN',\n  '9': 'SDI',\n  '10': 'DP',\n  '11': 'DP embedded',\n  '12': 'UDI',\n  '13': 'UDI embedded',\n  '14': 'SDTVDONGLE',\n  '15': 'MIRACAST',\n  '2147483648': 'INTERNAL'\n};\n\nfunction graphics(callback) {\n\n  function parseLinesDarwin(lines) {\n    let starts = [];\n    let level = -1;\n    let lastlevel = -1;\n    let controllers = [];\n    let displays = [];\n    let currentController = {\n      vendor: '',\n      model: '',\n      bus: '',\n      vram: -1,\n      vramDynamic: false\n    };\n    let currentDisplay = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizex: -1,\n      sizey: -1,\n      pixeldepth: -1,\n      resolutionx: -1,\n      resolutiony: -1,\n      currentResX: -1,\n      currentResY: -1,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: -1\n    };\n    for (let i = 0; i < lines.length; i++) {\n      if ('' !== lines[i].trim()) {\n        let start = lines[i].search(/\\S|$/);\n        if (-1 === starts.indexOf(start)) {\n          starts.push(start);\n        }\n        level = starts.indexOf(start);\n        if (level < lastlevel) {\n          if (Object.keys(currentController).length > 0) {// just changed to Displays\n            controllers.push(currentController);\n            currentController = {\n              vendor: '',\n              model: '',\n              bus: '',\n              vram: -1,\n              vramDynamic: false\n            };\n          }\n          if (Object.keys(currentDisplay).length > 0) {// just changed to Displays\n            displays.push(currentDisplay);\n            currentDisplay = {\n              vendor: '',\n              model: '',\n              deviceName: '',\n              main: false,\n              builtin: false,\n              connection: '',\n              sizex: -1,\n              sizey: -1,\n              pixeldepth: -1,\n              resolutionx: -1,\n              resolutiony: -1,\n              currentResX: -1,\n              currentResY: -1,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: -1\n            };\n          }\n        }\n        lastlevel = level;\n        let parts = lines[i].split(':');\n        if (2 === level) {       // grafics controller level\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('chipsetmodel') !== -1) currentController.model = parts[1].trim();\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('bus') !== -1) currentController.bus = parts[1].trim();\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('vendor') !== -1) currentController.vendor = parts[1].split('(')[0].trim();\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('vram(total)') !== -1) {\n            currentController.vram = parseInt(parts[1]);    // in MB\n            if (parts[1].toLowerCase().indexOf('gb') !== -1) {\n              currentController.vram = currentController.vram * 1024;\n            }\n            currentController.vramDynamic = false;\n          }\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('vram(dynamic,max)') !== -1) {\n            currentController.vram = parseInt(parts[1]);    // in MB\n            if (parts[1].toLowerCase().indexOf('gb') !== -1) {\n              currentController.vram = currentController.vram * 1024;\n            }\n            currentController.vramDynamic = true;\n          }\n        }\n        if (3 === level) {       // display controller level\n          if (parts.length > 1 && '' === parts[1]) {\n            currentDisplay.vendor = '';\n            currentDisplay.model = parts[0].trim();\n            currentDisplay.main = false;\n            currentDisplay.builtin = false;\n            currentDisplay.connection = '';\n            currentDisplay.sizex = -1;\n            currentDisplay.sizey = -1;\n            currentDisplay.positionX = 0;\n            currentDisplay.positionY = 0;\n            currentDisplay.pixeldepth = -1;\n          }\n        }\n        if (4 === level) {       // display controller details level\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('resolution') !== -1) {\n            let resolution = parts[1].split('x');\n            currentDisplay.resolutionx = (resolution.length > 1 ? parseInt(resolution[0]) : 0);\n            currentDisplay.resolutiony = (resolution.length > 1 ? parseInt(resolution[1]) : 0);\n            currentDisplay.currentResX = currentDisplay.resolutionx;\n            currentDisplay.currentResY = currentDisplay.resolutiony;\n          }\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('pixeldepth') !== -1) currentDisplay.pixeldepth = parseInt(parts[1]); // in BIT\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('framebufferdepth') !== -1) currentDisplay.pixeldepth = parseInt(parts[1]); // in BIT\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('maindisplay') !== -1 && parts[1].replace(/ +/g, '').toLowerCase() === 'yes') currentDisplay.main = true;\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('built-in') !== -1 && parts[1].replace(/ +/g, '').toLowerCase() === 'yes') {\n            currentDisplay.builtin = true;\n            currentDisplay.connection = '';\n          }\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('connectiontype') !== -1) {\n            currentDisplay.builtin = false;\n            currentDisplay.connection = parts[1].trim();\n          }\n        }\n      }\n    }\n    if (Object.keys(currentController).length > 0) {// just changed to Displays\n      controllers.push(currentController);\n    }\n    if (Object.keys(currentDisplay).length > 0) {// just changed to Displays\n      displays.push(currentDisplay);\n    }\n    return ({\n      controllers: controllers,\n      displays: displays\n    });\n  }\n\n  function parseLinesLinuxControllers(lines) {\n    let controllers = [];\n    let currentController = {\n      vendor: '',\n      model: '',\n      bus: '',\n      vram: -1,\n      vramDynamic: false\n    };\n    let isGraphicsController = false;\n    // PCI bus IDs\n    let pciIDs = [];\n    try {\n      pciIDs = execSync('export LC_ALL=C; dmidecode -t 9 2>/dev/null; unset LC_ALL | grep \"Bus Address: \"').toString().split('\\n');\n      for (let i = 0; i < pciIDs.length; i++) {\n        pciIDs[i] = pciIDs[i].replace('Bus Address:', '').replace('0000:', '').trim();\n      }\n      pciIDs = pciIDs.filter(function (el) {\n        return el != null && el;\n      });\n    } catch (e) {\n      util.noop();\n    }\n    for (let i = 0; i < lines.length; i++) {\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0]) {        // first line of new entry\n          let isExternal = (pciIDs.indexOf(lines[i].split(' ')[0]) >= 0);\n          let vgapos = lines[i].toLowerCase().indexOf(' vga ');\n          let _3dcontrollerpos = lines[i].toLowerCase().indexOf('3d controller');\n          if (vgapos !== -1 || _3dcontrollerpos !== -1) {         // VGA\n            if (_3dcontrollerpos !== -1 && vgapos === -1) {\n              vgapos = _3dcontrollerpos;\n            }\n            if (currentController.vendor || currentController.model || currentController.bus || currentController.vram !== -1 || currentController.vramDynamic) { // already a controller found\n              controllers.push(currentController);\n              currentController = {\n                vendor: '',\n                model: '',\n                bus: '',\n                vram: -1,\n                vramDynamic: false\n              };\n            }\n            isGraphicsController = true;\n            let endpos = lines[i].search(/\\[[0-9a-f]{4}:[0-9a-f]{4}]|$/);\n            let parts = lines[i].substr(vgapos, endpos - vgapos).split(':');\n            if (parts.length > 1) {\n              parts[1] = parts[1].trim();\n              if (parts[1].toLowerCase().indexOf('corporation') >= 0) {\n                currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf('corporation') + 11).trim();\n                currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf('corporation') + 11, 200).trim().split('(')[0];\n                currentController.bus = (pciIDs.length > 0 && isExternal) ? 'PCIe' : 'Onboard';\n                currentController.vram = -1;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' inc.') >= 0) {\n                if ((parts[1].match(new RegExp(']', 'g')) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' inc.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' inc.') + 5, 200).trim().split('(')[0].trim();\n                }\n                currentController.bus = (pciIDs.length > 0 && isExternal) ? 'PCIe' : 'Onboard';\n                currentController.vram = -1;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' ltd.') >= 0) {\n                if ((parts[1].match(new RegExp(']', 'g')) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' ltd.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' ltd.') + 5, 200).trim().split('(')[0].trim();\n                }\n              }\n            }\n\n          } else {\n            isGraphicsController = false;\n          }\n        }\n        if (isGraphicsController) { // within VGA details\n          let parts = lines[i].split(':');\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('devicename') !== -1 && parts[1].toLowerCase().indexOf('onboard') !== -1) currentController.bus = 'Onboard';\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('region') !== -1 && parts[1].toLowerCase().indexOf('memory') !== -1) {\n            let memparts = parts[1].split('=');\n            if (memparts.length > 1) {\n              currentController.vram = parseInt(memparts[1]);\n            }\n          }\n        }\n      }\n    }\n    if (currentController.vendor || currentController.model || currentController.bus || currentController.vram !== -1 || currentController.vramDynamic) { // already a controller found\n      controllers.push(currentController);\n    }\n    return (controllers);\n  }\n\n  function parseLinesLinuxEdid(edid) {\n    // parsen EDID\n    // --> model\n    // --> resolutionx\n    // --> resolutiony\n    // --> builtin = false\n    // --> pixeldepth (?)\n    // --> sizex\n    // --> sizey\n    let result = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizex: -1,\n      sizey: -1,\n      pixeldepth: -1,\n      resolutionx: -1,\n      resolutiony: -1,\n      currentResX: -1,\n      currentResY: -1,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: -1\n    };\n    // find first \"Detailed Timing Description\"\n    let start = 108;\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    result.resolutionx = parseInt('0x0' + edid.substr(start + 8, 1) + edid.substr(start + 4, 2));\n    result.resolutiony = parseInt('0x0' + edid.substr(start + 14, 1) + edid.substr(start + 10, 2));\n    result.sizex = parseInt('0x0' + edid.substr(start + 28, 1) + edid.substr(start + 24, 2));\n    result.sizey = parseInt('0x0' + edid.substr(start + 29, 1) + edid.substr(start + 26, 2));\n    // monitor name\n    start = edid.indexOf('000000fc00'); // find first \"Monitor Description Data\"\n    if (start >= 0) {\n      let model_raw = edid.substr(start + 10, 26);\n      if (model_raw.indexOf('0a') !== -1) {\n        model_raw = model_raw.substr(0, model_raw.indexOf('0a'));\n      }\n      try {\n        if (model_raw.length > 2) {\n          result.model = model_raw.match(/.{1,2}/g).map(function (v) {\n            return String.fromCharCode(parseInt(v, 16));\n          }).join('');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else {\n      result.model = '';\n    }\n    return result;\n  }\n\n  function parseLinesLinuxDisplays(lines, depth) {\n    let displays = [];\n    let currentDisplay = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizex: -1,\n      sizey: -1,\n      pixeldepth: -1,\n      resolutionx: -1,\n      resolutiony: -1,\n      currentResX: -1,\n      currentResY: -1,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: -1\n    };\n    let is_edid = false;\n    let is_current = false;\n    let edid_raw = '';\n    let start = 0;\n    for (let i = 1; i < lines.length; i++) {        // start with second line\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0] && lines[i].toLowerCase().indexOf(' connected ') !== -1) {        // first line of new entry\n          if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizex !== -1 || currentDisplay.pixeldepth !== -1 || currentDisplay.resolutionx !== -1) {         // push last display to array\n            displays.push(currentDisplay);\n            currentDisplay = {\n              vendor: '',\n              model: '',\n              main: false,\n              builtin: false,\n              connection: '',\n              sizex: -1,\n              sizey: -1,\n              pixeldepth: -1,\n              resolutionx: -1,\n              resolutiony: -1,\n              currentResX: -1,\n              currentResY: -1,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: -1\n            };\n          }\n          let parts = lines[i].split(' ');\n          currentDisplay.connection = parts[0];\n          currentDisplay.main = lines[i].toLowerCase().indexOf(' primary ') >= 0;\n          currentDisplay.builtin = (parts[0].toLowerCase().indexOf('edp') >= 0);\n        }\n\n        // try to read EDID information\n        if (is_edid) {\n          if (lines[i].search(/\\S|$/) > start) {\n            edid_raw += lines[i].toLowerCase().trim();\n          } else {\n            // parsen EDID\n            let edid_decoded = parseLinesLinuxEdid(edid_raw);\n            currentDisplay.vendor = edid_decoded.vendor;\n            currentDisplay.model = edid_decoded.model;\n            currentDisplay.resolutionx = edid_decoded.resolutionx;\n            currentDisplay.resolutiony = edid_decoded.resolutiony;\n            currentDisplay.sizex = edid_decoded.sizex;\n            currentDisplay.sizey = edid_decoded.sizey;\n            currentDisplay.pixeldepth = depth;\n            is_edid = false;\n          }\n        }\n        if (lines[i].toLowerCase().indexOf('edid:') >= 0) {\n          is_edid = true;\n          start = lines[i].search(/\\S|$/);\n        }\n        if (lines[i].toLowerCase().indexOf('*current') >= 0) {\n          const parts1 = lines[i].split('(');\n          if (parts1 && parts1.length > 1 && parts1[0].indexOf('x') >= 0) {\n            const resParts = parts1[0].trim().split('x');\n            currentDisplay.currentResX = util.toInt(resParts[0]);\n            currentDisplay.currentResY = util.toInt(resParts[1]);\n          }\n          is_current = true;\n        }\n        if (is_current && lines[i].toLowerCase().indexOf('clock') >= 0 && lines[i].toLowerCase().indexOf('hz') >= 0 && lines[i].toLowerCase().indexOf('v: height') >= 0) {\n          const parts1 = lines[i].split('clock');\n          if (parts1 && parts1.length > 1 && parts1[1].toLowerCase().indexOf('hz') >= 0) {\n            currentDisplay.currentRefreshRate = util.toInt(parts1[1]);\n          }\n          is_current = false;\n        }\n      }\n    }\n\n    // pushen displays\n    if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizex !== -1 || currentDisplay.pixeldepth !== -1 || currentDisplay.resolutionx !== -1) {  // still information there\n      displays.push(currentDisplay);\n    }\n    return displays;\n  }\n\n  // function starts here\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        controllers: [],\n        displays: []\n      };\n      if (_darwin) {\n        let cmd = 'system_profiler SPDisplaysDataType';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result = parseLinesDarwin(lines);\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        // Raspberry: https://elinux.org/RPI_vcgencmd_usage\n        if (util.isRaspberry() && util.isRaspbian()) {\n          let cmd = 'fbset -s | grep \\'mode \"\\'; vcgencmd get_mem gpu; tvservice -s; tvservice -n;';\n          exec(cmd, function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 3 && lines[0].indexOf('mode \"') >= -1 && lines[2].indexOf('0x12000a') > -1) {\n              const parts = lines[0].replace('mode', '').replace(/\"/g, '').trim().split('x');\n              if (parts.length === 2) {\n                result.displays.push({\n                  vendor: '',\n                  model: util.getValue(lines, 'device_name', '='),\n                  main: true,\n                  builtin: false,\n                  connection: 'HDMI',\n                  sizex: -1,\n                  sizey: -1,\n                  pixeldepth: -1,\n                  resolutionx: parseInt(parts[0], 10),\n                  resolutiony: parseInt(parts[1], 10),\n                  currentResX: -1,\n                  currentResY: -1,\n                  positionX: 0,\n                  positionY: 0,\n                  currentRefreshRate: -1\n                });\n              }\n            }\n            if (lines.length > 1 && lines[1].indexOf('gpu=') >= -1) {\n              result.controllers.push({\n                vendor: 'Broadcom',\n                model: 'VideoCore IV',\n                bus: '',\n                vram: lines[1].replace('gpu=', ''),\n                vramDynamic: true\n              });\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        } else {\n          let cmd = 'lspci -vvv  2>/dev/null';\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              result.controllers = parseLinesLinuxControllers(lines);\n            }\n            let cmd = 'xdpyinfo 2>/dev/null | grep \\'depth of root window\\' | awk \\'{ print $5 }\\'';\n            exec(cmd, function (error, stdout) {\n              let depth = 0;\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                depth = parseInt(lines[0]) || 0;\n              }\n              let cmd = 'xrandr --verbose 2>/dev/null';\n              exec(cmd, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  result.displays = parseLinesLinuxDisplays(lines, depth);\n                }\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            });\n          });\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n\n        // https://blogs.technet.microsoft.com/heyscriptingguy/2013/10/03/use-powershell-to-discover-multi-monitor-information/\n        // https://devblogs.microsoft.com/scripting/use-powershell-to-discover-multi-monitor-information/\n        try {\n          const workload = [];\n          workload.push(util.wmic('path win32_VideoController get /value'));\n          workload.push(util.wmic('path win32_desktopmonitor get /value'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorBasicDisplayParams | fl'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.Screen]::AllScreens'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorConnectionParams | fl'));\n          workload.push(util.powerShell('gwmi WmiMonitorID -Namespace root\\\\wmi | ForEach-Object {(($_.ManufacturerName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.ProductCodeID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.UserFriendlyName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.SerialNumberID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + $_.InstanceName}'));\n\n          Promise.all(\n            workload\n          ).then(data => {\n            // controller\n            let csections = data[0].split(/\\n\\s*\\n/);\n            result.controllers = parseLinesWindowsControllers(csections);\n\n            // displays\n            let dsections = data[1].split(/\\n\\s*\\n/);\n            // result.displays = parseLinesWindowsDisplays(dsections);\n            dsections.shift();\n            dsections.pop();\n\n            // monitor (powershell)\n            let msections = data[2].split('Active ');\n            msections.shift();\n\n            // forms.screens (powershell)\n            let ssections = data[3].split('BitsPerPixel ');\n            ssections.shift();\n\n            // connection params (powershell) - video type\n            let tsections = data[4].split(/\\n\\s*\\n/);\n            tsections.shift();\n\n            // monitor ID (powershell) - model / vendor\n            const res = data[5].split(/\\r\\n/);\n            let isections = [];\n            res.forEach(element => {\n              const parts = element.split('|');\n              if (parts.length === 5) {\n                isections.push({\n                  vendor: parts[0],\n                  code: parts[1],\n                  model: parts[2],\n                  serial: parts[3],\n                  instanceId: parts[4]\n                });\n              }\n            });\n            result.displays = parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections);\n\n            if (result.displays.length === 1) {\n              if (_resolutionx) {\n                result.displays[0].resolutionx = _resolutionx;\n                if (!result.displays[0].currentResX) {\n                  result.displays[0].currentResX = _resolutionx;\n                }\n              }\n              if (_resolutiony) {\n                result.displays[0].resolutiony = _resolutiony;\n                if (result.displays[0].currentResY === 0) {\n                  result.displays[0].currentResY = _resolutiony;\n                }\n              }\n              if (_pixeldepth) {\n                result.displays[0].pixeldepth = _pixeldepth;\n              }\n              if (_refreshrate && !result.displays[0].refreshrate) {\n                result.displays[0].currentRefreshRate = _refreshrate;\n              }\n            }\n\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          })\n            .catch(() => {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n\n  function parseLinesWindowsControllers(sections) {\n    let controllers = [];\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n\n          let lines = sections[i].trim().split('\\r\\n');\n          controllers.push({\n            vendor: util.getValue(lines, 'AdapterCompatibility', '='),\n            model: util.getValue(lines, 'name', '='),\n            bus: util.getValue(lines, 'PNPDeviceID', '=').startsWith('PCI') ? 'PCI' : '',\n            vram: parseInt(util.getValue(lines, 'AdapterRAM', '='), 10) / 1024 / 1024,\n            vramDynamic: (util.getValue(lines, 'VideoMemoryType', '=') === '2')\n          });\n          _resolutionx = util.toInt(util.getValue(lines, 'CurrentHorizontalResolution', '=')) || _resolutionx;\n          _resolutiony = util.toInt(util.getValue(lines, 'CurrentVerticalResolution', '=')) || _resolutiony;\n          _refreshrate = util.toInt(util.getValue(lines, 'CurrentRefreshRate', '=')) || _refreshrate;\n          _pixeldepth = util.toInt(util.getValue(lines, 'CurrentBitsPerPixel', '=')) || _pixeldepth;\n        }\n      }\n    }\n    return controllers;\n  }\n\n  // function parseLinesWindowsDisplays(sections) {\n  //   let displays = [];\n  //   for (let i in sections) {\n  //     if (sections.hasOwnProperty(i)) {\n  //       if (sections[i].trim() !== '') {\n  //         let lines = sections[i].trim().split('\\r\\n');\n  //         displays.push({\n  //           vendor: util.getValue(lines, 'MonitorManufacturer', '='),\n  //           model: util.getValue(lines, 'Name', '='),\n  //           main: false,\n  //           builtin: false,\n  //           connection: '',\n  //           sizex: -1,\n  //           sizey: -1,\n  //           pixeldepth: -1,\n  //           resolutionx: util.toInt(util.getValue(lines, 'ScreenWidth', '=')),\n  //           resolutiony: util.toInt(util.getValue(lines, 'ScreenHeight', '=')),\n  //         });\n  //       }\n  //     }\n  //   }\n  //   return displays;\n  // }\n\n  function parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections) {\n    let displays = [];\n    let vendor = '';\n    let model = '';\n    let deviceID = '';\n    let resolutionx = 0;\n    let resolutiony = 0;\n    if (dsections && dsections.length) {\n      let linesDisplay = dsections[0].split(os.EOL);\n      vendor = util.getValue(linesDisplay, 'MonitorManufacturer', '=');\n      model = util.getValue(linesDisplay, 'Name', '=');\n      deviceID = util.getValue(linesDisplay, 'PNPDeviceID', '=').replace(/&amp;/g, '&').toLowerCase();\n      resolutionx = util.toInt(util.getValue(linesDisplay, 'ScreenWidth', '='));\n      resolutiony = util.toInt(util.getValue(linesDisplay, 'ScreenHeight', '='));\n    }\n    for (let i = 0; i < ssections.length; i++) {\n      if (ssections[i].trim() !== '') {\n        ssections[i] = 'BitsPerPixel ' + ssections[i];\n        msections[i] = 'Active ' + msections[i];\n        // tsections can be empty on earlier versions of powershell (<=2.0). Tag connection type as UNKNOWN\n        // if this information is missing\n        if (tsections.length === 0) {\n          tsections[i] = 'Unknown';\n        }\n        let linesScreen = ssections[i].split(os.EOL);\n        let linesMonitor = msections[i].split(os.EOL);\n\n        let linesConnection = tsections[i].split(os.EOL);\n        const bitsPerPixel = util.getValue(linesScreen, 'BitsPerPixel');\n        const bounds = util.getValue(linesScreen, 'Bounds').replace('{', '').replace('}', '').split(',');\n        const primary = util.getValue(linesScreen, 'Primary');\n        const sizex = util.getValue(linesMonitor, 'MaxHorizontalImageSize');\n        const sizey = util.getValue(linesMonitor, 'MaxVerticalImageSize');\n        const instanceName = util.getValue(linesMonitor, 'InstanceName').toLowerCase();\n        const videoOutputTechnology = util.getValue(linesConnection, 'VideoOutputTechnology');\n        const deviceName = util.getValue(linesScreen, 'DeviceName');\n        let displayVendor = '';\n        let displayModel = '';\n        isections.forEach(element => {\n          if (element.instanceId.toLowerCase().startsWith(instanceName) && vendor.startsWith('(') && model.startsWith('PnP')) {\n            displayVendor = element.vendor;\n            displayModel = element.model;\n          }\n        });\n        displays.push({\n          vendor: instanceName.startsWith(deviceID) && displayVendor === '' ? vendor : displayVendor,\n          model: instanceName.startsWith(deviceID) && displayModel === '' ? model : displayModel,\n          deviceName,\n          main: primary.toLowerCase() === 'true',\n          builtin: videoOutputTechnology === '2147483648',\n          connection: videoOutputTechnology && videoTypes[videoOutputTechnology] ? videoTypes[videoOutputTechnology] : '',\n          resolutionx: util.toInt(util.getValue(bounds, 'Width', '=')),\n          resolutiony: util.toInt(util.getValue(bounds, 'Height', '=')),\n          sizex: sizex ? parseInt(sizex, 10) : -1,\n          sizey: sizey ? parseInt(sizey, 10) : -1,\n          pixeldepth: bitsPerPixel,\n          currentResX: util.toInt(util.getValue(bounds, 'Width', '=')),\n          currentResY: util.toInt(util.getValue(bounds, 'Height', '=')),\n          positionX: util.toInt(util.getValue(bounds, 'X', '=')),\n          positionY: util.toInt(util.getValue(bounds, 'Y', '=')),\n        });\n      }\n    }\n    if (ssections.length === 0) {\n      displays.push({\n        vendor,\n        model,\n        main: true,\n        resolutionx,\n        resolutiony,\n        sizex: -1,\n        sizey: -1,\n        pixeldepth: -1,\n        currentResX: resolutionx,\n        currentResY: resolutiony,\n        positionX: 0,\n        positionY: 0\n      });\n    }\n    return displays;\n  }\n\n}\n\nexports.graphics = graphics;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// filesystem.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 8. File System\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst NOT_SUPPORTED = 'not supported';\n\nlet _fs_speed = {};\nlet _disk_io = {};\n\n// --------------------------\n// FS - mounted file systems\n\nfunction fsSize(callback) {\n\n  let macOsDisks = [];\n\n  function getmacOsFsType(fs) {\n    if (!fs.startsWith('/')) { return 'NFS' };\n    const parts = fs.split('/');\n    const fsShort = parts[parts.length - 1];\n    const macOsDisksSingle = macOsDisks.filter(item => item.indexOf(fsShort) >= 0)\n    if (macOsDisksSingle.length === 1 && macOsDisksSingle[0].indexOf('APFS') >= 0) { return 'APFS' }\n    return 'HFS';\n  }\n\n  function parseDf(lines) {\n    let data = [];\n    lines.forEach(function (line) {\n      if (line !== '') {\n        line = line.replace(/ +/g, ' ').split(' ');\n        if (line && ((line[0].startsWith('/')) || (line[6] && line[6] === '/') || (line[0].indexOf('/') > 0))) {\n          const fs = line[0];\n          const fstype = ((_linux || _freebsd || _openbsd || _netbsd) ? line[1] : getmacOsFsType(line[0]));\n          const size = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[2] : line[1])) * 1024;\n          const used = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[3] : line[2])) * 1024;\n          const use = parseFloat((100.0 * ((_linux || _freebsd || _openbsd || _netbsd) ? line[3] : line[2]) / ((_linux || _freebsd || _openbsd || _netbsd) ? line[2] : line[1])).toFixed(2));\n          const mount = line[line.length - 1];\n          if (!data.find(el => (el.fs === fs && el.type === fstype))) {\n            data.push({\n              fs,\n              type: fstype,\n              size,\n              used,\n              use,\n              mount\n            });\n          }\n        }\n      }\n    });\n    return data;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = [];\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = '';\n        if (_darwin) {\n          cmd = 'df -kP';\n          macOsDisks = execSync('diskutil list').toString().split('\\n').filter(line => {\n            return !line.startsWith('/') && line.indexOf(':') > 0\n          });\n        }\n        if (_linux) cmd = 'df -lkPTx squashfs | grep ^/';\n        if (_freebsd || _openbsd || _netbsd) cmd = 'df -lkPT';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            data = parseDf(lines);\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          } else {\n            exec('df -kPT', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                data = parseDf(lines);\n              }\n              if (callback) {\n                callback(data);\n              }\n              resolve(data);\n            });\n          }\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(data); }\n        resolve(data);\n      }\n      if (_windows) {\n        try {\n          util.wmic('logicaldisk get Caption,FileSystem,FreeSpace,Size').then((stdout) => {\n            let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n            lines.forEach(function (line) {\n              if (line !== '') {\n                line = line.trim().split(/\\s\\s+/);\n                data.push({\n                  'fs': line[0],\n                  'type': line[1],\n                  'size': parseInt(line[3]),\n                  'used': parseInt(line[3]) - parseInt(line[2]),\n                  'use': parseFloat((100.0 * (parseInt(line[3]) - parseInt(line[2]))) / parseInt(line[3])),\n                  'mount': line[0]\n                });\n              }\n            });\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) { callback(data); }\n          resolve(data);\n        }\n      }\n    });\n  });\n}\n\nexports.fsSize = fsSize;\n\n// --------------------------\n// FS - open files count\n\nfunction fsOpenFiles(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = {\n        max: -1,\n        allocated: -1,\n        available: -1\n      };\n      if (_freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = 'sysctl -a | grep \\'kern.*files\\'';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.max = parseInt(util.getValue(lines, 'kern.maxfiles', ':'), 10);\n            result.allocated = parseInt(util.getValue(lines, 'kern.num_files', ':'), 10);\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        fs.readFile('/proc/sys/fs/file-nr', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            if (lines[0]) {\n              const parts = lines[0].replace(/\\s+/g, ' ').split(' ');\n              if (parts.length === 3) {\n                result.allocated = parseInt(parts[0], 10);\n                result.available = parseInt(parts[1], 10);\n                result.max = parseInt(parts[2], 10);\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.fsOpenFiles = fsOpenFiles;\n\n// --------------------------\n// disks\n\nfunction parseBytes(s) {\n  return parseInt(s.substr(s.indexOf(' (') + 2, s.indexOf(' Bytes)') - 10));\n}\n\nfunction parseDevices(lines) {\n  let devices = [];\n  let i = 0;\n  lines.forEach(line => {\n    if (line.length > 0) {\n      if (line[0] === '*') {\n        i++;\n      } else {\n        let parts = line.split(':');\n        if (parts.length > 1) {\n          if (!devices[i]) devices[i] = {\n            name: '',\n            identifier: '',\n            type: 'disk',\n            fstype: '',\n            mount: '',\n            size: 0,\n            physical: 'HDD',\n            uuid: '',\n            label: '',\n            model: '',\n            serial: '',\n            removable: false,\n            protocol: ''\n          };\n          parts[0] = parts[0].trim().toUpperCase().replace(/ +/g, '');\n          parts[1] = parts[1].trim();\n          if ('DEVICEIDENTIFIER' === parts[0]) devices[i].identifier = parts[1];\n          if ('DEVICENODE' === parts[0]) devices[i].name = parts[1];\n          if ('VOLUMENAME' === parts[0]) {\n            if (parts[1].indexOf('Not applicable') === -1) devices[i].label = parts[1];\n          }\n          if ('PROTOCOL' === parts[0]) devices[i].protocol = parts[1];\n          if ('DISKSIZE' === parts[0]) devices[i].size = parseBytes(parts[1]);\n          if ('FILESYSTEMPERSONALITY' === parts[0]) devices[i].fstype = parts[1];\n          if ('MOUNTPOINT' === parts[0]) devices[i].mount = parts[1];\n          if ('VOLUMEUUID' === parts[0]) devices[i].uuid = parts[1];\n          if ('READ-ONLYMEDIA' === parts[0] && parts[1] === 'Yes') devices[i].physical = 'CD/DVD';\n          if ('SOLIDSTATE' === parts[0] && parts[1] === 'Yes') devices[i].physical = 'SSD';\n          if ('VIRTUAL' === parts[0]) devices[i].type = 'virtual';\n          if ('REMOVABLEMEDIA' === parts[0]) devices[i].removable = (parts[1] === 'Removable');\n          if ('PARTITIONTYPE' === parts[0]) devices[i].type = 'part';\n          if ('DEVICE/MEDIANAME' === parts[0]) devices[i].model = parts[1];\n        }\n      }\n    }\n  });\n  return devices;\n}\n\nfunction parseBlk(lines) {\n  let data = [];\n\n  lines.filter(line => line !== '').forEach((line) => {\n    try {\n      line = decodeURIComponent(line.replace(/\\\\x/g, '%'));\n      line = line.replace(/\\\\/g, '\\\\\\\\');\n      let disk = JSON.parse(line);\n      data.push({\n        'name': disk.name,\n        'type': disk.type,\n        'fstype': disk.fstype,\n        'mount': disk.mountpoint,\n        'size': parseInt(disk.size),\n        'physical': (disk.type === 'disk' ? (disk.rota === '0' ? 'SSD' : 'HDD') : (disk.type === 'rom' ? 'CD/DVD' : '')),\n        'uuid': disk.uuid,\n        'label': disk.label,\n        'model': disk.model,\n        'serial': disk.serial,\n        'removable': disk.rm === '1',\n        'protocol': disk.tran,\n        'group': disk.group,\n      });\n    } catch (e) {\n      util.noop();\n    }\n  });\n  data = util.unique(data);\n  data = util.sortByKey(data, ['type', 'name']);\n  return data;\n}\n\nfunction blkStdoutToObject(stdout) {\n  return stdout.toString()\n    .replace(/NAME=/g, '{\"name\":')\n    .replace(/FSTYPE=/g, ',\"fstype\":')\n    .replace(/TYPE=/g, ',\"type\":')\n    .replace(/SIZE=/g, ',\"size\":')\n    .replace(/MOUNTPOINT=/g, ',\"mountpoint\":')\n    .replace(/UUID=/g, ',\"uuid\":')\n    .replace(/ROTA=/g, ',\"rota\":')\n    .replace(/RO=/g, ',\"ro\":')\n    .replace(/RM=/g, ',\"rm\":')\n    .replace(/TRAN=/g, ',\"tran\":')\n    .replace(/SERIAL=/g, ',\"serial\":')\n    .replace(/LABEL=/g, ',\"label\":')\n    .replace(/MODEL=/g, ',\"model\":')\n    .replace(/OWNER=/g, ',\"owner\":')\n    .replace(/GROUP=/g, ',\"group\":')\n    .replace(/\\n/g, '}\\n');\n}\n\nfunction blockDevices(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = [];\n      if (_linux) {\n        // see https://wiki.ubuntuusers.de/lsblk/\n        // exec(\"lsblk -bo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,TRAN,SERIAL,LABEL,MODEL,OWNER,GROUP,MODE,ALIGNMENT,MIN-IO,OPT-IO,PHY-SEC,LOG-SEC,SCHED,RQ-SIZE,RA,WSAME\", function (error, stdout) {\n        exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,TRAN,SERIAL,LABEL,MODEL,OWNER 2>/dev/null', function (error, stdout) {\n          if (!error) {\n            let lines = blkStdoutToObject(stdout).split('\\n');\n            data = parseBlk(lines);\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          } else {\n            exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER 2>/dev/null', function (error, stdout) {\n              if (!error) {\n                let lines = blkStdoutToObject(stdout).split('\\n');\n                data = parseBlk(lines);\n              }\n              if (callback) {\n                callback(data);\n              }\n              resolve(data);\n            });\n          }\n        });\n      }\n      if (_darwin) {\n        exec('diskutil info -all', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            // parse lines into temp array of devices\n            data = parseDevices(lines);\n          }\n          if (callback) {\n            callback(data);\n          }\n          resolve(data);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(data); }\n        resolve(data);\n      }\n      if (_windows) {\n        let drivetypes = ['Unknown', 'NoRoot', 'Removable', 'Local', 'Network', 'CD/DVD', 'RAM'];\n        try {\n          util.wmic('logicaldisk get Caption,Description,DeviceID,DriveType,FileSystem,FreeSpace,Name,Size,VolumeName,VolumeSerialNumber /value').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                let drivetype = util.getValue(lines, 'drivetype', '=');\n                if (drivetype) {\n                  data.push({\n                    name: util.getValue(lines, 'name', '='),\n                    identifier: util.getValue(lines, 'caption', '='),\n                    type: 'disk',\n                    fstype: util.getValue(lines, 'filesystem', '=').toLowerCase(),\n                    mount: util.getValue(lines, 'caption', '='),\n                    size: util.getValue(lines, 'size', '='),\n                    physical: (drivetype >= 0 && drivetype <= 6) ? drivetypes[drivetype] : drivetypes[0],\n                    uuid: util.getValue(lines, 'volumeserialnumber', '='),\n                    label: util.getValue(lines, 'volumename', '='),\n                    model: '',\n                    serial: util.getValue(lines, 'volumeserialnumber', '='),\n                    removable: drivetype === '2',\n                    protocol: ''\n                  });\n                }\n              });\n            }\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          });\n\n        } catch (e) {\n          if (callback) { callback(data); }\n          resolve(data);\n        }\n      }\n    });\n  });\n}\n\nexports.blockDevices = blockDevices;\n\n// --------------------------\n// FS - speed\n\nfunction calcFsSpeed(rx, wx) {\n  let result = {\n    rx: 0,\n    wx: 0,\n    tx: 0,\n    rx_sec: -1,\n    wx_sec: -1,\n    tx_sec: -1,\n    ms: 0\n  };\n\n  if (_fs_speed && _fs_speed.ms) {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    result.ms = Date.now() - _fs_speed.ms;\n    result.rx_sec = (result.rx - _fs_speed.bytes_read) / (result.ms / 1000);\n    result.wx_sec = (result.wx - _fs_speed.bytes_write) / (result.ms / 1000);\n    result.tx_sec = result.rx_sec + result.wx_sec;\n    _fs_speed.rx_sec = result.rx_sec;\n    _fs_speed.wx_sec = result.wx_sec;\n    _fs_speed.tx_sec = result.tx_sec;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = result.ms;\n  } else {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    _fs_speed.rx_sec = -1;\n    _fs_speed.wx_sec = -1;\n    _fs_speed.tx_sec = -1;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = 0;\n  }\n  return result;\n}\n\nfunction fsStats(callback) {\n\n  return new Promise((resolve, reject) => {\n    process.nextTick(() => {\n      if (_windows) {\n        let error = new Error(NOT_SUPPORTED);\n        if (callback) {\n          callback(NOT_SUPPORTED);\n        }\n        reject(error);\n      }\n\n      let result = {\n        rx: 0,\n        wx: 0,\n        tx: 0,\n        rx_sec: -1,\n        wx_sec: -1,\n        tx_sec: -1,\n        ms: 0\n      };\n\n      let rx = 0;\n      let wx = 0;\n      if ((_fs_speed && !_fs_speed.ms) || (_fs_speed && _fs_speed.ms && Date.now() - _fs_speed.ms >= 500)) {\n        if (_linux) {\n          // exec(\"df -k | grep /dev/\", function(error, stdout) {\n          exec('lsblk 2>/dev/null | grep /', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              let fs_filter = [];\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.replace(/[\u251C\u2500\u2502\u2514]+/g, '').trim().split(' ');\n                  if (fs_filter.indexOf(line[0]) === -1) fs_filter.push(line[0]);\n                }\n              });\n\n              let output = fs_filter.join('|');\n              exec('cat /proc/diskstats | egrep \"' + output + '\"', function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.forEach(function (line) {\n                    line = line.trim();\n                    if (line !== '') {\n                      line = line.replace(/ +/g, ' ').split(' ');\n\n                      rx += parseInt(line[5]) * 512;\n                      wx += parseInt(line[9]) * 512;\n                    }\n                  });\n                  result = calcFsSpeed(rx, wx);\n                }\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        }\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n                if (line !== '') {\n                  line = line.split(',');\n\n                  rx += parseInt(line[2]);\n                  wx += parseInt(line[9]);\n                }\n              });\n              result = calcFsSpeed(rx, wx);\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        }\n      } else {\n        result.ms = _fs_speed.last_ms;\n        result.rx = _fs_speed.bytes_read;\n        result.wx = _fs_speed.bytes_write;\n        result.tx = _fs_speed.bytes_read + _fs_speed.bytes_write;\n        result.rx_sec = _fs_speed.rx_sec;\n        result.wx_sec = _fs_speed.wx_sec;\n        result.tx_sec = _fs_speed.tx_sec;\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.fsStats = fsStats;\n\nfunction calcDiskIO(rIO, wIO) {\n  let result = {\n    rIO: 0,\n    wIO: 0,\n    tIO: 0,\n    rIO_sec: -1,\n    wIO_sec: -1,\n    tIO_sec: -1,\n    ms: 0\n  };\n  if (_disk_io && _disk_io.ms) {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.ms = Date.now() - _disk_io.ms;\n    result.rIO_sec = (result.rIO - _disk_io.rIO) / (result.ms / 1000);\n    result.wIO_sec = (result.wIO - _disk_io.wIO) / (result.ms / 1000);\n    result.tIO_sec = result.rIO_sec + result.wIO_sec;\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = result.rIO_sec;\n    _disk_io.wIO_sec = result.wIO_sec;\n    _disk_io.tIO_sec = result.tIO_sec;\n    _disk_io.last_ms = result.ms;\n    _disk_io.ms = Date.now();\n  } else {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = -1;\n    _disk_io.wIO_sec = -1;\n    _disk_io.tIO_sec = -1;\n    _disk_io.last_ms = 0;\n    _disk_io.ms = Date.now();\n  }\n  return result;\n}\n\nfunction disksIO(callback) {\n\n  return new Promise((resolve, reject) => {\n    process.nextTick(() => {\n      if (_windows) {\n        let error = new Error(NOT_SUPPORTED);\n        if (callback) {\n          callback(NOT_SUPPORTED);\n        }\n        reject(error);\n      }\n      if (_sunos) {\n        let error = new Error(NOT_SUPPORTED);\n        if (callback) {\n          callback(NOT_SUPPORTED);\n        }\n        reject(error);\n      }\n\n      let result = {\n        rIO: 0,\n        wIO: 0,\n        tIO: 0,\n        rIO_sec: -1,\n        wIO_sec: -1,\n        tIO_sec: -1,\n        ms: 0\n      };\n      let rIO = 0;\n      let wIO = 0;\n\n      if ((_disk_io && !_disk_io.ms) || (_disk_io && _disk_io.ms && Date.now() - _disk_io.ms >= 500)) {\n        if (_linux || _freebsd || _openbsd || _netbsd) {\n          // prints Block layer statistics for all mounted volumes\n          // var cmd = \"for mount in `lsblk | grep / | sed -r 's/\u2502 \u2514\u2500//' | cut -d ' ' -f 1`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          // var cmd = \"for mount in `lsblk | grep / | sed 's/[\u2502\u2514\u2500\u251C]//g' | awk '{$1=$1};1' | cut -d ' ' -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          let cmd = 'for mount in `lsblk 2>/dev/null | grep \" disk \" | sed \"s/[\u2502\u2514\u2500\u251C]//g\" | awk \\'{$1=$1};1\\' | cut -d \" \" -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r \"s/ +/;/g\" | sed -r \"s/^;//\"; done';\n\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.split('\\n');\n              lines.forEach(function (line) {\n                // ignore empty lines\n                if (!line) return;\n\n                // sum r/wIO of all disks to compute all disks IO\n                let stats = line.split(';');\n                rIO += parseInt(stats[0]);\n                wIO += parseInt(stats[4]);\n              });\n              result = calcDiskIO(rIO, wIO);\n\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        }\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n                if (line !== '') {\n                  line = line.split(',');\n\n                  rIO += parseInt(line[10]);\n                  wIO += parseInt(line[0]);\n                }\n              });\n              result = calcDiskIO(rIO, wIO);\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        }\n      } else {\n        result.rIO = _disk_io.rIO;\n        result.wIO = _disk_io.wIO;\n        result.tIO = _disk_io.rIO + _disk_io.wIO;\n        result.ms = _disk_io.last_ms;\n        result.rIO_sec = _disk_io.rIO_sec;\n        result.wIO_sec = _disk_io.wIO_sec;\n        result.tIO_sec = _disk_io.tIO_sec;\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.disksIO = disksIO;\n\nfunction diskLayout(callback) {\n\n  function getVendorFromModel(model) {\n    const diskManufacturers = [\n      { pattern: '^WESTERN.+', manufacturer: 'Western Digital' },\n      { pattern: '^WDC.+', manufacturer: 'Western Digital' },\n      { pattern: 'WD.+', manufacturer: 'Western Digital' },\n      { pattern: '^TOSHIBA.+', manufacturer: 'Toshiba' },\n      { pattern: '^HITACHI.+', manufacturer: 'Hitachi' },\n      { pattern: '^IC.+', manufacturer: 'Hitachi' },\n      { pattern: '^HTS.+', manufacturer: 'Hitachi' },\n      { pattern: '^SANDISK.+', manufacturer: 'SanDisk' },\n      { pattern: '^KINGSTON.+', manufacturer: 'Kingston Technonogy' },\n      { pattern: '^SONY.+', manufacturer: 'Sony' },\n      { pattern: '^TRANSCEND.+', manufacturer: 'Transcend' },\n      { pattern: 'SAMSUNG.+', manufacturer: 'Samsung' },\n      { pattern: '^ST(?!I\\\\ ).+', manufacturer: 'Seagate' },\n      { pattern: '^STI\\\\ .+', manufacturer: 'SimpleTech' },\n      { pattern: '^D...-.+', manufacturer: 'IBM' },\n      { pattern: '^IBM.+', manufacturer: 'IBM' },\n      { pattern: '^FUJITSU.+', manufacturer: 'Fujitsu' },\n      { pattern: '^MP.+', manufacturer: 'Fujitsu' },\n      { pattern: '^MK.+', manufacturer: 'Toshiba' },\n      { pattern: '^MAXTOR.+', manufacturer: 'Maxtor' },\n      { pattern: '^Pioneer.+', manufacturer: 'Pioneer' },\n      { pattern: '^PHILIPS.+', manufacturer: 'Philips' },\n      { pattern: '^QUANTUM.+', manufacturer: 'Quantum Technology' },\n      { pattern: 'FIREBALL.+', manufacturer: 'Quantum Technology' },\n      { pattern: '^VBOX.+', manufacturer: 'VirtualBox' },\n      { pattern: 'CORSAIR.+', manufacturer: 'Corsair Components' },\n      { pattern: 'CRUCIAL.+', manufacturer: 'Crucial' },\n      { pattern: 'ECM.+', manufacturer: 'ECM' },\n      { pattern: 'INTEL.+', manufacturer: 'INTEL' },\n    ];\n\n    let result = '';\n    if (model) {\n      model = model.toUpperCase();\n      diskManufacturers.forEach((manufacturer) => {\n        const re = RegExp(manufacturer.pattern);\n        if (re.test(model)) { result = manufacturer.manufacturer; }\n      });\n    }\n    return result;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const commitResult = res => {\n        for (let i = 0; i < res.length; i++) {\n          delete res[i].BSDName;\n        }\n        if (callback) {\n          callback(res);\n        }\n        resolve(res);\n      };\n\n      let result = [];\n      let cmd = '';\n\n      if (_linux) {\n        let cmdFullSmart = '';\n\n        exec('export LC_ALL=C; lsblk -ablJO 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          if (!error) {\n            try {\n              const out = stdout.toString().trim();\n              let devices = [];\n              try {\n                const outJSON = JSON.parse(out);\n                if (outJSON && {}.hasOwnProperty.call(outJSON, 'blockdevices')) {\n                  devices = outJSON.blockdevices.filter(item => { return (item.group === 'disk' || item.type === 'disk') && item.size > 0 && (item.model !== null || (item.mountpoint === null && item.label === null && item.fstype === null && item.parttype === null)); });\n                }\n              } catch (e) {\n                // fallback to older version of lsblk\n                const out2 = execSync('export LC_ALL=C; lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER,GROUP 2>/dev/null; unset LC_ALL').toString();\n                let lines = blkStdoutToObject(out2).split('\\n');\n                const data = parseBlk(lines);\n                devices = data.filter(item => { return (item.group === 'disk' || item.type === 'disk') && item.size > 0 && ((item.model !== null && item.model !== '') || (item.mountpoint === '' && item.label === '' && item.fstype === '')); });\n              }\n              devices.forEach((device) => {\n                let mediumType = '';\n                const BSDName = '/dev/' + device.name;\n                const logical = device.name;\n                try {\n                  mediumType = execSync('cat /sys/block/' + logical + '/queue/rotational 2>/dev/null').toString().split('\\n')[0];\n                } catch (e) {\n                  util.noop();\n                }\n                let interfaceType = device.tran ? device.tran.toUpperCase().trim() : '';\n                if (interfaceType === 'NVME') {\n                  mediumType = '2';\n                  interfaceType = 'PCIe';\n                }\n                result.push({\n                  device: BSDName,\n                  type: (mediumType === '0' ? 'SSD' : (mediumType === '1' ? 'HD' : (mediumType === '2' ? 'NVMe' : (device.model && device.model.indexOf('SSD') > -1 ? 'SSD' : (device.model && device.model.indexOf('NVM') > -1 ? 'NVMe' : 'HD'))))),\n                  name: device.model || '',\n                  vendor: getVendorFromModel(device.model) || (device.vendor ? device.vendor.trim() : ''),\n                  size: device.size || 0,\n                  bytesPerSector: -1,\n                  totalCylinders: -1,\n                  totalHeads: -1,\n                  totalSectors: -1,\n                  totalTracks: -1,\n                  tracksPerCylinder: -1,\n                  sectorsPerTrack: -1,\n                  firmwareRevision: device.rev ? device.rev.trim() : '',\n                  serialNum: device.serial ? device.serial.trim() : '',\n                  interfaceType: interfaceType,\n                  smartStatus: 'unknown',\n                  BSDName: BSDName\n                });\n                cmd += `printf \"\\n${BSDName}|\"; smartctl -H ${BSDName} | grep overall;`;\n                cmdFullSmart += `${cmdFullSmart ? 'printf \",\";' : ''}smartctl -a -j ${BSDName};`;\n              });\n            } catch (e) {\n              util.noop();\n            }\n          }\n          // check S.M.A.R.T. status\n          if (cmdFullSmart) {\n            exec(cmdFullSmart, function (error, stdout) {\n              try {\n                const data = JSON.parse(`[${stdout}]`);\n                data.forEach(disk => {\n                  const diskBSDName = disk.smartctl.argv[disk.smartctl.argv.length - 1];\n\n                  for (let i = 0; i < result.length; i++) {\n                    if (result[i].BSDName === diskBSDName) {\n                      result[i].smartStatus = (disk.smart_status.passed ? 'Ok' : (disk.smart_status.passed === false ? 'Predicted Failure' : 'unknown'));\n                      result[i].smartData = disk;\n                    }\n                  }\n                });\n                commitResult(result);\n              } catch (e) {\n                if (cmd) {\n                  cmd = cmd + 'printf \"\\n\"';\n                  exec(cmd, function (error, stdout) {\n                    let lines = stdout.toString().split('\\n');\n                    lines.forEach(line => {\n                      if (line) {\n                        let parts = line.split('|');\n                        if (parts.length === 2) {\n                          let BSDName = parts[0];\n                          parts[1] = parts[1].trim();\n                          let parts2 = parts[1].split(':');\n                          if (parts2.length === 2) {\n                            parts2[1] = parts2[1].trim();\n                            let status = parts2[1].toLowerCase();\n                            for (let i = 0; i < result.length; i++) {\n                              if (result[i].BSDName === BSDName) {\n                                result[i].smartStatus = (status === 'passed' ? 'Ok' : (status === 'failed!' ? 'Predicted Failure' : 'unknown'));\n                              }\n                            }\n                          }\n                        }\n                      }\n                    });\n                    commitResult(result);\n                  });\n                } else {\n                  commitResult(result);\n                }\n              }\n            });\n          } else {\n            commitResult(result);\n          }\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_darwin) {\n        exec('system_profiler SPSerialATADataType SPNVMeDataType', function (error, stdout) {\n          if (!error) {\n            let parts = stdout.toString().split('NVMExpress:');\n\n            let devices = parts[0].split(' Physical Interconnect: ');\n            devices.shift();\n            devices.forEach(function (device) {\n              device = 'InterfaceType: ' + device;\n              let lines = device.split('\\n');\n              const mediumType = util.getValue(lines, 'Medium Type', ':', true).trim();\n              const sizeStr = util.getValue(lines, 'capacity', ':', true).trim();\n              const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n              if (sizeStr) {\n                let sizeValue = 0;\n                if (sizeStr.indexOf('(') >= 0) {\n                  sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, ''));\n                }\n                if (!sizeValue) {\n                  sizeValue = parseInt(sizeStr);\n                }\n                if (sizeValue) {\n                  result.push({\n                    device: BSDName,\n                    type: mediumType.startsWith('Solid') ? 'SSD' : 'HD',\n                    name: util.getValue(lines, 'Model', ':', true).trim(),\n                    vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                    size: sizeValue,\n                    bytesPerSector: -1,\n                    totalCylinders: -1,\n                    totalHeads: -1,\n                    totalSectors: -1,\n                    totalTracks: -1,\n                    tracksPerCylinder: -1,\n                    sectorsPerTrack: -1,\n                    firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                    serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                    interfaceType: util.getValue(lines, 'InterfaceType', ':', true).trim(),\n                    smartStatus: 'unknown',\n                    BSDName: BSDName\n                  });\n                  cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                }\n              }\n            });\n            if (parts.length > 1) {\n              let devices = parts[1].split('\\n\\n          Capacity:');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = '!Capacity: ' + device;\n                let lines = device.split('\\n');\n                const linkWidth = util.getValue(lines, 'link width', ':', true).trim();\n                const sizeStr = util.getValue(lines, '!capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    result.push({\n                      device: BSDName,\n                      type: 'NVMe',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: -1,\n                      totalCylinders: -1,\n                      totalHeads: -1,\n                      totalSectors: -1,\n                      totalTracks: -1,\n                      tracksPerCylinder: -1,\n                      sectorsPerTrack: -1,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: ('PCIe ' + linkWidth).trim(),\n                      smartStatus: 'unknown',\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            }\n          }\n          if (cmd) {\n            cmd = cmd + 'printf \"\\n\"';\n            exec(cmd, function (error, stdout) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(line => {\n                if (line) {\n                  let parts = line.split('|');\n                  if (parts.length === 2) {\n                    let BSDName = parts[0];\n                    parts[1] = parts[1].trim();\n                    let parts2 = parts[1].split(':');\n                    if (parts2.length === 2) {\n                      parts2[1] = parts2[1].trim();\n                      let status = parts2[1].toLowerCase();\n                      for (let i = 0; i < result.length; i++) {\n                        if (result[i].BSDName === BSDName) {\n                          result[i].smartStatus = (status === 'not supported' ? 'not supported' : (status === 'verified' ? 'Ok' : (status === 'failing' ? 'Predicted Failure' : 'unknown')));\n                        }\n                      }\n                    }\n                  }\n                }\n              });\n              for (let i = 0; i < result.length; i++) {\n                delete result[i].BSDName;\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } else {\n            for (let i = 0; i < result.length; i++) {\n              delete result[i].BSDName;\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      }\n      if (_windows) {\n        try {\n          util.wmic('diskdrive get /value').then((stdout, error) => {\n            let devices = stdout.toString().split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const size = util.getValue(lines, 'Size', '=').trim();\n              const status = util.getValue(lines, 'Status', '=').trim().toLowerCase();\n              if (size) {\n                result.push({\n                  device: '',\n                  type: device.indexOf('SSD') > -1 ? 'SSD' : 'HD',  // just a starting point ... better: MSFT_PhysicalDisk - Media Type ... see below\n                  name: util.getValue(lines, 'Caption', '='),\n                  vendor: util.getValue(lines, 'Manufacturer', '='),\n                  size: parseInt(size),\n                  bytesPerSector: parseInt(util.getValue(lines, 'BytesPerSector', '=')),\n                  totalCylinders: parseInt(util.getValue(lines, 'TotalCylinders', '=')),\n                  totalHeads: parseInt(util.getValue(lines, 'TotalHeads', '=')),\n                  totalSectors: parseInt(util.getValue(lines, 'TotalSectors', '=')),\n                  totalTracks: parseInt(util.getValue(lines, 'TotalTracks', '=')),\n                  tracksPerCylinder: parseInt(util.getValue(lines, 'TracksPerCylinder', '=')),\n                  sectorsPerTrack: parseInt(util.getValue(lines, 'SectorsPerTrack', '=')),\n                  firmwareRevision: util.getValue(lines, 'FirmwareRevision', '=').trim(),\n                  serialNum: util.getValue(lines, 'SerialNumber', '=').trim(),\n                  interfaceType: util.getValue(lines, 'InterfaceType', '=').trim(),\n                  smartStatus: (status === 'ok' ? 'Ok' : (status === 'degraded' ? 'Degraded' : (status === 'pred fail' ? 'Predicted Failure' : 'Unknown')))\n                });\n              }\n            });\n            util.powerShell('Get-PhysicalDisk | Format-List')\n              .then(data => {\n                let devices = data.split(/\\n\\s*\\n/);\n                devices.forEach(function (device) {\n                  let lines = device.split('\\r\\n');\n                  const serialNum = util.getValue(lines, 'SerialNumber', ':').trim();\n                  const name = util.getValue(lines, 'FriendlyName', ':').trim().replace('Msft ', 'Microsoft');\n                  const size = util.getValue(lines, 'Size', ':').trim();\n                  const model = util.getValue(lines, 'Model', ':').trim();\n                  const interfaceType = util.getValue(lines, 'BusType', ':').trim();\n                  let mediaType = util.getValue(lines, 'MediaType', ':').trim();\n                  if (mediaType === '3' || mediaType === 'HDD') { mediaType = 'HD'; }\n                  if (mediaType === '4') { mediaType = 'SSD'; }\n                  if (mediaType === '5') { mediaType = 'SCM'; }\n                  if (mediaType === 'Unspecified' && (model.toLowerCase().indexOf('virtual') > -1 || model.toLowerCase().indexOf('vbox') > -1)) { mediaType = 'Virtual'; }\n                  if (size) {\n                    let i = util.findObjectByKey(result, 'serialNum', serialNum);\n                    if (i === -1 || serialNum === '') {\n                      i = util.findObjectByKey(result, 'name', name);\n                    }\n                    if (i != -1) {\n                      result[i].type = mediaType;\n                      result[i].interfaceType = interfaceType;\n                    }\n                  }\n                });\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              })\n              .catch(() => {\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.diskLayout = diskLayout;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// network.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. Network\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _network = {};\nlet _default_iface = '';\nlet _ifaces = {};\nlet _dhcpNics = [];\nlet _networkInterfaces = [];\nlet _mac = {};\nlet pathToIp;\n\nfunction getDefaultNetworkInterface() {\n\n  let ifaces = os.networkInterfaces();\n  let ifacename = '';\n  let ifacenameFirst = '';\n\n  let scopeid = 9999;\n\n  // fallback - \"first\" external interface (sorted by scopeid)\n  for (let dev in ifaces) {\n    if ({}.hasOwnProperty.call(ifaces, dev)) {\n      ifaces[dev].forEach(function (details) {\n        if (details && details.internal === false) {\n          ifacenameFirst = ifacenameFirst || dev; // fallback if no scopeid\n          if (details.scopeid && details.scopeid < scopeid) {\n            ifacename = dev;\n            scopeid = details.scopeid;\n          }\n        }\n      });\n    }\n  }\n  ifacename = ifacename || ifacenameFirst || '';\n\n  try {\n    if (_windows) {\n      // https://www.inetdaemon.com/tutorials/internet/ip/routing/default_route.shtml\n      let defaultIp = '';\n      const cmd = 'netstat -r';\n      const result = execSync(cmd);\n      const lines = result.toString().split(os.EOL);\n      lines.forEach(line => {\n        line = line.replace(/\\s+/g, ' ').trim();\n        if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !(/[a-zA-Z]/.test(line))) {\n          const parts = line.split(' ');\n          if (parts.length >= 5) {\n            defaultIp = parts[parts.length - 2];\n          }\n        }\n      });\n      if (defaultIp) {\n        for (let dev in ifaces) {\n          if ({}.hasOwnProperty.call(ifaces, dev)) {\n            ifaces[dev].forEach(function (details) {\n              if (details && details.address && details.address === defaultIp) {\n                ifacename = dev;\n              }\n            });\n          }\n        }\n      }\n    }\n    if (_linux) {\n      let cmd = 'ip route 2> /dev/null | grep default';\n      let result = execSync(cmd);\n      let parts = result.toString().split('\\n')[0].split(/\\s+/);\n      if (parts[0] === 'none' && parts[5]) {\n        ifacename = parts[5];\n      } else if (parts[4]) {\n        ifacename = parts[4];\n      }\n\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n    if (_darwin || _freebsd || _openbsd || _netbsd || _sunos) {\n      let cmd = '';\n      if (_linux) cmd = 'ip route 2> /dev/null | grep default | awk \\'{print $5}\\'';\n      if (_darwin) cmd = 'route -n get default 2>/dev/null | grep interface: | awk \\'{print $2}\\'';\n      if (_freebsd || _openbsd || _netbsd || _sunos) cmd = 'route get 0.0.0.0 | grep interface:';\n      let result = execSync(cmd);\n      ifacename = result.toString().split('\\n')[0];\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n  } catch (e) {\n    util.noop();\n  }\n  if (ifacename) _default_iface = ifacename;\n  return _default_iface;\n}\n\nexports.getDefaultNetworkInterface = getDefaultNetworkInterface;\n\nfunction getMacAddresses() {\n  let iface = '';\n  let mac = '';\n  let result = {};\n  if (_linux || _freebsd || _openbsd || _netbsd) {\n    if (typeof pathToIp === 'undefined') {\n      try {\n        const lines = execSync('which ip').toString().split('\\n');\n        if (lines.length && lines[0].indexOf(':') === -1 && lines[0].indexOf('/') === 0) {\n          pathToIp = lines[0];\n        } else {\n          pathToIp = '';\n        }\n      } catch (e) {\n        pathToIp = '';\n      }\n    }\n    try {\n      const cmd = 'export LC_ALL=C; ' + ((pathToIp) ? pathToIp + ' link show up' : '/sbin/ifconfig') + '; unset LC_ALL';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== ' ') {\n          if (pathToIp) {\n            let nextline = lines[i + 1].trim().split(' ');\n            if (nextline[0] === 'link/ether') {\n              iface = lines[i].split(' ')[1];\n              iface = iface.slice(0, iface.length - 1);\n              mac = nextline[1];\n            }\n          } else {\n            iface = lines[i].split(' ')[0];\n            mac = lines[i].split('HWaddr ')[1];\n          }\n\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n  if (_darwin) {\n    try {\n      const cmd = '/sbin/ifconfig';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== '\\t' && lines[i].indexOf(':') > 0) {\n          iface = lines[i].split(':')[0];\n        } else if (lines[i].indexOf('\\tether ') === 0) {\n          mac = lines[i].split('\\tether ')[1];\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n  return result;\n}\n\nfunction networkInterfaceDefault(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = getDefaultNetworkInterface();\n      if (callback) { callback(result); }\n      resolve(result);\n    });\n  });\n}\n\nexports.networkInterfaceDefault = networkInterfaceDefault;\n\n// --------------------------\n// NET - interfaces\n\nfunction parseLinesWindowsNics(sections, nconfigsections) {\n  let nics = [];\n  for (let i in sections) {\n    if ({}.hasOwnProperty.call(sections, i)) {\n\n      if (sections[i].trim() !== '') {\n\n        let lines = sections[i].trim().split('\\r\\n');\n        let linesNicConfig = nconfigsections[i].trim().split('\\r\\n');\n        let netEnabled = util.getValue(lines, 'NetEnabled', '=');\n\n        if (netEnabled !== '') {\n          const speed = parseInt(util.getValue(lines, 'speed', '=').trim(), 10) / 1000000;\n          nics.push({\n            mac: util.getValue(lines, 'MACAddress', '=').toLowerCase(),\n            dhcp: util.getValue(linesNicConfig, 'dhcpEnabled', '=').toLowerCase(),\n            name: util.getValue(lines, 'Name', '=').replace(/\\]/g, ')').replace(/\\[/g, '('),\n            netEnabled: netEnabled === 'TRUE',\n            speed: isNaN(speed) ? -1 : speed,\n            operstate: util.getValue(lines, 'NetConnectionStatus', '=') === '2' ? 'up' : 'down',\n            type: util.getValue(lines, 'AdapterTypeID', '=') === '9' ? 'wireless' : 'wired'\n          });\n        }\n      }\n    }\n  }\n  return nics;\n}\n\nfunction getWindowsNics() {\n  const cmd = util.getWmic() + ' nic get MACAddress, name, NetEnabled, Speed, NetConnectionStatus, AdapterTypeId /value';\n  const cmdnicconfig = util.getWmic() + ' nicconfig get dhcpEnabled /value';\n  try {\n    const nsections = execSync(cmd, util.execOptsWin).split(/\\n\\s*\\n/);\n    const nconfigsections = execSync(cmdnicconfig, util.execOptsWin).split(/\\n\\s*\\n/);\n    return (parseLinesWindowsNics(nsections, nconfigsections));\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWindowsDNSsuffixes() {\n\n  let iface = {};\n\n  let dnsSuffixes = {\n    primaryDNS: '',\n    exitCode: 0,\n    ifaces: [],\n  };\n\n  try {\n    const ipconfig = execSync('ipconfig /all', util.execOptsWin);\n    const ipconfigArray = ipconfig.split('\\r\\n\\r\\n');\n\n    ipconfigArray.forEach((element, index) => {\n\n      if (index == 1) {\n        const longPrimaryDNS = element.split('\\r\\n').filter((element) => {\n          return element.toUpperCase().includes('DNS');\n        });\n        const primaryDNS = longPrimaryDNS[0].substring(longPrimaryDNS[0].lastIndexOf(':') + 1);\n        dnsSuffixes.primaryDNS = primaryDNS.trim();\n        if (!dnsSuffixes.primaryDNS) dnsSuffixes.primaryDNS = 'Not defined';\n      }\n      if (index > 1) {\n        if (index % 2 == 0) {\n          const name = element.substring(element.lastIndexOf(' ') + 1).replace(':', '');\n          iface.name = name;\n        } else {\n          const connectionSpecificDNS = element.split('\\r\\n').filter((element) => {\n            return element.toUpperCase().includes('DNS');\n          });\n          const dnsSuffix = connectionSpecificDNS[0].substring(connectionSpecificDNS[0].lastIndexOf(':') + 1);\n          iface.dnsSuffix = dnsSuffix.trim();\n          dnsSuffixes.ifaces.push(iface);\n          iface = {};\n        }\n      }\n    });\n\n    return dnsSuffixes;\n  } catch (error) {\n    // console.log('An error occurred trying to bring the Connection-specific DNS suffix', error.message);\n    return {\n      primaryDNS: '',\n      exitCode: 0,\n      ifaces: [],\n    };\n  }\n}\n\nfunction getWindowsIfaceDNSsuffix(ifaces, ifacename) {\n  let dnsSuffix = '';\n  // Adding (.) to ensure ifacename compatibility when duplicated iface-names\n  const interfaceName = ifacename + '.';\n  try {\n    const connectionDnsSuffix = ifaces.filter((iface) => {\n      return interfaceName.includes(iface.name + '.');\n    }).map((iface) => iface.dnsSuffix);\n    if (connectionDnsSuffix[0]) {\n      dnsSuffix = connectionDnsSuffix[0];\n    }\n    if (!dnsSuffix) dnsSuffix = '';\n    return dnsSuffix;\n  } catch (error) {\n    // console.log('Error getting Connection-specific DNS suffix: ', error.message);\n    return 'Unknown';\n  }\n}\n\nfunction getWindowsWiredProfilesInformation() {\n  try {\n    const result = execSync('netsh lan show profiles', util.execOptsWin);\n    const profileList = result.split('\\r\\nProfile on interface');\n    return profileList;\n  } catch (error) {\n    if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n      return 'Disabled';\n    }\n    return [];\n  }\n}\n\nfunction getWindowsWirelessIfaceSSID(interfaceName) {\n  try {\n    const result = execSync(`netsh wlan show  interface name=\"${interfaceName}\" | findstr \"SSID\"`, util.execOptsWin);\n    const SSID = result.split('\\r\\n').shift();\n    const parseSSID = SSID.split(':').pop();\n    return parseSSID;\n  } catch (error) {\n    return 'Unknown';\n  }\n}\nfunction getWindowsIEEE8021x(connectionType, iface, ifaces) {\n  let i8021x = {\n    state: 'Unknown',\n    protocol: 'Unknown',\n  };\n\n  if (ifaces === 'Disabled') {\n    i8021x.state = 'Disabled';\n    i8021x.protocol = 'Not defined';\n    return i8021x;\n  }\n\n  if (connectionType == 'wired' && ifaces.length > 0) {\n    try {\n      // Get 802.1x information by interface name\n      const iface8021xInfo = ifaces.find((element) => {\n        return element.includes(iface + '\\r\\n');\n      });\n      const arrayIface8021xInfo = iface8021xInfo.split('\\r\\n');\n      const state8021x = arrayIface8021xInfo.find((element) => {\n        return element.includes('802.1x');\n      });\n\n      if (state8021x.includes('Disabled')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      } else if (state8021x.includes('Enabled')) {\n        const protocol8021x = arrayIface8021xInfo.find((element) => {\n          return element.includes('EAP');\n        });\n        i8021x.protocol = protocol8021x.split(':').pop();\n        i8021x.state = 'Enabled';\n      }\n    } catch (error) {\n      // console.log('Error getting wired information:', error);\n      return i8021x;\n    }\n  } else if (connectionType == 'wireless') {\n\n    let i8021xState = '';\n    let i8021xProtocol = '';\n\n\n\n    try {\n      const SSID = getWindowsWirelessIfaceSSID(iface);\n      if (SSID !== 'Unknown') {\n        i8021xState = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"802.1X\"`, util.execOptsWin);\n        i8021xProtocol = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"EAP\"`, util.execOptsWin);\n      }\n\n      if (i8021xState.includes(':') && i8021xProtocol.includes(':')) {\n        i8021x.state = i8021xState.split(':').pop();\n        i8021x.protocol = i8021xProtocol.split(':').pop();\n      }\n    } catch (error) {\n      // console.log('Error getting wireless information:', error);\n      if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      }\n      return i8021x;\n    }\n  }\n\n  return i8021x;\n}\n\nfunction splitSectionsNics(lines) {\n  const result = [];\n  let section = [];\n  lines.forEach(function (line) {\n    if (!line.startsWith('\\t') && !line.startsWith(' ')) {\n      if (section.length) {\n        result.push(section);\n        section = [];\n      }\n    }\n    section.push(line);\n  });\n  if (section.length) {\n    result.push(section);\n  }\n  return result;\n}\n\nfunction parseLinesDarwinNics(sections) {\n  let nics = [];\n  sections.forEach(section => {\n    let nic = {\n      iface: '',\n      mtu: -1,\n      mac: '',\n      ip6: '',\n      ip4: '',\n      speed: -1,\n      type: '',\n      operstate: '',\n      duplex: '',\n      internal: false\n    };\n    const first = section[0];\n    nic.iface = first.split(':')[0].trim();\n    let parts = first.split('> mtu');\n    nic.mtu = parts.length > 1 ? parseInt(parts[1], 10) : -1;\n    if (isNaN(nic.mtu)) {\n      nic.mtu = -1;\n    }\n    nic.internal = parts[0].toLowerCase().indexOf('loopback') > -1;\n    section.forEach(line => {\n      if (line.trim().startsWith('ether ')) {\n        nic.mac = line.split('ether ')[1].toLowerCase().trim();\n      }\n      if (line.trim().startsWith('inet6 ') && !nic.ip6) {\n        nic.ip6 = line.split('inet6 ')[1].toLowerCase().split('%')[0].split(' ')[0];\n      }\n      if (line.trim().startsWith('inet ') && !nic.ip4) {\n        nic.ip4 = line.split('inet ')[1].toLowerCase().split(' ')[0];\n      }\n    });\n    let speed = util.getValue(section, 'link rate');\n    nic.speed = speed ? parseFloat(speed) : -1;\n    if (nic.speed === -1) {\n      speed = util.getValue(section, 'uplink rate');\n      nic.speed = speed ? parseFloat(speed) : -1;\n      if (nic.speed > -1 && speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    } else {\n      if (speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    }\n    nic.type = util.getValue(section, 'type').toLowerCase().indexOf('wi-fi') > -1 ? 'wireless' : 'wired';\n    nic.operstate = util.getValue(section, 'status').toLowerCase().indexOf('active') > -1 ? 'up' : 'down';\n    nic.duplex = util.getValue(section, 'media').toLowerCase().indexOf('half-duplex') > -1 ? 'half' : 'full';\n    if (nic.ip6 || nic.ip4 || nic.mac) {\n      nics.push(nic);\n    }\n  });\n  return nics;\n}\n\nfunction getDarwinNics() {\n  const cmd = '/sbin/ifconfig -v';\n  try {\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    return (parseLinesDarwinNics(nsections));\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getLinuxIfaceConnectionName(interfaceName) {\n  const cmd = `nmcli device status 2>/dev/null | grep ${interfaceName}`;\n\n  try {\n    const result = execSync(cmd).toString();\n    const resultFormat = result.replace(/\\s+/g, ' ').trim();\n    const connectionNameLines = resultFormat.split(' ').slice(3);\n    const connectionName = connectionNameLines.join(' ');\n    return connectionName != '--' ? connectionName : '';\n  } catch (e) {\n    return '';\n  }\n}\n\nfunction checkLinuxDCHPInterfaces(file) {\n  let result = [];\n  try {\n    let cmd = `cat ${file} 2> /dev/null | grep 'iface\\\\|source'`;\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n\n    lines.forEach(line => {\n      const parts = line.replace(/\\s+/g, ' ').trim().split(' ');\n      if (parts.length >= 4) {\n        if (line.toLowerCase().indexOf(' inet ') >= 0 && line.toLowerCase().indexOf('dhcp') >= 0) {\n          result.push(parts[1]);\n        }\n      }\n      if (line.toLowerCase().includes('source')) {\n        let file = line.split(' ')[1];\n        result = result.concat(checkLinuxDCHPInterfaces(file));\n      }\n    });\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getLinuxDHCPNics() {\n  // alternate methods getting interfaces using DHCP\n  let cmd = 'ip a 2> /dev/null';\n  let result = [];\n  try {\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    result = (parseLinuxDHCPNics(nsections));\n  } catch (e) {\n    util.noop();\n  }\n  try {\n    result = checkLinuxDCHPInterfaces('/etc/network/interfaces');\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction parseLinuxDHCPNics(sections) {\n  const result = [];\n  if (sections && sections.length) {\n    sections.forEach(lines => {\n      if (lines && lines.length) {\n        const parts = lines[0].split(':');\n        if (parts.length > 2) {\n          for (let line of lines) {\n            if (line.indexOf(' inet ') >= 0 && line.indexOf(' dynamic ') >= 0) {\n              const parts2 = line.split(' ');\n              const nic = parts2[parts2.length - 1].trim();\n              result.push(nic);\n              break;\n            }\n          }\n        }\n      }\n    });\n  }\n  return result;\n}\n\nfunction getLinuxIfaceDHCPstatus(iface, connectionName, DHCPNics) {\n  let result = false;\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null \\| grep ipv4.method;`;\n    try {\n      const lines = execSync(cmd).toString();\n      const resultFormat = lines.replace(/\\s+/g, ' ').trim();\n\n      let dhcStatus = resultFormat.split(' ').slice(1).toString();\n      switch (dhcStatus) {\n        case 'auto':\n          result = true;\n          break;\n\n        default:\n          result = false;\n          break;\n      }\n      return result;\n    } catch (e) {\n      return (DHCPNics.indexOf(iface) >= 0);\n    }\n  } else {\n    return (DHCPNics.indexOf(iface) >= 0);\n  }\n}\n\nfunction getDarwinIfaceDHCPstatus(iface) {\n  let result = false;\n  const cmd = `ipconfig getpacket \"${iface}\" 2>/dev/null \\| grep lease_time;`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    if (lines.length && lines[0].startsWith('lease_time')) {\n      result = true;\n    }\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getLinuxIfaceDNSsuffix(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null \\| grep ipv4.dns-search;`;\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const dnsSuffix = resultFormat.split(' ').slice(1).toString();\n      return dnsSuffix == '--' ? 'Not defined' : dnsSuffix;\n    } catch (e) {\n      return 'Unknown';\n    }\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xAuth(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null \\| grep 802-1x.eap;`;\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const authenticationProtocol = resultFormat.split(' ').slice(1).toString();\n\n\n      return authenticationProtocol == '--' ? '' : authenticationProtocol;\n    } catch (e) {\n      return 'Not defined';\n    }\n  } else {\n    return 'Not defined';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xState(authenticationProtocol) {\n  if (authenticationProtocol) {\n    if (authenticationProtocol == 'Not defined') {\n      return 'Disabled';\n    }\n    return 'Enabled';\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction testVirtualNic(iface, ifaceName, mac) {\n  const virtualMacs = ['00:00:00:00:00:00', '00:03:FF', '00:05:69', '00:0C:29', '00:0F:4B', '00:0F:4B', '00:13:07', '00:13:BE', '00:15:5d', '00:16:3E', '00:1C:42', '00:21:F6', '00:21:F6', '00:24:0B', '00:24:0B', '00:50:56', '00:A0:B1', '00:E0:C8', '08:00:27', '0A:00:27', '18:92:2C', '16:DF:49', '3C:F3:92', '54:52:00', 'FC:15:97'];\n  if (mac) {\n    return virtualMacs.filter(item => { return mac.toUpperCase().toUpperCase().startsWith(item.substr(0, mac.length)); }).length > 0 ||\n      iface.toLowerCase().indexOf(' virtual ') > -1 ||\n      ifaceName.toLowerCase().indexOf(' virtual ') > -1 ||\n      iface.toLowerCase().indexOf('vethernet ') > -1 ||\n      ifaceName.toLowerCase().indexOf('vethernet ') > -1 ||\n      iface.toLowerCase().startsWith('veth') ||\n      ifaceName.toLowerCase().startsWith('veth') ||\n      iface.toLowerCase().startsWith('vboxnet') ||\n      ifaceName.toLowerCase().startsWith('vboxnet');\n  } else return false;\n}\n\nfunction networkInterfaces(callback, rescan = true) {\n\n  if (typeof callback === 'boolean') {\n    rescan = callback;\n    callback = null;\n  }\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let ifaces = os.networkInterfaces();\n\n      let result = [];\n      let nics = [];\n      let dnsSuffixes = [];\n      let nics8021xInfo = [];\n      // seperate handling in OSX\n      if (_darwin || _freebsd || _openbsd || _netbsd) {\n        nics = getDarwinNics();\n\n\n        nics.forEach(nic => {\n\n          if ({}.hasOwnProperty.call(ifaces, nic.iface)) {\n            ifaces[nic.iface].forEach(function (details) {\n              if (details.family === 'IPv4') {\n                nic.ip4subnet = details.netmask;\n              }\n              if (details.family === 'IPv6') {\n                nic.ip6subnet = details.netmask;\n              }\n            });\n          }\n\n          result.push({\n            iface: nic.iface,\n            ifaceName: nic.iface,\n            ip4: nic.ip4,\n            ip4subnet: nic.ip4subnet || '',\n            ip6: nic.ip6,\n            ip6subnet: nic.ip6subnet || '',\n            mac: nic.mac,\n            internal: nic.internal,\n            virtual: nic.internal ? false : testVirtualNic(nic.iface, nic.iface, nic.mac),\n            operstate: nic.operstate,\n            type: nic.type,\n            duplex: nic.duplex,\n            mtu: nic.mtu,\n            speed: nic.speed,\n            dhcp: getDarwinIfaceDHCPstatus(nic.iface),\n            dnsSuffix: '',\n            ieee8021xAuth: '',\n            ieee8021xState: '',\n            carrierChanges: 0\n          });\n        });\n        _networkInterfaces = result;\n        if (callback) { callback(result); }\n        resolve(result);\n      } else {\n        if ((JSON.stringify(ifaces) === JSON.stringify(_ifaces)) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) { callback(result); }\n          resolve(result);\n        } else {\n          _ifaces = Object.assign({}, ifaces);\n\n          if (_windows) {\n            nics = getWindowsNics();\n            nics.forEach(nic => {\n              let found = false;\n              Object.keys(ifaces).forEach(key => {\n                if (!found) {\n                  ifaces[key].forEach(value => {\n                    if (Object.keys(value).indexOf('mac') >= 0) {\n                      found = value['mac'] === nic.mac;\n                    }\n                  });\n                }\n              });\n\n              if (!found) {\n                ifaces[nic.name] = [{ mac: nic.mac }];\n              }\n            });\n\n            nics8021xInfo = getWindowsWiredProfilesInformation();\n            dnsSuffixes = getWindowsDNSsuffixes();\n          }\n          if (_linux) {\n            _dhcpNics = getLinuxDHCPNics();\n          }\n          for (let dev in ifaces) {\n            let ip4 = '';\n            let ip4subnet = '';\n            let ip6 = '';\n            let ip6subnet = '';\n            let mac = '';\n            let duplex = '';\n            let mtu = '';\n            let speed = -1;\n            let carrierChanges = 0;\n            let operstate = 'down';\n            let dhcp = false;\n            let dnsSuffix = '';\n            let ieee8021xAuth = '';\n            let ieee8021xState = '';\n            let type = '';\n\n            if ({}.hasOwnProperty.call(ifaces, dev)) {\n              let ifaceName = dev;\n              ifaces[dev].forEach(function (details) {\n                if (details.family === 'IPv4') {\n                  ip4 = details.address;\n                  ip4subnet = details.netmask;\n                }\n                if (details.family === 'IPv6') {\n                  if (!ip6 || ip6.match(/^fe80::/i)) {\n                    ip6 = details.address;\n                    ip6subnet = details.netmask;\n                  }\n                }\n                mac = details.mac;\n                // fallback due to https://github.com/nodejs/node/issues/13581 (node 8.1 - node 8.2)\n                if (mac.indexOf('00:00:0') > -1 && (_linux || _darwin) && parseInt(process.versions.node.split('.'), 10) === 8) {\n                  if (Object.keys(_mac).length === 0) {\n                    _mac = getMacAddresses();\n                  }\n                  mac = _mac[dev] || '';\n                }\n              });\n              if (_linux) {\n                let iface = dev.split(':')[0].trim().toLowerCase();\n                const cmd = `echo -n \"addr_assign_type: \"; cat /sys/class/net/${iface}/addr_assign_type 2>/dev/null; echo;\n            echo -n \"address: \"; cat /sys/class/net/${iface}/address 2>/dev/null; echo;\n            echo -n \"addr_len: \"; cat /sys/class/net/${iface}/addr_len 2>/dev/null; echo;\n            echo -n \"broadcast: \"; cat /sys/class/net/${iface}/broadcast 2>/dev/null; echo;\n            echo -n \"carrier: \"; cat /sys/class/net/${iface}/carrier 2>/dev/null; echo;\n            echo -n \"carrier_changes: \"; cat /sys/class/net/${iface}/carrier_changes 2>/dev/null; echo;\n            echo -n \"dev_id: \"; cat /sys/class/net/${iface}/dev_id 2>/dev/null; echo;\n            echo -n \"dev_port: \"; cat /sys/class/net/${iface}/dev_port 2>/dev/null; echo;\n            echo -n \"dormant: \"; cat /sys/class/net/${iface}/dormant 2>/dev/null; echo;\n            echo -n \"duplex: \"; cat /sys/class/net/${iface}/duplex 2>/dev/null; echo;\n            echo -n \"flags: \"; cat /sys/class/net/${iface}/flags 2>/dev/null; echo;\n            echo -n \"gro_flush_timeout: \"; cat /sys/class/net/${iface}/gro_flush_timeout 2>/dev/null; echo;\n            echo -n \"ifalias: \"; cat /sys/class/net/${iface}/ifalias 2>/dev/null; echo;\n            echo -n \"ifindex: \"; cat /sys/class/net/${iface}/ifindex 2>/dev/null; echo;\n            echo -n \"iflink: \"; cat /sys/class/net/${iface}/iflink 2>/dev/null; echo;\n            echo -n \"link_mode: \"; cat /sys/class/net/${iface}/link_mode 2>/dev/null; echo;\n            echo -n \"mtu: \"; cat /sys/class/net/${iface}/mtu 2>/dev/null; echo;\n            echo -n \"netdev_group: \"; cat /sys/class/net/${iface}/netdev_group 2>/dev/null; echo;\n            echo -n \"operstate: \"; cat /sys/class/net/${iface}/operstate 2>/dev/null; echo;\n            echo -n \"proto_down: \"; cat /sys/class/net/${iface}/proto_down 2>/dev/null; echo;\n            echo -n \"speed: \"; cat /sys/class/net/${iface}/speed 2>/dev/null; echo;\n            echo -n \"tx_queue_len: \"; cat /sys/class/net/${iface}/tx_queue_len 2>/dev/null; echo;\n            echo -n \"type: \"; cat /sys/class/net/${iface}/type 2>/dev/null; echo;\n            echo -n \"wireless: \"; cat /proc/net/wireless 2>/dev/null \\| grep ${iface}; echo;\n            echo -n \"wirelessspeed: \"; iw dev ${iface} link 2>&1 \\| grep bitrate; echo;`;\n\n                let lines = [];\n                try {\n                  lines = execSync(cmd).toString().split('\\n');\n                  const connectionName = getLinuxIfaceConnectionName(iface);\n                  dhcp = getLinuxIfaceDHCPstatus(iface, connectionName, _dhcpNics);\n                  dnsSuffix = getLinuxIfaceDNSsuffix(connectionName);\n                  ieee8021xAuth = getLinuxIfaceIEEE8021xAuth(connectionName);\n                  ieee8021xState = getLinuxIfaceIEEE8021xState(ieee8021xAuth);\n                } catch (e) {\n                  util.noop();\n                }\n                duplex = util.getValue(lines, 'duplex');\n                duplex = duplex.startsWith('cat') ? '' : duplex;\n                mtu = parseInt(util.getValue(lines, 'mtu'), 10);\n                let myspeed = parseInt(util.getValue(lines, 'speed'), 10);\n                speed = isNaN(myspeed) ? -1 : myspeed;\n                let wirelessspeed = util.getValue(lines, 'wirelessspeed').split('tx bitrate: ');\n                if (speed === -1 && wirelessspeed.length === 2) {\n                  myspeed = parseFloat(wirelessspeed[1]);\n                  speed = isNaN(myspeed) ? -1 : myspeed;\n                }\n                carrierChanges = parseInt(util.getValue(lines, 'carrier_changes'), 10);\n                operstate = util.getValue(lines, 'operstate');\n                type = operstate === 'up' ? (util.getValue(lines, 'wireless').trim() ? 'wireless' : 'wired') : 'unknown';\n                if (iface === 'lo' || iface.startsWith('bond')) { type = 'virtual'; }\n              }\n              if (_windows) {\n\n\n                dnsSuffix = getWindowsIfaceDNSsuffix(dnsSuffixes.ifaces, dev);\n                nics.forEach(detail => {\n                  if (detail.mac === mac) {\n                    ifaceName = detail.name;\n                    dhcp = detail.dhcp;\n                    operstate = detail.operstate;\n                    speed = detail.speed;\n                    type = detail.type;\n                  }\n                });\n\n                if (dev.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('802.11n') >= 0 || ifaceName.toLowerCase().indexOf('wireless') >= 0 || ifaceName.toLowerCase().indexOf('wi-fi') >= 0 || ifaceName.toLowerCase().indexOf('wifi') >= 0) {\n                  type = 'wireless';\n                }\n\n                const IEEE8021x = getWindowsIEEE8021x(type, dev, nics8021xInfo);\n                ieee8021xAuth = IEEE8021x.protocol;\n                ieee8021xState = IEEE8021x.state;\n              }\n              let internal = (ifaces[dev] && ifaces[dev][0]) ? ifaces[dev][0].internal : false;\n              if (dev.toLowerCase().indexOf('loopback') > -1 || ifaceName.toLowerCase().indexOf('loopback') > -1) {\n                internal = true;\n              }\n              const virtual = internal ? false : testVirtualNic(dev, ifaceName, mac);\n              result.push({\n                iface: dev,\n                ifaceName,\n                ip4,\n                ip4subnet,\n                ip6,\n                ip6subnet,\n                mac,\n                internal,\n                virtual,\n                operstate,\n                type,\n                duplex,\n                mtu,\n                speed,\n                dhcp,\n                dnsSuffix,\n                ieee8021xAuth,\n                ieee8021xState,\n                carrierChanges,\n              });\n            }\n          }\n          _networkInterfaces = result;\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkInterfaces = networkInterfaces;\n\n// --------------------------\n// NET - Speed\n\nfunction calcNetworkSpeed(iface, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors) {\n  let result = {\n    iface,\n    operstate,\n    rx_bytes,\n    rx_dropped,\n    rx_errors,\n    tx_bytes,\n    tx_dropped,\n    tx_errors,\n    rx_sec: -1,\n    tx_sec: -1,\n    ms: 0\n  };\n\n  if (_network[iface] && _network[iface].ms) {\n    result.ms = Date.now() - _network[iface].ms;\n    result.rx_sec = (rx_bytes - _network[iface].rx_bytes) >= 0 ? (rx_bytes - _network[iface].rx_bytes) / (result.ms / 1000) : 0;\n    result.tx_sec = (tx_bytes - _network[iface].tx_bytes) >= 0 ? (tx_bytes - _network[iface].tx_bytes) / (result.ms / 1000) : 0;\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = result.rx_sec;\n    _network[iface].tx_sec = result.tx_sec;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = result.ms;\n    _network[iface].operstate = operstate;\n  } else {\n    if (!_network[iface]) _network[iface] = {};\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = -1;\n    _network[iface].tx_sec = -1;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = 0;\n    _network[iface].operstate = operstate;\n  }\n  return result;\n}\n\nfunction networkStats(ifaces, callback) {\n\n  let ifacesArray = [];\n  // fallback - if only callback is given\n  if (util.isFunction(ifaces) && !callback) {\n    callback = ifaces;\n    ifacesArray = [getDefaultNetworkInterface()];\n  } else {\n    ifaces = ifaces || getDefaultNetworkInterface();\n    ifaces = ifaces.trim().toLowerCase().replace(/,+/g, '|');\n    ifacesArray = ifaces.split('|');\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const result = [];\n\n      const workload = [];\n      if (ifacesArray.length && ifacesArray[0].trim() === '*') {\n        ifacesArray = [];\n        networkInterfaces(false).then(allIFaces => {\n          for (let iface of allIFaces) {\n            ifacesArray.push(iface.iface);\n          }\n          networkStats(ifacesArray.join(',')).then(result => {\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        });\n      } else {\n        for (let iface of ifacesArray) {\n          workload.push(networkStatsSingle(iface.trim()));\n        }\n        if (workload.length) {\n          Promise.all(\n            workload\n          ).then(data => {\n            if (callback) { callback(data); }\n            resolve(data);\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nfunction networkStatsSingle(iface) {\n\n  function parseLinesWindowsPerfData(sections) {\n    let perfData = [];\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\r\\n');\n          perfData.push({\n            name: util.getValue(lines, 'Name', '=').replace(/[()\\[\\] ]+/g, '').replace('#', '_').toLowerCase(),\n            rx_bytes: parseInt(util.getValue(lines, 'BytesReceivedPersec', '='), 10),\n            rx_errors: parseInt(util.getValue(lines, 'PacketsReceivedErrors', '='), 10),\n            rx_dropped: parseInt(util.getValue(lines, 'PacketsReceivedDiscarded', '='), 10),\n            tx_bytes: parseInt(util.getValue(lines, 'BytesSentPersec', '='), 10),\n            tx_errors: parseInt(util.getValue(lines, 'PacketsOutboundErrors', '='), 10),\n            tx_dropped: parseInt(util.getValue(lines, 'PacketsOutboundDiscarded', '='), 10)\n          });\n        }\n      }\n    }\n    return perfData;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const ifaceSanitized = util.sanitizeShellString(iface);\n\n      let result = {\n        iface: ifaceSanitized,\n        operstate: 'unknown',\n        rx_bytes: 0,\n        rx_dropped: 0,\n        rx_errors: 0,\n        tx_bytes: 0,\n        tx_dropped: 0,\n        tx_errors: 0,\n        rx_sec: -1,\n        tx_sec: -1,\n        ms: 0\n      };\n\n      let operstate = 'unknown';\n      let rx_bytes = 0;\n      let tx_bytes = 0;\n      let rx_dropped = 0;\n      let rx_errors = 0;\n      let tx_dropped = 0;\n      let tx_errors = 0;\n\n      let cmd, lines, stats;\n      if (!_network[ifaceSanitized] || (_network[ifaceSanitized] && !_network[ifaceSanitized].ms) || (_network[ifaceSanitized] && _network[ifaceSanitized].ms && Date.now() - _network[ifaceSanitized].ms >= 500)) {\n        if (_linux) {\n          if (fs.existsSync('/sys/class/net/' + ifaceSanitized)) {\n            cmd =\n              'cat /sys/class/net/' + ifaceSanitized + '/operstate; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_bytes; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_bytes; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_dropped; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_errors; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_dropped; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_errors; ';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                operstate = lines[0].trim();\n                rx_bytes = parseInt(lines[1], 10);\n                tx_bytes = parseInt(lines[2], 10);\n                rx_dropped = parseInt(lines[3], 10);\n                rx_errors = parseInt(lines[4], 10);\n                tx_dropped = parseInt(lines[5], 10);\n                tx_errors = parseInt(lines[6], 10);\n\n                result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n\n              }\n              resolve(result);\n            });\n          } else {\n            resolve(result);\n          }\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'netstat -ibndI ' + ifaceSanitized;\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n              for (let i = 1; i < lines.length; i++) {\n                const line = lines[i].replace(/ +/g, ' ').split(' ');\n                if (line && line[0] && line[7] && line[10]) {\n                  rx_bytes = rx_bytes + parseInt(line[7]);\n                  if (line[6].trim() !== '-') { rx_dropped = rx_dropped + parseInt(line[6]); }\n                  if (line[5].trim() !== '-') { rx_errors = rx_errors + parseInt(line[5]); }\n                  tx_bytes = tx_bytes + parseInt(line[10]);\n                  if (line[12].trim() !== '-') { tx_dropped = tx_dropped + parseInt(line[12]); }\n                  if (line[9].trim() !== '-') { tx_errors = tx_errors + parseInt(line[9]); }\n                  operstate = 'up';\n                }\n              }\n              result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n            }\n            resolve(result);\n          });\n        }\n        if (_darwin) {\n          cmd = 'ifconfig ' + ifaceSanitized + ' | grep \"status\"';\n          exec(cmd, function (error, stdout) {\n            result.operstate = (stdout.toString().split(':')[1] || '').trim();\n            result.operstate = (result.operstate || '').toLowerCase();\n            result.operstate = (result.operstate === 'active' ? 'up' : (result.operstate === 'inactive' ? 'down' : 'unknown'));\n            cmd = 'netstat -bdI ' + ifaceSanitized;\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                // if there is less than 2 lines, no information for this interface was found\n                if (lines.length > 1 && lines[1].trim() !== '') {\n                  // skip header line\n                  // use the second line because it is tied to the NIC instead of the ipv4 or ipv6 address\n                  stats = lines[1].replace(/ +/g, ' ').split(' ');\n                  rx_bytes = parseInt(stats[6]);\n                  rx_dropped = parseInt(stats[11]);\n                  rx_errors = parseInt(stats[5]);\n                  tx_bytes = parseInt(stats[9]);\n                  tx_dropped = parseInt(stats[11]);\n                  tx_errors = parseInt(stats[8]);\n\n                  result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, result.operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n                }\n              }\n              resolve(result);\n            });\n          });\n        }\n        if (_windows) {\n          let perfData = [];\n          let ifaceName = ifaceSanitized;\n\n          // Performance Data\n          util.wmic('path Win32_PerfRawData_Tcpip_NetworkInterface Get name,BytesReceivedPersec,BytesSentPersec,BytesTotalPersec,PacketsOutboundDiscarded,PacketsOutboundErrors,PacketsReceivedDiscarded,PacketsReceivedErrors /value').then((stdout, error) => {\n            if (!error) {\n              const psections = stdout.toString().split(/\\n\\s*\\n/);\n              perfData = parseLinesWindowsPerfData(psections);\n            }\n\n            // Network Interfaces\n            networkInterfaces(false).then(interfaces => {\n              // get bytes sent, received from perfData by name\n              rx_bytes = 0;\n              tx_bytes = 0;\n              perfData.forEach(detail => {\n                interfaces.forEach(det => {\n                  if ((det.iface.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.mac.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ip4.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ip6.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ifaceName.replace(/[()\\[\\] ]+/g, '').replace('#', '_').toLowerCase() === ifaceSanitized.replace(/[()\\[\\] ]+/g, '').replace('#', '_').toLowerCase()) &&\n                    (det.ifaceName.replace(/[()\\[\\] ]+/g, '').replace('#', '_').toLowerCase() === detail.name)) {\n                    ifaceName = det.iface;\n                    rx_bytes = detail.rx_bytes;\n                    rx_dropped = detail.rx_dropped;\n                    rx_errors = detail.rx_errors;\n                    tx_bytes = detail.tx_bytes;\n                    tx_dropped = detail.tx_dropped;\n                    tx_errors = detail.tx_errors;\n                    operstate = det.operstate;\n                  }\n                });\n              });\n              if (rx_bytes && tx_bytes) {\n                result = calcNetworkSpeed(ifaceName, parseInt(rx_bytes), parseInt(tx_bytes), operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n              }\n              resolve(result);\n            });\n          });\n        }\n      } else {\n        result.rx_bytes = _network[ifaceSanitized].rx_bytes;\n        result.tx_bytes = _network[ifaceSanitized].tx_bytes;\n        result.rx_sec = _network[ifaceSanitized].rx_sec;\n        result.tx_sec = _network[ifaceSanitized].tx_sec;\n        result.ms = _network[ifaceSanitized].last_ms;\n        result.operstate = _network[ifaceSanitized].operstate;\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.networkStats = networkStats;\n\n// --------------------------\n// NET - connections (sockets)\n\nfunction networkConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'export LC_ALL=C; netstat -tunap | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL';\n        if (_freebsd || _openbsd || _netbsd) cmd = 'export LC_ALL=C; netstat -na | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          if (!error && (lines.length > 1 || lines[0] != '')) {\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n              if (line.length >= 7) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split(':');\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join(':');\n                }\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split(':');\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join(':');\n                }\n                let connstate = line[5];\n                // if (connstate === 'VERBUNDEN') connstate = 'ESTABLISHED';\n                let proc = line[6].split('/');\n\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localaddress: localip,\n                    localport: localport,\n                    peeraddress: peerip,\n                    peerport: peerport,\n                    state: connstate,\n                    pid: proc[0] && proc[0] !== '-' ? parseInt(proc[0], 10) : -1,\n                    process: proc[1] ? proc[1].split(' ')[0] : ''\n                  });\n                }\n              }\n            });\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          } else {\n            cmd = 'ss -tunap | grep \"ESTAB\\\\|SYN-SENT\\\\|SYN-RECV\\\\|FIN-WAIT1\\\\|FIN-WAIT2\\\\|TIME-WAIT\\\\|CLOSE\\\\|CLOSE-WAIT\\\\|LAST-ACK\\\\|LISTEN\\\\|CLOSING\"';\n            exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(function (line) {\n                  line = line.replace(/ +/g, ' ').split(' ');\n                  if (line.length >= 6) {\n                    let localip = line[4];\n                    let localport = '';\n                    let localaddress = line[4].split(':');\n                    if (localaddress.length > 1) {\n                      localport = localaddress[localaddress.length - 1];\n                      localaddress.pop();\n                      localip = localaddress.join(':');\n                    }\n                    let peerip = line[5];\n                    let peerport = '';\n                    let peeraddress = line[5].split(':');\n                    if (peeraddress.length > 1) {\n                      peerport = peeraddress[peeraddress.length - 1];\n                      peeraddress.pop();\n                      peerip = peeraddress.join(':');\n                    }\n                    let connstate = line[1];\n                    if (connstate === 'ESTAB') connstate = 'ESTABLISHED';\n                    if (connstate === 'TIME-WAIT') connstate = 'TIME_WAIT';\n                    let pid = -1;\n                    let process = '';\n                    if (line.length >= 7 && line[6].indexOf('users:') > -1) {\n                      let proc = line[6].replace('users:((\"', '').replace(/\"/g, '').split(',');\n                      if (proc.length > 2) {\n                        process = proc[0].split(' ')[0];\n                        pid = parseInt(proc[1], 10);\n                      }\n                    }\n                    if (connstate) {\n                      result.push({\n                        protocol: line[0],\n                        localaddress: localip,\n                        localport: localport,\n                        peeraddress: peerip,\n                        peerport: peerport,\n                        state: connstate,\n                        pid,\n                        process\n                      });\n                    }\n                  }\n                });\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          }\n        });\n      }\n      if (_darwin) {\n        let cmd = 'netstat -natv | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          if (!error) {\n\n            let lines = stdout.toString().split('\\n');\n\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n              if (line.length >= 8) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split('.');\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join('.');\n                }\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split('.');\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join('.');\n                }\n                let connstate = line[5];\n                let pid = parseInt(line[8], 10);\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localaddress: localip,\n                    localport: localport,\n                    peeraddress: peerip,\n                    peerport: peerport,\n                    state: connstate,\n                    pid: pid,\n                    process: ''\n                  });\n                }\n              }\n            });\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      }\n      if (_windows) {\n        let cmd = 'netstat -nao';\n        try {\n          exec(cmd, util.execOptsWin, function (error, stdout) {\n            if (!error) {\n\n              let lines = stdout.toString().split('\\r\\n');\n\n              lines.forEach(function (line) {\n                line = line.trim().replace(/ +/g, ' ').split(' ');\n                if (line.length >= 4) {\n                  let localip = line[1];\n                  let localport = '';\n                  let localaddress = line[1].split(':');\n                  if (localaddress.length > 1) {\n                    localport = localaddress[localaddress.length - 1];\n                    localaddress.pop();\n                    localip = localaddress.join(':');\n                  }\n                  let peerip = line[2];\n                  let peerport = '';\n                  let peeraddress = line[2].split(':');\n                  if (peeraddress.length > 1) {\n                    peerport = peeraddress[peeraddress.length - 1];\n                    peeraddress.pop();\n                    peerip = peeraddress.join(':');\n                  }\n                  let pid = line[4];\n                  let connstate = line[3];\n                  if (connstate === 'HERGESTELLT') connstate = 'ESTABLISHED';\n                  if (connstate.startsWith('ABH')) connstate = 'LISTEN';\n                  if (connstate === 'SCHLIESSEN_WARTEN') connstate = 'CLOSE_WAIT';\n                  if (connstate === 'WARTEND') connstate = 'TIME_WAIT';\n                  if (connstate === 'SYN_GESENDET') connstate = 'SYN_SENT';\n\n                  if (connstate === 'LISTENING') connstate = 'LISTEN';\n                  if (connstate === 'SYN_RECEIVED') connstate = 'SYN_RECV';\n                  if (connstate === 'FIN_WAIT_1') connstate = 'FIN_WAIT1';\n                  if (connstate === 'FIN_WAIT_2') connstate = 'FIN_WAIT2';\n                  if (connstate) {\n                    result.push({\n                      protocol: line[0].toLowerCase(),\n                      localaddress: localip,\n                      localport: localport,\n                      peeraddress: peerip,\n                      peerport: peerport,\n                      state: connstate,\n                      pid,\n                      process: ''\n                    });\n                  }\n                }\n              });\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkConnections = networkConnections;\n\nfunction networkGatewayDefault(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'ip route get 1';\n        try {\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              const line = lines && lines[0] ? lines[0] : '';\n              let parts = line.split(' via ');\n              if (parts && parts[1]) {\n                parts = parts[1].split(' ');\n                result = parts[0];\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_darwin) {\n        let cmd = 'route -n get default';\n        try {\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n').map(line => line.trim());\n              result = util.getValue(lines, 'gateway');\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_windows) {\n        try {\n          exec('netstat -r', util.execOptsWin, function (error, stdout) {\n            const lines = stdout.toString().split(os.EOL);\n            lines.forEach(line => {\n              line = line.replace(/\\s+/g, ' ').trim();\n              if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !(/[a-zA-Z]/.test(line))) {\n                const parts = line.split(' ');\n                if (parts.length >= 5 && (parts[parts.length - 3]).indexOf('.') > -1) {\n                  result = parts[parts.length - 3];\n                }\n              }\n            });\n            if (!result) {\n              util.powerShell('Get-CimInstance -ClassName Win32_IP4RouteTable | Where-Object { $_.Destination -eq \\'0.0.0.0\\' -and $_.Mask -eq \\'0.0.0.0\\' }')\n                .then(data => {\n                  let lines = data.toString().split('\\r\\n');\n                  if (lines.length > 1 && !result) {\n                    result = util.getValue(lines, 'NextHop');\n                    if (callback) {\n                      callback(result);\n                    }\n                    resolve(result);\n                    // } else {\n                    //   exec('ipconfig', util.execOptsWin, function (error, stdout) {\n                    //     let lines = stdout.toString().split('\\r\\n');\n                    //     lines.forEach(function (line) {\n                    //       line = line.trim().replace(/\\. /g, '');\n                    //       line = line.trim().replace(/ +/g, '');\n                    //       const parts = line.split(':');\n                    //       if ((parts[0].toLowerCase().startsWith('standardgate') || parts[0].toLowerCase().indexOf('gateway') > -1 || parts[0].toLowerCase().indexOf('enlace') > -1) && parts[1]) {\n                    //         result = parts[1];\n                    //       }\n                    //     });\n                    //     if (callback) { callback(result); }\n                    //     resolve(result);\n                    //   });\n                  }\n                });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkGatewayDefault = networkGatewayDefault;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// wifi.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. wifi\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\n\nfunction wifiDBFromQuality(quality) {\n  return (parseFloat(quality) / 2 - 100);\n}\n\nfunction wifiQualityFromDB(db) {\n  const result = 2 * (parseFloat(db) + 100);\n  return result <= 100 ? result : 100;\n}\n\nfunction wifiFrequencyFromChannel(channel) {\n  const frequencies = {\n    1: 2412,\n    2: 2417,\n    3: 2422,\n    4: 2427,\n    5: 2432,\n    6: 2437,\n    7: 2442,\n    8: 2447,\n    9: 2452,\n    10: 2457,\n    11: 2462,\n    12: 2467,\n    13: 2472,\n    14: 2484,\n    32: 5160,\n    34: 5170,\n    36: 5180,\n    38: 5190,\n    40: 5200,\n    42: 5210,\n    44: 5220,\n    46: 5230,\n    48: 5240,\n    50: 5250,\n    52: 5260,\n    54: 5270,\n    56: 5280,\n    58: 5290,\n    60: 5300,\n    62: 5310,\n    64: 5320,\n    68: 5340,\n    96: 5480,\n    100: 5500,\n    102: 5510,\n    104: 5520,\n    106: 5530,\n    108: 5540,\n    110: 5550,\n    112: 5560,\n    114: 5570,\n    116: 5580,\n    118: 5590,\n    120: 5600,\n    122: 5610,\n    124: 5620,\n    126: 5630,\n    128: 5640,\n    132: 5660,\n    134: 5670,\n    136: 5680,\n    138: 5690,\n    140: 5700,\n    142: 5710,\n    144: 5720,\n    149: 5745,\n    151: 5755,\n    153: 5765,\n    155: 5775,\n    157: 5785,\n    159: 5795,\n    161: 5805,\n    165: 5825,\n    169: 5845,\n    173: 5865,\n    183: 4915,\n    184: 4920,\n    185: 4925,\n    187: 4935,\n    188: 4940,\n    189: 4945,\n    192: 4960,\n    196: 4980\n  };\n  return {}.hasOwnProperty.call(frequencies, channel) ? frequencies[channel] : -1;\n}\n\nfunction wifiNetworks(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        let cmd = 'nmcli --terse --fields active,ssid,bssid,mode,chan,freq,signal,security,wpa-flags,rsn-flags device wifi list 2>/dev/null';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n\n          const parts = stdout.toString().split('ACTIVE:');\n          parts.shift();\n          parts.forEach(part => {\n            part = 'ACTIVE:' + part;\n            const lines = part.split(os.EOL);\n            const channel = util.getValue(lines, 'CHAN');\n            const frequency = util.getValue(lines, 'FREQ').toLowerCase().replace('mhz', '').trim();\n            const security = util.getValue(lines, 'SECURITY').replace('(', '').replace(')', '');\n            const wpaFlags = util.getValue(lines, 'WPA-FLAGS').replace('(', '').replace(')', '');\n            const rsnFlags = util.getValue(lines, 'RSN-FLAGS').replace('(', '').replace(')', '');\n            result.push({\n              ssid: util.getValue(lines, 'SSID'),\n              bssid: util.getValue(lines, 'BSSID'),\n              mode: util.getValue(lines, 'MODE'),\n              channel: channel ? parseInt(channel, 10) : -1,\n              frequency: frequency ? parseInt(frequency, 10) : -1,\n              signalLevel: wifiDBFromQuality(util.getValue(lines, 'SIGNAL')),\n              quality: parseFloat(util.getValue(lines, 'SIGNAL')),\n              security: security && security !== 'none' ? security.split(' ') : [],\n              wpaFlags: wpaFlags && wpaFlags !== 'none' ? wpaFlags.split(' ') : [],\n              rsnFlags: rsnFlags && rsnFlags !== 'none' ? rsnFlags.split(' ') : []\n            });\n          });\n\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_darwin) {\n        let cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          const lines = stdout.toString().split(os.EOL);\n          if (lines && lines.length > 1) {\n            const parsedhead = util.parseHead(lines[0], 1);\n            if (parsedhead.length >= 7) {\n              lines.shift();\n              lines.forEach(line => {\n                if (line.trim()) {\n                  const channelStr = line.substring(parsedhead[3].from, parsedhead[3].to).trim();\n                  const channel = channelStr ? parseInt(channelStr, 10) : -1;\n                  const signalLevel = line.substring(parsedhead[2].from, parsedhead[2].to).trim();\n                  const securityAll = line.substring(parsedhead[6].from, 1000).trim().split(' ');\n                  let security = [];\n                  let wpaFlags = [];\n                  securityAll.forEach(securitySingle => {\n                    if (securitySingle.indexOf('(') > 0) {\n                      const parts = securitySingle.split('(');\n                      security.push(parts[0]);\n                      wpaFlags = wpaFlags.concat(parts[1].replace(')', '').split(','));\n                    }\n                  });\n                  wpaFlags = Array.from(new Set(wpaFlags));\n                  result.push({\n                    ssid: line.substring(parsedhead[0].from, parsedhead[0].to).trim(),\n                    bssid: line.substring(parsedhead[1].from, parsedhead[1].to).trim(),\n                    mode: '',\n                    channel,\n                    frequency: wifiFrequencyFromChannel(channel),\n                    signalLevel: signalLevel ? parseInt(signalLevel, 10) : -1,\n                    quality: wifiQualityFromDB(signalLevel),\n                    security,\n                    wpaFlags,\n                    rsnFlags: []\n                  });\n                }\n              });\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'chcp 65001 && netsh wlan show networks mode=Bssid';\n        exec(cmd, util.execOptsWin, function (error, stdout) {\n\n          const parts = stdout.toString('utf8').split(os.EOL + os.EOL + 'SSID ');\n          parts.shift();\n\n          parts.forEach(part => {\n            const lines = part.split(os.EOL);\n            if (lines && lines.length >= 8 && lines[0].indexOf(':') >= 0) {\n              let bssid = lines[4].split(':');\n              bssid.shift();\n              bssid = bssid.join(':').trim();\n              const channel = lines[7].split(':').pop().trim();\n              const quality = lines[5].split(':').pop().trim();\n              result.push({\n                ssid: lines[0].split(':').pop().trim(),\n                bssid,\n                mode: '',\n                channel: channel ? parseInt(channel, 10) : -1,\n                frequency: wifiFrequencyFromChannel(channel),\n                signalLevel: wifiDBFromQuality(quality),\n                quality: quality ? parseInt(quality, 10) : -1,\n                security: [lines[2].split(':').pop().trim()],\n                wpaFlags: [lines[3].split(':').pop().trim()],\n                rsnFlags: []\n              });\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiNetworks = wifiNetworks;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// processes.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 10. Processes\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst _processes_cpu = {\n  all: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _services_cpu = {\n  all: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _process_cpu = {\n  all: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\n\nconst _winStatusValues = {\n  '0': 'unknown',\n  '1': 'other',\n  '2': 'ready',\n  '3': 'running',\n  '4': 'blocked',\n  '5': 'suspended blocked',\n  '6': 'suspended ready',\n  '7': 'terminated',\n  '8': 'stopped',\n  '9': 'growing',\n};\n\n\nfunction parseTimeWin(time) {\n  time = time || '';\n  if (time) {\n    return (time.substr(0, 4) + '-' + time.substr(4, 2) + '-' + time.substr(6, 2) + ' ' + time.substr(8, 2) + ':' + time.substr(10, 2) + ':' + time.substr(12, 2));\n  } else {\n    return '';\n  }\n}\n\nfunction parseTimeUnix(time) {\n  let result = time;\n  let parts = time.replace(/ +/g, ' ').split(' ');\n  if (parts.length === 5) {\n    result = parts[4] + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(parts[1].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + parts[2]).slice(-2) + ' ' + parts[3];\n  }\n  return result;\n}\n\n// --------------------------\n// PS - services\n// pass a comma separated string with services to check (mysql, apache, postgresql, ...)\n// this function gives an array back, if the services are running.\n\nfunction services(srv, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(srv) && !callback) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (srv) {\n        let srvString = util.sanitizeShellString(srv);\n        srvString = srvString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n        if (srvString === '') {\n          srvString = '*';\n        }\n        let srvs = srvString.split('|');\n        let result = [];\n        let dataSrv = [];\n        let allSrv = [];\n\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n          if ((_linux || _freebsd || _openbsd || _netbsd) && srvString === '*') {\n            srvString = '';\n            let tmpsrv = execSync('service --status-all 2> /dev/null').toString().split('\\n');\n            for (const s of tmpsrv) {\n              const parts = s.split(']');\n              if (parts.length === 2) {\n                srvString += (srvString !== '' ? '|' : '') + parts[1].trim();\n                allSrv.push({ name: parts[1].trim(), running: parts[0].indexOf('+') > 0 });\n              }\n            }\n            srvs = srvString.split('|');\n          }\n          let comm = (_darwin) ? 'ps -caxo pcpu,pmem,pid,command' : 'ps -axo pcpu,pmem,pid,command';\n          if (srvString !== '' && srvs.length > 0) {\n            exec(comm + ' | grep -v grep | grep -iE \"' + srvString + '\"', { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                srvs.forEach(function (srv) {\n                  let ps;\n                  if (_darwin) {\n                    ps = lines.filter(function (e) {\n                      return (e.toLowerCase().indexOf(srv) !== -1);\n                    });\n\n                  } else {\n                    ps = lines.filter(function (e) {\n                      return (e.toLowerCase().indexOf(' ' + srv + ':') !== -1) || (e.toLowerCase().indexOf('/' + srv) !== -1);\n                    });\n                  }\n                  let singleSrv = allSrv.filter(item => { return item.name === srv; });\n                  const pids = [];\n                  for (const p of ps) {\n                    const pid = p.trim().split(' ')[2];\n                    if (pid) {\n                      pids.push(parseInt(pid, 10));\n                    }\n                  }\n                  result.push({\n                    name: srv,\n                    running: (allSrv.length && singleSrv.length ? singleSrv[0].running : ps.length > 0),\n                    startmode: '',\n                    pids: pids,\n                    pcpu: parseFloat((ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[0]);\n                    }, 0)).toFixed(2)),\n                    pmem: parseFloat((ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[1]);\n                    }, 0)).toFixed(2))\n                  });\n                });\n                if (_linux) {\n                  // calc process_cpu - ps is not accurate in linux!\n                  let cmd = 'cat /proc/stat | grep \"cpu \"';\n                  for (let i in result) {\n                    for (let j in result[i].pids) {\n                      cmd += (';cat /proc/' + result[i].pids[j] + '/stat');\n                    }\n                  }\n                  exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                    let curr_processes = stdout.toString().split('\\n');\n\n                    // first line (all - /proc/stat)\n                    let all = parseProcStat(curr_processes.shift());\n\n                    // process\n                    let list_new = {};\n                    let resultProcess = {};\n                    for (let i = 0; i < curr_processes.length; i++) {\n                      resultProcess = calcProcStatLinux(curr_processes[i], all, _services_cpu);\n\n                      if (resultProcess.pid) {\n                        let listPos = -1;\n                        for (let i in result) {\n                          for (let j in result[i].pids) {\n                            if (parseInt(result[i].pids[j]) === parseInt(resultProcess.pid)) {\n                              listPos = i;\n                            }\n                          }\n                        }\n                        if (listPos >= 0) {\n                          result[listPos].pcpu += resultProcess.pcpuu + resultProcess.pcpus;\n                        }\n\n                        // save new values\n                        list_new[resultProcess.pid] = {\n                          pcpuu: resultProcess.pcpuu,\n                          pcpus: resultProcess.pcpus,\n                          utime: resultProcess.utime,\n                          stime: resultProcess.stime,\n                          cutime: resultProcess.cutime,\n                          cstime: resultProcess.cstime\n                        };\n                      }\n                    }\n\n                    // store old values\n                    _services_cpu.all = all;\n                    // _services_cpu.list = list_new;\n                    _services_cpu.list = Object.assign({}, list_new);\n                    _services_cpu.ms = Date.now() - _services_cpu.ms;\n                    // _services_cpu.result = result;\n                    _services_cpu.result = Object.assign({}, result);\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              } else {\n                exec('ps -o comm | grep -v grep | egrep \"' + srvString + '\"', { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  if (!error) {\n                    let lines = stdout.toString().replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                    srvs.forEach(function (srv) {\n                      let ps = lines.filter(function (e) {\n                        return e.indexOf(srv) !== -1;\n                      });\n                      result.push({\n                        name: srv,\n                        running: ps.length > 0,\n                        startmode: '',\n                        pcpu: 0,\n                        pmem: 0\n                      });\n                    });\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  } else {\n                    srvs.forEach(function (srv) {\n                      result.push({\n                        name: srv,\n                        running: false,\n                        startmode: '',\n                        pcpu: 0,\n                        pmem: 0\n                      });\n                    });\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  }\n                });\n              }\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n        if (_windows) {\n          try {\n            util.wmic('service get /value').then((stdout, error) => {\n              if (!error) {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n                for (let i = 0; i < serviceSections.length; i++) {\n                  if (serviceSections[i].trim() !== '') {\n                    let lines = serviceSections[i].trim().split('\\r\\n');\n                    let srvName = util.getValue(lines, 'Name', '=', true).toLowerCase();\n                    let started = util.getValue(lines, 'Started', '=', true);\n                    let startMode = util.getValue(lines, 'StartMode', '=', true);\n                    let pid = util.getValue(lines, 'ProcessId', '=', true);\n                    if (srvString === '*' || srvs.indexOf(srvName) >= 0) {\n                      result.push({\n                        name: srvName,\n                        running: (started === 'TRUE'),\n                        startmode: startMode,\n                        pids: [pid],\n                        pcpu: 0,\n                        pmem: 0\n                      });\n                      dataSrv.push(srvName);\n                    }\n                  }\n                }\n                if (srvString !== '*') {\n                  let srvsMissing = srvs.filter(function (e) {\n                    return dataSrv.indexOf(e) === -1;\n                  });\n                  srvsMissing.forEach(function (srvName) {\n                    result.push({\n                      name: srvName,\n                      running: false,\n                      startmode: '',\n                      pids: [],\n                      pcpu: 0,\n                      pmem: 0\n                    });\n                  });\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              } else {\n                srvs.forEach(function (srvName) {\n                  result.push({\n                    name: srvName,\n                    running: false,\n                    startmode: '',\n                    pcpu: 0,\n                    pmem: 0\n                  });\n                });\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n      } else {\n        if (callback) { callback({}); }\n        resolve({});\n      }\n    });\n  });\n}\n\nexports.services = services;\n\nfunction parseProcStat(line) {\n  let parts = line.replace(/ +/g, ' ').split(' ');\n  let user = (parts.length >= 2 ? parseInt(parts[1]) : 0);\n  let nice = (parts.length >= 3 ? parseInt(parts[2]) : 0);\n  let system = (parts.length >= 4 ? parseInt(parts[3]) : 0);\n  let idle = (parts.length >= 5 ? parseInt(parts[4]) : 0);\n  let iowait = (parts.length >= 6 ? parseInt(parts[5]) : 0);\n  let irq = (parts.length >= 7 ? parseInt(parts[6]) : 0);\n  let softirq = (parts.length >= 8 ? parseInt(parts[7]) : 0);\n  let steal = (parts.length >= 9 ? parseInt(parts[8]) : 0);\n  let guest = (parts.length >= 10 ? parseInt(parts[9]) : 0);\n  let guest_nice = (parts.length >= 11 ? parseInt(parts[10]) : 0);\n  return user + nice + system + idle + iowait + irq + softirq + steal + guest + guest_nice;\n}\n\nfunction calcProcStatLinux(line, all, _cpu_old) {\n  let statparts = line.replace(/ +/g, ' ').split(')');\n  if (statparts.length >= 2) {\n    let parts = statparts[1].split(' ');\n    if (parts.length >= 16) {\n      let pid = parseInt(statparts[0].split(' ')[0]);\n      let utime = parseInt(parts[12]);\n      let stime = parseInt(parts[13]);\n      let cutime = parseInt(parts[14]);\n      let cstime = parseInt(parts[15]);\n\n      // calc\n      let pcpuu = 0;\n      let pcpus = 0;\n      if (_cpu_old.all > 0 && _cpu_old.list[pid]) {\n        pcpuu = (utime + cutime - _cpu_old.list[pid].utime - _cpu_old.list[pid].cutime) / (all - _cpu_old.all) * 100; // user\n        pcpus = (stime + cstime - _cpu_old.list[pid].stime - _cpu_old.list[pid].cstime) / (all - _cpu_old.all) * 100; // system\n      } else {\n        pcpuu = (utime + cutime) / (all) * 100; // user\n        pcpus = (stime + cstime) / (all) * 100; // system\n      }\n      return {\n        pid: pid,\n        utime: utime,\n        stime: stime,\n        cutime: cutime,\n        cstime: cstime,\n        pcpuu: pcpuu,\n        pcpus: pcpus\n      };\n    } else {\n      return {\n        pid: 0,\n        utime: 0,\n        stime: 0,\n        cutime: 0,\n        cstime: 0,\n        pcpuu: 0,\n        pcpus: 0\n      };\n    }\n  } else {\n    return {\n      pid: 0,\n      utime: 0,\n      stime: 0,\n      cutime: 0,\n      cstime: 0,\n      pcpuu: 0,\n      pcpus: 0\n    };\n  }\n}\n\nfunction calcProcStatWin(procStat, all, _cpu_old) {\n  // calc\n  let pcpuu = 0;\n  let pcpus = 0;\n  if (_cpu_old.all > 0 && _cpu_old.list[procStat.pid]) {\n    pcpuu = (procStat.utime - _cpu_old.list[procStat.pid].utime) / (all - _cpu_old.all) * 100; // user\n    pcpus = (procStat.stime - _cpu_old.list[procStat.pid].stime) / (all - _cpu_old.all) * 100; // system\n  } else {\n    pcpuu = (procStat.utime) / (all) * 100; // user\n    pcpus = (procStat.stime) / (all) * 100; // system\n  }\n  return {\n    pid: procStat.pid,\n    utime: procStat.utime,\n    stime: procStat.stime,\n    pcpuu: pcpuu,\n    pcpus: pcpus\n  };\n}\n\n\n\n// --------------------------\n// running processes\n\nfunction processes(callback) {\n\n  let parsedhead = [];\n\n  function getName(command) {\n    command = command || '';\n    let result = command.split(' ')[0];\n    if (result.substr(-1) === ':') {\n      result = result.substr(0, result.length - 1);\n    }\n    if (result.substr(0, 1) !== '[') {\n      let parts = result.split('/');\n      if (isNaN(parseInt(parts[parts.length - 1]))) {\n        result = parts[parts.length - 1];\n      } else {\n        result = parts[0];\n      }\n    }\n    return result;\n  }\n\n  function parseLine(line) {\n\n    let offset = 0;\n    let offset2 = 0;\n\n    function checkColumn(i) {\n      offset = offset2;\n      offset2 = line.substring(parsedhead[i].to + offset, 1000).indexOf(' ');\n    }\n\n    checkColumn(0);\n    const pid = parseInt(line.substring(parsedhead[0].from + offset, parsedhead[0].to + offset2));\n    checkColumn(1);\n    const ppid = parseInt(line.substring(parsedhead[1].from + offset, parsedhead[1].to + offset2));\n    checkColumn(2);\n    const pcpu = parseFloat(line.substring(parsedhead[2].from + offset, parsedhead[2].to + offset2).replace(/,/g, '.'));\n    checkColumn(3);\n    const pmem = parseFloat(line.substring(parsedhead[3].from + offset, parsedhead[3].to + offset2).replace(/,/g, '.'));\n    checkColumn(4);\n    const priority = parseInt(line.substring(parsedhead[4].from + offset, parsedhead[4].to + offset2));\n    checkColumn(5);\n    const vsz = parseInt(line.substring(parsedhead[5].from + offset, parsedhead[5].to + offset2));\n    checkColumn(6);\n    const rss = parseInt(line.substring(parsedhead[6].from + offset, parsedhead[6].to + offset2));\n    checkColumn(7);\n    const nice = parseInt(line.substring(parsedhead[7].from + offset, parsedhead[7].to + offset2)) || 0;\n    checkColumn(8);\n    const started = parseTimeUnix(line.substring(parsedhead[8].from + offset, parsedhead[8].to + offset2).trim());\n    checkColumn(9);\n    let state = line.substring(parsedhead[9].from + offset, parsedhead[9].to + offset2).trim();\n    state = (state[0] === 'R' ? 'running' : (state[0] === 'S' ? 'sleeping' : (state[0] === 'T' ? 'stopped' : (state[0] === 'W' ? 'paging' : (state[0] === 'X' ? 'dead' : (state[0] === 'Z' ? 'zombie' : ((state[0] === 'D' || state[0] === 'U') ? 'blocked' : 'unknown')))))));\n    checkColumn(10);\n    let tty = line.substring(parsedhead[10].from + offset, parsedhead[10].to + offset2).trim();\n    if (tty === '?' || tty === '??') tty = '';\n    checkColumn(11);\n    const user = line.substring(parsedhead[11].from + offset, parsedhead[11].to + offset2).trim();\n    checkColumn(12);\n    const fullcommand = line.substring(parsedhead[12].from + offset, parsedhead[12].to + offset2).trim().replace(/\\[/g, '').replace(/]/g, '');\n    let cmdPath = '';\n    let command = '';\n    let params = '';\n    // try to figure out where parameter starts\n    let firstParamPos = fullcommand.indexOf(' -');\n    let firstParamPathPos = fullcommand.indexOf(' /');\n    firstParamPos = (firstParamPos >= 0 ? firstParamPos : 10000);\n    firstParamPathPos = (firstParamPathPos >= 0 ? firstParamPathPos : 10000);\n    const firstPos = Math.min(firstParamPos, firstParamPathPos);\n    let tmpCommand = fullcommand.substr(0, firstPos);\n    const tmpParams = fullcommand.substr(firstPos);\n    const lastSlashPos = tmpCommand.lastIndexOf('/');\n    if (lastSlashPos >= 0) {\n      cmdPath = tmpCommand.substr(0, lastSlashPos);\n      tmpCommand = tmpCommand.substr(lastSlashPos + 1);\n    }\n\n    if (firstPos === 10000 && tmpCommand.indexOf(' ') > -1) {\n      const parts = tmpCommand.split(' ');\n      if (fs.existsSync(path.join(cmdPath, parts[0]))) {\n        command = parts.shift();\n        params = (parts.join(' ') + ' ' + tmpParams).trim();\n      } else {\n        command = tmpCommand.trim();\n        params = tmpParams.trim();\n      }\n    } else {\n      command = tmpCommand.trim();\n      params = tmpParams.trim();\n    }\n\n    return ({\n      pid: pid,\n      parentPid: ppid,\n      name: _linux ? getName(command) : command,\n      pcpu: pcpu,\n      pcpuu: 0,\n      pcpus: 0,\n      pmem: pmem,\n      priority: priority,\n      mem_vsz: vsz,\n      mem_rss: rss,\n      nice: nice,\n      started: started,\n      state: state,\n      tty: tty,\n      user: user,\n      command: command,\n      params: params,\n      path: cmdPath\n    });\n  }\n\n  function parseProcesses(lines) {\n    let result = [];\n    if (lines.length > 1) {\n      let head = lines[0];\n      parsedhead = util.parseHead(head, 8);\n      lines.shift();\n      lines.forEach(function (line) {\n        if (line.trim() !== '') {\n          result.push(parseLine(line));\n        }\n      });\n    }\n    return result;\n  }\n  function parseProcesses2(lines) {\n\n    function formatDateTime(time) {\n      const month = ('0' + (time.getMonth() + 1).toString()).substr(-2);\n      const year = time.getFullYear().toString();\n      const day = ('0' + time.getDay().toString()).substr(-2);\n      const hours = time.getHours().toString();\n      const mins = time.getMinutes().toString();\n      const secs = ('0' + time.getSeconds().toString()).substr(-2);\n\n      return (year + '-' + month + '-' + day + ' ' + hours + ':' + mins + ':' + secs);\n    }\n\n    let result = [];\n    lines.forEach(function (line) {\n      if (line.trim() !== '') {\n        line = line.trim().replace(/ +/g, ' ').replace(/,+/g, '.');\n        const parts = line.split(' ');\n        const command = parts.slice(9).join(' ');\n        const pmem = parseFloat((1.0 * parseInt(parts[3]) * 1024 / os.totalmem()).toFixed(1));\n        const elapsed_parts = parts[5].split(':');\n        const started = formatDateTime(new Date(Date.now() - (elapsed_parts.length > 1 ? (elapsed_parts[0] * 60 + elapsed_parts[1]) * 1000 : elapsed_parts[0] * 1000)));\n\n        result.push({\n          pid: parseInt(parts[0]),\n          parentPid: parseInt(parts[1]),\n          name: getName(command),\n          pcpu: 0,\n          pcpuu: 0,\n          pcpus: 0,\n          pmem: pmem,\n          priority: 0,\n          mem_vsz: parseInt(parts[2]),\n          mem_rss: parseInt(parts[3]),\n          nice: parseInt(parts[4]),\n          started: started,\n          state: (parts[6] === 'R' ? 'running' : (parts[6] === 'S' ? 'sleeping' : (parts[6] === 'T' ? 'stopped' : (parts[6] === 'W' ? 'paging' : (parts[6] === 'X' ? 'dead' : (parts[6] === 'Z' ? 'zombie' : ((parts[6] === 'D' || parts[6] === 'U') ? 'blocked' : 'unknown'))))))),\n          tty: parts[7],\n          user: parts[8],\n          command: command\n        });\n      }\n    });\n    return result;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        all: 0,\n        running: 0,\n        blocked: 0,\n        sleeping: 0,\n        unknown: 0,\n        list: []\n      };\n\n      let cmd = '';\n\n      if ((_processes_cpu.ms && Date.now() - _processes_cpu.ms >= 500) || _processes_cpu.ms === 0) {\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n          if (_linux) cmd = 'export LC_ALL=C; ps -axo pid:11,ppid:11,pcpu:6,pmem:6,pri:5,vsz:11,rss:11,ni:5,lstart:30,state:5,tty:15,user:20,command; unset LC_ALL';\n          if (_freebsd || _openbsd || _netbsd) cmd = 'export LC_ALL=C; ps -axo pid,ppid,pcpu,pmem,pri,vsz,rss,ni,lstart,state,tty,user,command; unset LC_ALL';\n          if (_darwin) cmd = 'export LC_ALL=C; ps -axo pid,ppid,pcpu,pmem,pri,vsz,rss,nice,lstart,state,tty,user,command -r; unset LC_ALL';\n          if (_sunos) cmd = 'ps -Ao pid,ppid,pcpu,pmem,pri,vsz,rss,nice,stime,s,tty,user,comm';\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              result.list = (parseProcesses(stdout.toString().split('\\n'))).slice();\n              result.all = result.list.length;\n              result.running = result.list.filter(function (e) {\n                return e.state === 'running';\n              }).length;\n              result.blocked = result.list.filter(function (e) {\n                return e.state === 'blocked';\n              }).length;\n              result.sleeping = result.list.filter(function (e) {\n                return e.state === 'sleeping';\n              }).length;\n\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                cmd = 'cat /proc/stat | grep \"cpu \"';\n                for (let i = 0; i < result.list.length; i++) {\n                  cmd += (';cat /proc/' + result.list[i].pid + '/stat');\n                }\n                exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n');\n\n                  // first line (all - /proc/stat)\n                  let all = parseProcStat(curr_processes.shift());\n\n                  // process\n                  let list_new = {};\n                  let resultProcess = {};\n                  for (let i = 0; i < curr_processes.length; i++) {\n                    resultProcess = calcProcStatLinux(curr_processes[i], all, _processes_cpu);\n\n                    if (resultProcess.pid) {\n\n                      // store pcpu in outer array\n                      let listPos = result.list.map(function (e) { return e.pid; }).indexOf(resultProcess.pid);\n                      if (listPos >= 0) {\n                        result.list[listPos].pcpu = resultProcess.pcpuu + resultProcess.pcpus;\n                        result.list[listPos].pcpuu = resultProcess.pcpuu;\n                        result.list[listPos].pcpus = resultProcess.pcpus;\n                      }\n\n                      // save new values\n                      list_new[resultProcess.pid] = {\n                        pcpuu: resultProcess.pcpuu,\n                        pcpus: resultProcess.pcpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  }\n\n                  // store old values\n                  _processes_cpu.all = all;\n                  // _processes_cpu.list = list_new;\n                  _processes_cpu.list = Object.assign({}, list_new);\n                  _processes_cpu.ms = Date.now() - _processes_cpu.ms;\n                  // _processes_cpu.result = result;\n                  _processes_cpu.result = Object.assign({}, result);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            } else {\n              cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,stat,tty,user,comm';\n              if (_sunos) {\n                cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,s,tty,user,comm';\n              }\n              exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.shift();\n\n                  result.list = parseProcesses2(lines).slice();\n                  result.all = result.list.length;\n                  result.running = result.list.filter(function (e) {\n                    return e.state === 'running';\n                  }).length;\n                  result.blocked = result.list.filter(function (e) {\n                    return e.state === 'blocked';\n                  }).length;\n                  result.sleeping = result.list.filter(function (e) {\n                    return e.state === 'sleeping';\n                  }).length;\n                  if (callback) { callback(result); }\n                  resolve(result);\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n            }\n          });\n        } else if (_windows) {\n          try {\n            util.wmic('process get /value').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procs = [];\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = 0;\n                let allcpus = 0;\n                for (let i = 0; i < processSections.length; i++) {\n                  if (processSections[i].trim() !== '') {\n                    let lines = processSections[i].trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', '=', true), 10);\n                    let parentPid = parseInt(util.getValue(lines, 'ParentProcessId', '=', true), 10);\n                    let statusValue = util.getValue(lines, 'ExecutionState', '=');\n                    let name = util.getValue(lines, 'Caption', '=', true);\n                    let commandLine = util.getValue(lines, 'CommandLine', '=', true);\n                    let commandPath = util.getValue(lines, 'ExecutablePath', '=', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', '=', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', '=', true), 10);\n                    let mem = parseInt(util.getValue(lines, 'WorkingSetSize', '=', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime;\n                    result.all++;\n                    if (!statusValue) { result.unknown++; }\n                    if (statusValue === '3') { result.running++; }\n                    if (statusValue === '4' || statusValue === '5') { result.blocked++; }\n\n                    procStats.push({\n                      pid: pid,\n                      utime: utime,\n                      stime: stime,\n                      pcpu: 0,\n                      pcpuu: 0,\n                      pcpus: 0,\n                    });\n                    procs.push({\n                      pid: pid,\n                      parentPid: parentPid,\n                      name: name,\n                      pcpu: 0,\n                      pcpuu: 0,\n                      pcpus: 0,\n                      pmem: mem / os.totalmem() * 100,\n                      priority: parseInt(util.getValue(lines, 'Priority', '=', true), 10),\n                      mem_vsz: parseInt(util.getValue(lines, 'PageFileUsage', '=', true), 10),\n                      mem_rss: Math.floor(parseInt(util.getValue(lines, 'WorkingSetSize', '=', true), 10) / 1024),\n                      nice: 0,\n                      started: parseTimeWin(util.getValue(lines, 'CreationDate', '=', true)),\n                      state: (!statusValue ? _winStatusValues[0] : _winStatusValues[statusValue]),\n                      tty: '',\n                      user: '',\n                      command: commandLine || name,\n                      path: commandPath,\n                      params: ''\n                    });\n                  }\n                }\n                result.sleeping = result.all - result.running - result.blocked - result.unknown;\n                result.list = procs;\n                for (let i = 0; i < procStats.length; i++) {\n                  let resultProcess = calcProcStatWin(procStats[i], allcpuu + allcpus, _processes_cpu);\n\n                  // store pcpu in outer array\n                  let listPos = result.list.map(function (e) { return e.pid; }).indexOf(resultProcess.pid);\n                  if (listPos >= 0) {\n                    result.list[listPos].pcpu = resultProcess.pcpuu + resultProcess.pcpus;\n                    result.list[listPos].pcpuu = resultProcess.pcpuu;\n                    result.list[listPos].pcpus = resultProcess.pcpus;\n                  }\n\n                  // save new values\n                  list_new[resultProcess.pid] = {\n                    pcpuu: resultProcess.pcpuu,\n                    pcpus: resultProcess.pcpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                }\n                // store old values\n                _processes_cpu.all = allcpuu + allcpus;\n                // _processes_cpu.list = list_new;\n                _processes_cpu.list = Object.assign({}, list_new);\n                _processes_cpu.ms = Date.now() - _processes_cpu.ms;\n                // _processes_cpu.result = result;\n                _processes_cpu.result = Object.assign({}, result);\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      } else {\n        if (callback) { callback(_processes_cpu.result); }\n        resolve(_processes_cpu.result);\n      }\n    });\n  });\n}\n\nexports.processes = processes;\n\n// --------------------------\n// PS - process load\n// get detailed information about a certain process\n// (PID, CPU-Usage %, Mem-Usage %)\n\nfunction processLoad(proc, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(proc) && !callback) {\n    callback = proc;\n    proc = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const procSanitized = util.sanitizeShellString(proc);\n\n      let result = {\n        'proc': procSanitized,\n        'pid': -1,\n        'cpu': 0,\n        'mem': 0\n      };\n\n      if (procSanitized) {\n        if (_windows) {\n          try {\n            util.wmic('process get /value').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = 0;\n                let allcpus = 0;\n                for (let i = 0; i < processSections.length; i++) {\n                  if (processSections[i].trim() !== '') {\n                    let lines = processSections[i].trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', '=', true), 10);\n                    let name = util.getValue(lines, 'Caption', '=', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', '=', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', '=', true), 10);\n                    let mem = parseInt(util.getValue(lines, 'WorkingSetSize', '=', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime;\n\n                    procStats.push({\n                      pid: pid,\n                      utime: utime,\n                      stime: stime,\n                      pcpu: 0,\n                      pcpuu: 0,\n                      pcpus: 0,\n                    });\n                    if (name.toLowerCase().indexOf(procSanitized.toLowerCase()) >= 0) {\n                      if (result.pid === -1) {\n                        result = {\n                          proc: name,\n                          pid: pid,\n                          pids: [pid],\n                          cpu: 0,\n                          mem: mem / os.totalmem() * 100\n                        };\n                      } else {\n                        result.pids.push(pid);\n                        result.mem += mem / os.totalmem() * 100;\n                      }\n                    }\n                  }\n                }\n                for (let i = 0; i < procStats.length; i++) {\n                  let resultProcess = calcProcStatWin(procStats[i], allcpuu + allcpus, _process_cpu);\n\n                  // store pcpu in outer array\n                  if (result && result.pids && result.pids.length > 0) {\n                    let listPos = result.pids.indexOf(resultProcess.pid);\n                    if (listPos >= 0) {\n                      result.cpu = resultProcess.pcpuu + resultProcess.pcpus;\n                    }\n                  }\n\n                  // save new values\n                  list_new[resultProcess.pid] = {\n                    pcpuu: resultProcess.pcpuu,\n                    pcpus: resultProcess.pcpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                }\n                // store old values\n                _process_cpu.all = allcpuu + allcpus;\n                // _process_cpu.list = list_new;\n                _process_cpu.list = Object.assign({}, list_new);\n                _process_cpu.ms = Date.now() - _process_cpu.ms;\n                // _process_cpu.result = result;\n                _process_cpu.result = Object.assign({}, result);\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n\n        if (_darwin || _linux) {\n          exec('ps -axo pid,pcpu,pmem,comm | grep -i ' + procSanitized + ' | grep -v grep', { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n\n              let pid = 0;\n              let pids = [];\n              let cpu = 0;\n              let mem = 0;\n\n              lines.forEach(function (line) {\n                let data = line.trim().replace(/ +/g, ' ').split(' ');\n                if (data.length > 3) {\n                  pid = (!pid ? parseInt(data[0]) : 0);\n                  pids.push(parseInt(data[0], 10));\n                  cpu = cpu + parseFloat(data[1].replace(',', '.'));\n                  mem = mem + parseFloat(data[2].replace(',', '.'));\n                }\n              });\n\n              result = {\n                'proc': procSanitized,\n                'pid': pid,\n                'pids': pids,\n                'cpu': parseFloat((cpu / lines.length).toFixed(2)),\n                'mem': parseFloat((mem / lines.length).toFixed(2))\n              };\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                let cmd = 'cat /proc/stat | grep \"cpu \"';\n                for (let i = 0; i < result.pids.length; i++) {\n                  cmd += (';cat /proc/' + result.pids[i] + '/stat');\n                }\n\n                exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n');\n\n                  // first line (all - /proc/stat)\n                  let all = parseProcStat(curr_processes.shift());\n\n                  // process\n                  let list_new = {};\n                  let resultProcess = {};\n                  result.cpu = 0;\n                  for (let i = 0; i < curr_processes.length; i++) {\n                    resultProcess = calcProcStatLinux(curr_processes[i], all, _process_cpu);\n\n                    if (resultProcess.pid) {\n\n                      // store pcpu in outer result\n                      result.cpu += resultProcess.pcpuu + resultProcess.pcpus;\n\n                      // save new values\n                      list_new[resultProcess.pid] = {\n                        pcpuu: resultProcess.pcpuu,\n                        pcpus: resultProcess.pcpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  }\n\n                  result.cpu = Math.round(result.cpu * 100) / 100;\n\n                  _process_cpu.all = all;\n                  // _process_cpu.list = list_new;\n                  _process_cpu.list = Object.assign({}, list_new);\n                  _process_cpu.ms = Date.now() - _process_cpu.ms;\n                  // _process_cpu.result = result;\n                  _process_cpu.result = Object.assign({}, result);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        }\n      }\n    });\n  });\n}\n\nexports.processLoad = processLoad;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// users.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 11. Users/Sessions\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _winDateFormat = {\n  dateFormat: '',\n  dateSeperator: '',\n  timeFormat: '',\n  timeSeperator: '',\n  amDesignator: '',\n  pmDesignator: ''\n};\n\n// --------------------------\n// array of users online = sessions\n\nfunction getWinCulture() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_winDateFormat.dateFormat) {\n        util.powerShell('(get-culture).DateTimeFormat')\n          .then(data => {\n            let lines = data.toString().split('\\r\\n');\n            _winDateFormat.dateFormat = util.getValue(lines, 'ShortDatePattern', ':');\n            _winDateFormat.dateSeperator = util.getValue(lines, 'DateSeparator', ':');\n            _winDateFormat.timeFormat = util.getValue(lines, 'ShortTimePattern', ':');\n            _winDateFormat.timeSeperator = util.getValue(lines, 'TimeSeparator', ':');\n            _winDateFormat.amDesignator = util.getValue(lines, 'AMDesignator', ':');\n            _winDateFormat.pmDesignator = util.getValue(lines, 'PMDesignator', ':');\n\n            resolve(_winDateFormat);\n          })\n          .catch(() => {\n            resolve(_winDateFormat);\n          });\n      } else {\n        resolve(_winDateFormat);\n      }\n    });\n  });\n}\n\nfunction parseUsersLinux(lines, phase) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let w_first = true;\n  let w_header = [];\n  let w_pos = [];\n  let who_line = {};\n\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' ');\n\n      // who part\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: l[2],\n          time: l[3],\n          ip: (l && l.length > 4) ? l[4].replace(/\\(/g, '').replace(/\\)/g, '') : ''\n        });\n      } else {\n        // w part\n        if (w_first) {    // header\n          w_header = l;\n          w_header.forEach(function (item) {\n            w_pos.push(line.indexOf(item));\n          });\n          w_first = false;\n        } else {\n          // split by w_pos\n          result_w.user = line.substring(w_pos[0], w_pos[1] - 1).trim();\n          result_w.tty = line.substring(w_pos[1], w_pos[2] - 1).trim();\n          result_w.ip = line.substring(w_pos[2], w_pos[3] - 1).replace(/\\(/g, '').replace(/\\)/g, '').trim();\n          result_w.command = line.substring(w_pos[7], 1000).trim();\n          // find corresponding 'who' line\n          who_line = result_who.filter(function (obj) {\n            return (obj.user.substring(0, 8).trim() === result_w.user && obj.tty === result_w.tty);\n          });\n          if (who_line.length === 1) {\n            result.push({\n              user: who_line[0].user,\n              tty: who_line[0].tty,\n              date: who_line[0].date,\n              time: who_line[0].time,\n              ip: who_line[0].ip,\n              command: result_w.command\n            });\n          }\n        }\n      }\n    }\n  });\n  if (result.length === 0 && phase === 2) {\n    return result_who;\n  } else {\n    return result;\n  }\n}\n\nfunction parseUsersDarwin(lines) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let who_line = {};\n\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' ');\n\n      // who part\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: ('' + new Date().getFullYear()) + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(l[2].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + l[3]).slice(-2),\n          time: l[4],\n        });\n      } else {\n        // w part\n        // split by w_pos\n        result_w.user = l[0];\n        result_w.tty = l[1];\n        result_w.ip = (l[2] !== '-') ? l[2] : '';\n        result_w.command = l.slice(5, 1000).join(' ');\n        // find corresponding 'who' line\n        who_line = result_who.filter(function (obj) {\n          return (obj.user === result_w.user && (obj.tty.substring(3, 1000) === result_w.tty || obj.tty === result_w.tty));\n        });\n        if (who_line.length === 1) {\n          result.push({\n            user: who_line[0].user,\n            tty: who_line[0].tty,\n            date: who_line[0].date,\n            time: who_line[0].time,\n            ip: result_w.ip,\n            command: result_w.command\n          });\n        }\n      }\n    }\n  });\n  return result;\n}\n\nfunction parseUsersWin(lines, culture) {\n\n  let result = [];\n  const header = lines[0];\n  const headerDelimiter = [];\n  if (header) {\n    const start = (header[0] === ' ') ? 1 : 0;\n    headerDelimiter.push(start - 1);\n    let nextSpace = 0;\n    for (let i = start + 1; i < header.length; i++) {\n      if (header[i] === ' ' && ((header[i - 1] === ' ') || (header[i - 1] === '.'))) {\n        nextSpace = i;\n      } else {\n        if (nextSpace) {\n          headerDelimiter.push(nextSpace);\n          nextSpace = 0;\n        }\n      }\n    }\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].trim()) {\n        const user = lines[i].substring(headerDelimiter[0] + 1, headerDelimiter[1]).trim() || '';\n        const tty = lines[i].substring(headerDelimiter[1] + 1, headerDelimiter[2] - 2).trim() || '';\n        const dateTime = util.parseDateTime(lines[i].substring(headerDelimiter[5] + 1, 2000).trim(), culture) || '';\n        result.push({\n          user: user,\n          tty: tty,\n          date: dateTime.date,\n          time: dateTime.time,\n          ip: '',\n          command: ''\n        });\n      }\n    }\n  }\n  return result;\n}\n\nfunction users(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n\n      // linux\n      if (_linux) {\n        exec('who --ips; echo \"---\"; w | tail -n +2', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersLinux(lines, 1);\n            if (result.length === 0) {\n              exec('who; echo \"---\"; w | tail -n +2', function (error, stdout) {\n                if (!error) {\n                  // lines / split\n                  lines = stdout.toString().split('\\n');\n                  result = parseUsersLinux(lines, 2);\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        exec('who; echo \"---\"; w -h', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        try {\n          exec('query user', util.execOptsWin, function (error, stdout) {\n            if (stdout) {\n              // lines / split\n              let lines = stdout.toString().split('\\r\\n');\n              getWinCulture()\n                .then(culture => {\n                  result = parseUsersWin(lines, culture);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n\n    });\n  });\n}\n\nexports.users = users;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// internet.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 12. Internet\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// --------------------------\n// check if external site is available\n\nfunction inetChecksite(url, callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let urlSanitized = util.sanitizeShellString(url).toLowerCase();\n      urlSanitized = urlSanitized.replace(/ /g, '');\n      urlSanitized = urlSanitized.replace(/\\$/g, '');\n      urlSanitized = urlSanitized.replace(/\\(/g, '');\n      urlSanitized = urlSanitized.replace(/\\)/g, '');\n      urlSanitized = urlSanitized.replace(/{/g, '');\n      urlSanitized = urlSanitized.replace(/}/g, '');\n      let result = {\n        url: urlSanitized,\n        ok: false,\n        status: 404,\n        ms: -1\n      };\n      if (urlSanitized) {\n        let t = Date.now();\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n          let args = ' -I --connect-timeout 5 -m 5 ' + urlSanitized + ' 2>/dev/null | head -n 1 | cut -d \" \" -f2';\n          let cmd = 'curl';\n          exec(cmd + args, function (error, stdout) {\n            let statusCode = parseInt(stdout.toString());\n            result.status = statusCode || 404;\n            result.ok = !error && (statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304);\n            result.ms = (result.ok ? Date.now() - t : -1);\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        }\n        if (_windows) {   // if this is stable, this can be used for all OS types\n          const http = (urlSanitized.startsWith('https:') ? require('https') : require('http'));\n          try {\n            http.get(urlSanitized, (res) => {\n              const statusCode = res.statusCode;\n\n              result.status = statusCode || 404;\n              result.ok = (statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304);\n\n              if (statusCode !== 200) {\n                res.resume();\n                result.ms = (result.ok ? Date.now() - t : -1);\n                if (callback) { callback(result); }\n                resolve(result);\n              } else {\n                res.on('data', () => { });\n                res.on('end', () => {\n                  result.ms = (result.ok ? Date.now() - t : -1);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              }\n            }).on('error', () => {\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          } catch (err) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n      } else {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.inetChecksite = inetChecksite;\n\n// --------------------------\n// check inet latency\n\nfunction inetLatency(host, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(host) && !callback) {\n    callback = host;\n    host = '';\n  }\n\n  host = host || '8.8.8.8';\n  const hostSanitized = util.sanitizeShellString(host);\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let cmd;\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        if (_linux) {\n          cmd = 'ping -c 2 -w 3 ' + hostSanitized + ' | grep rtt';\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'ping -c 2 -t 3 ' + hostSanitized + ' | grep round-trip';\n        }\n        if (_darwin) {\n          cmd = 'ping -c 2 -t 3 ' + hostSanitized + ' | grep avg';\n        }\n\n        exec(cmd, function (error, stdout) {\n          let result = -1;\n          if (!error) {\n            const line = stdout.toString().split('=');\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n              if (parts.length > 1) {\n                result = parseFloat(parts[1]);\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        exec('ping -s -a ' + hostSanitized + ' 56 2 | grep avg', { timeout: 3000 }, function (error, stdout) {\n          let result = -1;\n          if (!error) {\n            const line = stdout.toString().split('=');\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n              if (parts.length > 1) {\n                result = parseFloat(parts[1].replace(',', '.'));\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        let result = -1;\n        try {\n          exec('ping ' + hostSanitized + ' -n 1', util.execOptsWin, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              lines.shift();\n              lines.forEach(function (line) {\n                if ((line.toLowerCase().match(/ms/g) || []).length === 3) {\n                  let l = line.replace(/ +/g, ' ').split(' ');\n                  if (l.length > 6) {\n                    result = parseFloat(l[l.length - 1]);\n                  }\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.inetLatency = inetLatency;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// dockerSockets.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. DockerSockets\n// ----------------------------------------------------------------------------------\n\nconst net = require('net');\nconst isWin = require('os').type() === 'Windows_NT';\nconst socketPath = isWin ? '//./pipe/docker_engine' : '/var/run/docker.sock';\n\nclass DockerSocket {\n\n  getInfo(callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/info HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  listContainers(all, callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/containers/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  getStats(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/stats?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getInspect(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getProcesses(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/top?ps_args=-opid,ppid,pgid,vsz,time,etime,nice,ruser,user,rgroup,group,stat,rss,args HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n}\n\nmodule.exports = DockerSocket;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// docker.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. Docker\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\nconst DockerSocket = require('./dockerSocket');\n\nlet _platform = process.platform;\nconst _windows = (_platform === 'win32');\n\nlet _docker_container_stats = {};\nlet _docker_socket;\nlet _docker_last_read = 0;\n\n\n// --------------------------\n// get containers (parameter all: get also inactive/exited containers)\n\nfunction dockerInfo(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const result = {};\n\n      _docker_socket.getInfo(data => {\n        result.id = data.ID;\n        result.containers = data.Containers;\n        result.containersRunning = data.ContainersRunning;\n        result.containersPaused = data.ContainersPaused;\n        result.containersStopped = data.ContainersStopped;\n        result.images = data.Images;\n        result.driver = data.Driver;\n        result.memoryLimit = data.MemoryLimit;\n        result.swapLimit = data.SwapLimit;\n        result.kernelMemory = data.KernelMemory;\n        result.cpuCfsPeriod = data.CpuCfsPeriod;\n        result.cpuCfsQuota = data.CpuCfsQuota;\n        result.cpuShares = data.CPUShares;\n        result.cpuSet = data.CPUSet;\n        result.ipv4Forwarding = data.IPv4Forwarding;\n        result.bridgeNfIptables = data.BridgeNfIptables;\n        result.bridgeNfIp6tables = data.BridgeNfIp6tables;\n        result.debug = data.Debug;\n        result.nfd = data.NFd;\n        result.oomKillDisable = data.OomKillDisable;\n        result.ngoroutines = data.NGoroutines;\n        result.systemTime = data.SystemTime;\n        result.loggingDriver = data.LoggingDriver;\n        result.cgroupDriver = data.CgroupDriver;\n        result.nEventsListener = data.NEventsListener;\n        result.kernelVersion = data.KernelVersion;\n        result.operatingSystem = data.OperatingSystem;\n        result.osType = data.OSType;\n        result.architecture = data.Architecture;\n        result.ncpu = data.NCPU;\n        result.memTotal = data.MemTotal;\n        result.dockerRootDir = data.DockerRootDir;\n        result.httpProxy = data.HttpProxy;\n        result.httpsProxy = data.HttpsProxy;\n        result.noProxy = data.NoProxy;\n        result.name = data.Name;\n        result.labels = data.Labels;\n        result.experimentalBuild = data.ExperimentalBuild;\n        result.serverVersion = data.ServerVersion;\n        result.clusterStore = data.ClusterStore;\n        result.clusterAdvertise = data.ClusterAdvertise;\n        result.defaultRuntime = data.DefaultRuntime;\n        result.liveRestoreEnabled = data.LiveRestoreEnabled;\n        result.isolation = data.Isolation;\n        result.initBinary = data.InitBinary;\n        result.productLicense = data.ProductLicense;\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.dockerInfo = dockerInfo;\n\nfunction dockerContainers(all, callback) {\n\n  function inContainers(containers, id) {\n    let filtered = containers.filter(obj => {\n      /**\n       * @namespace\n       * @property {string}  Id\n       */\n      return (obj.Id && (obj.Id === id));\n    });\n    return (filtered.length > 0);\n  }\n\n  // fallback - if only callback is given\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const workload = [];\n\n      _docker_socket.listContainers(all, data => {\n        let docker_containers = {};\n        try {\n          docker_containers = data;\n          if (docker_containers && Object.prototype.toString.call(docker_containers) === '[object Array]' && docker_containers.length > 0) {\n            // GC in _docker_container_stats\n            for (let key in _docker_container_stats) {\n              if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n                if (!inContainers(docker_containers, key)) delete _docker_container_stats[key];\n              }\n            }\n\n            docker_containers.forEach(function (element) {\n\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n              workload.push(dockerContainerInspect(element.Id.trim(), element));\n              // result.push({\n              //   id: element.Id,\n              //   name: element.Name,\n              //   image: element.Image,\n              //   imageID: element.ImageID,\n              //   command: element.Command,\n              //   created: element.Created,\n              //   state: element.State,\n              //   ports: element.Ports,\n              //   mounts: element.Mounts,\n              //   // hostconfig: element.HostConfig,\n              //   // network: element.NetworkSettings\n              // });\n            });\n            if (workload.length) {\n              Promise.all(\n                workload\n              ).then(data => {\n                if (callback) { callback(data); }\n                resolve(data);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          // GC in _docker_container_stats\n          for (let key in _docker_container_stats) {\n            if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n              if (!inContainers(docker_containers, key)) delete _docker_container_stats[key];\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// container inspect (for one container)\n\nfunction dockerContainerInspect(containerID, payload) {\n  containerID = containerID || '';\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (containerID) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerID.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              name: payload.Name,\n              image: payload.Image,\n              imageID: payload.ImageID,\n              command: payload.Command,\n              created: payload.Created,\n              started: data.State && data.State.StartedAt ? Math.round(new Date(data.State.StartedAt).getTime() / 1000) : 0,\n              finished: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? Math.round(new Date(data.State.FinishedAt).getTime() / 1000) : 0,\n              createdAt: data.Created ? data.Created : '',\n              startedAt: data.State && data.State.StartedAt ? data.State.StartedAt : '',\n              finishedAt: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? data.State.FinishedAt : '',\n              state: payload.State,\n              restartCount: data.RestartCount || 0,\n              platform: data.Platform || '',\n              driver: data.Driver || '',\n              ports: payload.Ports,\n              mounts: payload.Mounts,\n              // hostconfig: payload.HostConfig,\n              // network: payload.NetworkSettings\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerContainers = dockerContainers;\n\n// --------------------------\n// helper functions for calculation of docker stats\n\nfunction docker_calcCPUPercent(cpu_stats, precpu_stats) {\n  /**\n   * @namespace\n   * @property {object}  cpu_usage\n   * @property {number}  cpu_usage.total_usage\n   * @property {number}  system_cpu_usage\n   * @property {object}  cpu_usage\n   * @property {Array}  cpu_usage.percpu_usage\n   */\n\n  if (!_windows) {\n    let cpuPercent = 0.0;\n    // calculate the change for the cpu usage of the container in between readings\n    let cpuDelta = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n    // calculate the change for the entire system between readings\n    let systemDelta = cpu_stats.system_cpu_usage - precpu_stats.system_cpu_usage;\n\n    if (systemDelta > 0.0 && cpuDelta > 0.0) {\n      // calculate the change for the cpu usage of the container in between readings\n      cpuPercent = (cpuDelta / systemDelta) * cpu_stats.cpu_usage.percpu_usage.length * 100.0;\n    }\n\n    return cpuPercent;\n  } else {\n    let nanoSecNow = util.nanoSeconds();\n    let cpuPercent = 0.0;\n    if (_docker_last_read > 0) {\n      let possIntervals = (nanoSecNow - _docker_last_read); //  / 100 * os.cpus().length;\n      let intervalsUsed = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n      if (possIntervals > 0) {\n        cpuPercent = 100.0 * intervalsUsed / possIntervals;\n      }\n    }\n    _docker_last_read = nanoSecNow;\n    return cpuPercent;\n  }\n}\n\nfunction docker_calcNetworkIO(networks) {\n  let rx;\n  let tx;\n  for (let key in networks) {\n    // skip loop if the property is from prototype\n    if (!{}.hasOwnProperty.call(networks, key)) continue;\n\n    /**\n     * @namespace\n     * @property {number}  rx_bytes\n     * @property {number}  tx_bytes\n     */\n    let obj = networks[key];\n    rx = +obj.rx_bytes;\n    tx = +obj.tx_bytes;\n  }\n  return {\n    rx: rx,\n    tx: tx\n  };\n}\n\nfunction docker_calcBlockIO(blkio_stats) {\n  let result = {\n    r: 0,\n    w: 0\n  };\n\n  /**\n   * @namespace\n   * @property {Array}  io_service_bytes_recursive\n   */\n  if (blkio_stats && blkio_stats.io_service_bytes_recursive && Object.prototype.toString.call(blkio_stats.io_service_bytes_recursive) === '[object Array]' && blkio_stats.io_service_bytes_recursive.length > 0) {\n    blkio_stats.io_service_bytes_recursive.forEach(function (element) {\n      /**\n       * @namespace\n       * @property {string}  op\n       * @property {number}  value\n       */\n\n      if (element.op && element.op.toLowerCase() === 'read' && element.value) {\n        result.r += element.value;\n      }\n      if (element.op && element.op.toLowerCase() === 'write' && element.value) {\n        result.w += element.value;\n      }\n    });\n  }\n  return result;\n}\n\nfunction dockerContainerStats(containerIDs, callback) {\n\n  let containerArray = [];\n  // fallback - if only callback is given\n  if (util.isFunction(containerIDs) && !callback) {\n    callback = containerIDs;\n    containerArray = ['*'];\n  } else {\n    containerIDs = containerIDs || '*';\n    containerIDs = containerIDs.trim().toLowerCase().replace(/,+/g, '|');\n    containerArray = containerIDs.split('|');\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const result = [];\n\n      const workload = [];\n      if (containerArray.length && containerArray[0].trim() === '*') {\n        containerArray = [];\n        dockerContainers().then(allContainers => {\n          for (let container of allContainers) {\n            containerArray.push(container.id);\n          }\n          dockerContainerStats(containerArray.join(',')).then(result => {\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        });\n      } else {\n        for (let containerID of containerArray) {\n          workload.push(dockerContainerStatsSingle(containerID.trim()));\n        }\n        if (workload.length) {\n          Promise.all(\n            workload\n          ).then(data => {\n            if (callback) { callback(data); }\n            resolve(data);\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\n// --------------------------\n// container stats (for one container)\n\nfunction dockerContainerStatsSingle(containerID) {\n  containerID = containerID || '';\n  let result = {\n    id: containerID,\n    mem_usage: 0,\n    mem_limit: 0,\n    mem_percent: 0,\n    cpu_percent: 0,\n    pids: 0,\n    netIO: {\n      rx: 0,\n      wx: 0\n    },\n    blockIO: {\n      r: 0,\n      w: 0\n    }\n  };\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (containerID) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerID, dataInspect => {\n          try {\n            _docker_socket.getStats(containerID, data => {\n              try {\n                let stats = data;\n                /**\n                 * @namespace\n                 * @property {Object}  memory_stats\n                 * @property {number}  memory_stats.usage\n                 * @property {number}  memory_stats.limit\n                 * @property {Object}  cpu_stats\n                 * @property {Object}  pids_stats\n                 * @property {number}  pids_stats.current\n                 * @property {Object}  networks\n                 * @property {Object}  blkio_stats\n                 */\n\n                if (!stats.message) {\n                  result.mem_usage = (stats.memory_stats && stats.memory_stats.usage ? stats.memory_stats.usage : 0);\n                  result.mem_limit = (stats.memory_stats && stats.memory_stats.limit ? stats.memory_stats.limit : 0);\n                  result.mem_percent = (stats.memory_stats && stats.memory_stats.usage && stats.memory_stats.limit ? stats.memory_stats.usage / stats.memory_stats.limit * 100.0 : 0);\n                  result.cpu_percent = (stats.cpu_stats && stats.precpu_stats ? docker_calcCPUPercent(stats.cpu_stats, stats.precpu_stats) : 0);\n                  result.pids = (stats.pids_stats && stats.pids_stats.current ? stats.pids_stats.current : 0);\n                  result.restartCount = (dataInspect.RestartCount ? dataInspect.RestartCount : 0);\n                  if (stats.networks) result.netIO = docker_calcNetworkIO(stats.networks);\n                  if (stats.blkio_stats) result.blockIO = docker_calcBlockIO(stats.blkio_stats);\n                  result.cpu_stats = (stats.cpu_stats ? stats.cpu_stats : {});\n                  result.precpu_stats = (stats.precpu_stats ? stats.precpu_stats : {});\n                  result.memory_stats = (stats.memory_stats ? stats.memory_stats : {});\n                  result.networks = (stats.networks ? stats.networks : {});\n                }\n              } catch (err) {\n                util.noop();\n              }\n              // }\n              resolve(result);\n            });\n          } catch (err) {\n            util.noop();\n          }\n        });\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerStats = dockerContainerStats;\n\n// --------------------------\n// container processes (for one container)\n\nfunction dockerContainerProcesses(containerID, callback) {\n  containerID = containerID || '';\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (containerID) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getProcesses(containerID, data => {\n          /**\n           * @namespace\n           * @property {Array}  Titles\n           * @property {Array}  Processes\n           **/\n          try {\n            if (data && data.Titles && data.Processes) {\n              let titles = data.Titles.map(function (value) {\n                return value.toUpperCase();\n              });\n              let pos_pid = titles.indexOf('PID');\n              let pos_ppid = titles.indexOf('PPID');\n              let pos_pgid = titles.indexOf('PGID');\n              let pos_vsz = titles.indexOf('VSZ');\n              let pos_time = titles.indexOf('TIME');\n              let pos_elapsed = titles.indexOf('ELAPSED');\n              let pos_ni = titles.indexOf('NI');\n              let pos_ruser = titles.indexOf('RUSER');\n              let pos_user = titles.indexOf('USER');\n              let pos_rgroup = titles.indexOf('RGROUP');\n              let pos_group = titles.indexOf('GROUP');\n              let pos_stat = titles.indexOf('STAT');\n              let pos_rss = titles.indexOf('RSS');\n              let pos_command = titles.indexOf('COMMAND');\n\n              data.Processes.forEach(process => {\n                result.push({\n                  pid_host: (pos_pid >= 0 ? process[pos_pid] : ''),\n                  ppid: (pos_ppid >= 0 ? process[pos_ppid] : ''),\n                  pgid: (pos_pgid >= 0 ? process[pos_pgid] : ''),\n                  user: (pos_user >= 0 ? process[pos_user] : ''),\n                  ruser: (pos_ruser >= 0 ? process[pos_ruser] : ''),\n                  group: (pos_group >= 0 ? process[pos_group] : ''),\n                  rgroup: (pos_rgroup >= 0 ? process[pos_rgroup] : ''),\n                  stat: (pos_stat >= 0 ? process[pos_stat] : ''),\n                  time: (pos_time >= 0 ? process[pos_time] : ''),\n                  elapsed: (pos_elapsed >= 0 ? process[pos_elapsed] : ''),\n                  nice: (pos_ni >= 0 ? process[pos_ni] : ''),\n                  rss: (pos_rss >= 0 ? process[pos_rss] : ''),\n                  vsz: (pos_vsz >= 0 ? process[pos_vsz] : ''),\n                  command: (pos_command >= 0 ? process[pos_command] : '')\n                });\n              });\n            }\n          } catch (err) {\n            util.noop();\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      } else {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerProcesses = dockerContainerProcesses;\n\nfunction dockerAll(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      dockerContainers(true).then(result => {\n        if (result && Object.prototype.toString.call(result) === '[object Array]' && result.length > 0) {\n          let l = result.length;\n          result.forEach(function (element) {\n            dockerContainerStats(element.id).then(res => {\n              // include stats in array\n              element.mem_usage = res[0].mem_usage;\n              element.mem_limit = res[0].mem_limit;\n              element.mem_percent = res[0].mem_percent;\n              element.cpu_percent = res[0].cpu_percent;\n              element.pids = res[0].pids;\n              element.netIO = res[0].netIO;\n              element.blockIO = res[0].blockIO;\n              element.cpu_stats = res[0].cpu_stats;\n              element.precpu_stats = res[0].precpu_stats;\n              element.memory_stats = res[0].memory_stats;\n              element.networks = res[0].networks;\n\n              dockerContainerProcesses(element.id).then(processes => {\n                element.processes = processes;\n\n                l -= 1;\n                if (l === 0) {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n              // all done??\n            });\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerAll = dockerAll;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// virtualbox.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 14. Docker\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nfunction vboxInfo(callback) {\n\n  // fallback - if only callback is given\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec(util.getVboxmanage() + ' list vms --long', function (error, stdout) {\n          let parts = (os.EOL + stdout.toString()).split(os.EOL + 'Name:');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = ('Name:' + part).split(os.EOL);\n            const state = util.getValue(lines, 'State');\n            const running = state.startsWith('running');\n            const runningSinceString = running ? state.replace('running (since ', '').replace(')', '').trim() : '';\n            let runningSince = 0;\n            try {\n              if (running) {\n                const sinceDateObj = new Date(runningSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                runningSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            const stoppedSinceString = !running ? state.replace('powered off (since', '').replace(')', '').trim() : '';\n            let stoppedSince = 0;\n            try {\n              if (!running) {\n                const sinceDateObj = new Date(stoppedSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                stoppedSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            result.push({\n              id: util.getValue(lines, 'UUID'),\n              name: util.getValue(lines, 'Name'),\n              running,\n              started: runningSinceString,\n              runningSince,\n              stopped: stoppedSinceString,\n              stoppedSince,\n              guestOS: util.getValue(lines, 'Guest OS'),\n              hardwareUUID: util.getValue(lines, 'Hardware UUID'),\n              memory: parseInt(util.getValue(lines, 'Memory size', '     '), 10),\n              vram: parseInt(util.getValue(lines, 'VRAM size'), 10),\n              cpus: parseInt(util.getValue(lines, 'Number of CPUs'), 10),\n              cpuExepCap: util.getValue(lines, 'CPU exec cap'),\n              cpuProfile: util.getValue(lines, 'CPUProfile'),\n              chipset: util.getValue(lines, 'Chipset'),\n              firmware: util.getValue(lines, 'Firmware'),\n              pageFusion: util.getValue(lines, 'Page Fusion') === 'enabled',\n              configFile: util.getValue(lines, 'Config file'),\n              snapshotFolder: util.getValue(lines, 'Snapshot folder'),\n              logFolder: util.getValue(lines, 'Log folder'),\n              HPET: util.getValue(lines, 'HPET') === 'enabled',\n              PAE: util.getValue(lines, 'PAE') === 'enabled',\n              longMode: util.getValue(lines, 'Long Mode') === 'enabled',\n              tripleFaultReset: util.getValue(lines, 'Triple Fault Reset') === 'enabled',\n              APIC: util.getValue(lines, 'APIC') === 'enabled',\n              X2APIC: util.getValue(lines, 'X2APIC') === 'enabled',\n              ACPI: util.getValue(lines, 'ACPI') === 'enabled',\n              IOAPIC: util.getValue(lines, 'IOAPIC') === 'enabled',\n              biosAPICmode: util.getValue(lines, 'BIOS APIC mode'),\n              bootMenuMode: util.getValue(lines, 'Boot menu mode'),\n              bootDevice1: util.getValue(lines, 'Boot Device 1'),\n              bootDevice2: util.getValue(lines, 'Boot Device 2'),\n              bootDevice3: util.getValue(lines, 'Boot Device 3'),\n              bootDevice4: util.getValue(lines, 'Boot Device 4'),\n              timeOffset: util.getValue(lines, 'Time offset'),\n              RTC: util.getValue(lines, 'RTC'),\n            });\n          });\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      } catch (e) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.vboxInfo = vboxInfo;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// index.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2020\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// Contributors:  Guillaume Legrain (https://github.com/glegrain)\n//                Riccardo Novaglia (https://github.com/richy24)\n//                Quentin Busuttil (https://github.com/Buzut)\n//                Lapsio (https://github.com/lapsio)\n//                csy (https://github.com/csy1983)\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n\n// ----------------------------------------------------------------------------------\n// Dependencies\n// ----------------------------------------------------------------------------------\n\nconst lib_version = require('../package.json').version;\nconst util = require('./util');\nconst system = require('./system');\nconst osInfo = require('./osinfo');\nconst cpu = require('./cpu');\nconst memory = require('./memory');\nconst battery = require('./battery');\nconst graphics = require('./graphics');\nconst filesystem = require('./filesystem');\nconst network = require('./network');\nconst wifi = require('./wifi');\nconst processes = require('./processes');\nconst users = require('./users');\nconst internet = require('./internet');\nconst docker = require('./docker');\nconst vbox = require('./virtualbox');\n\nlet _platform = process.platform;\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// ----------------------------------------------------------------------------------\n// init\n// ----------------------------------------------------------------------------------\n\nif (_windows) {\n  util.getCodepage();\n}\n\n// ----------------------------------------------------------------------------------\n// General\n// ----------------------------------------------------------------------------------\n\nfunction version() {\n  return lib_version;\n}\n\n// ----------------------------------------------------------------------------------\n// Get static and dynamic data (all)\n// ----------------------------------------------------------------------------------\n\n// --------------------------\n// get static data - they should not change until restarted\n\nfunction getStaticData(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let data = {};\n\n      data.version = version();\n\n      Promise.all([\n        system.system(),\n        system.bios(),\n        system.baseboard(),\n        system.chassis(),\n        osInfo.osInfo(),\n        osInfo.uuid(),\n        osInfo.versions(),\n        cpu.cpu(),\n        cpu.cpuFlags(),\n        graphics.graphics(),\n        network.networkInterfaces(),\n        memory.memLayout(),\n        filesystem.diskLayout()\n      ]).then(res => {\n        data.system = res[0];\n        data.bios = res[1];\n        data.baseboard = res[2];\n        data.chassis = res[3];\n        data.os = res[4];\n        data.uuid = res[5];\n        data.versions = res[6];\n        data.cpu = res[7];\n        data.cpu.flags = res[8];\n        data.graphics = res[9];\n        data.net = res[10];\n        data.memLayout = res[11];\n        data.diskLayout = res[12];\n        if (callback) { callback(data); }\n        resolve(data);\n      });\n    });\n  });\n}\n\n\n// --------------------------\n// get all dynamic data - e.g. for monitoring agents\n// may take some seconds to get all data\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\nfunction getDynamicData(srv, iface, callback) {\n\n  if (util.isFunction(iface)) {\n    callback = iface;\n    iface = '';\n  }\n  if (util.isFunction(srv)) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      iface = iface || network.getDefaultNetworkInterface();\n      srv = srv || '';\n\n      // use closure to track \u0192 completion\n      let functionProcessed = (function () {\n        let totalFunctions = 15;\n        if (_windows) totalFunctions = 11;\n        if (_freebsd || _openbsd || _netbsd) totalFunctions = 11;\n        if (_sunos) totalFunctions = 6;\n\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          }\n        };\n      })();\n\n      // var totalFunctions = 14;\n      // function functionProcessed() {\n      //   if (--totalFunctions === 0) {\n      //     if (callback) { callback(data) }\n      //     resolve(data);\n      //   }\n      // }\n\n      let data = {};\n\n      // get time\n      data.time = osInfo.time();\n\n      /**\n       * @namespace\n       * @property {Object}  versions\n       * @property {string}  versions.node\n       * @property {string}  versions.v8\n       */\n      data.node = process.versions.node;\n      data.v8 = process.versions.v8;\n\n      cpu.cpuCurrentspeed().then(res => {\n        data.cpuCurrentspeed = res;\n        functionProcessed();\n      });\n\n      users.users().then(res => {\n        data.users = res;\n        functionProcessed();\n      });\n\n      if (!_windows) {\n        processes.processes().then(res => {\n          data.processes = res;\n          functionProcessed();\n        });\n      }\n\n      cpu.currentLoad().then(res => {\n        data.currentLoad = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        cpu.cpuTemperature().then(res => {\n          data.temp = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        network.networkStats(iface).then(res => {\n          data.networkStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        network.networkConnections().then(res => {\n          data.networkConnections = res;\n          functionProcessed();\n        });\n      }\n\n      memory.mem().then(res => {\n        data.mem = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        battery().then(res => {\n          data.battery = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_sunos) {\n        processes.services(srv).then(res => {\n          data.services = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        filesystem.fsSize().then(res => {\n          data.fsSize = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.fsStats().then(res => {\n          data.fsStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.disksIO().then(res => {\n          data.disksIO = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        wifi.wifiNetworks().then(res => {\n          data.wifiNetworks = res;\n          functionProcessed();\n        });\n      }\n\n      internet.inetLatency().then(res => {\n        data.inetLatency = res;\n        functionProcessed();\n      });\n    });\n  });\n}\n\n// --------------------------\n// get all data at once\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\nfunction getAllData(srv, iface, callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = {};\n\n      if (iface && util.isFunction(iface) && !callback) {\n        callback = iface;\n        iface = '';\n      }\n\n      if (srv && util.isFunction(srv) && !iface && !callback) {\n        callback = srv;\n        srv = '';\n        iface = '';\n      }\n\n      getStaticData().then(res => {\n        data = res;\n        getDynamicData(srv, iface).then(res => {\n          for (let key in res) {\n            if ({}.hasOwnProperty.call(res, key)) {\n              data[key] = res[key];\n            }\n          }\n          if (callback) { callback(data); }\n          resolve(data);\n        });\n      });\n    });\n  });\n}\n\nfunction get(valueObject, callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const allPromises = Object.keys(valueObject)\n        .filter(func => ({}.hasOwnProperty.call(exports, func)))\n        .map(func => {\n          const params = valueObject[func].substring(valueObject[func].lastIndexOf('(') + 1, valueObject[func].lastIndexOf(')'));\n          const funcWithoutParams = func.split('(')[0];\n          if (params) {\n            return exports[funcWithoutParams](params)\n          } else {\n            return exports[funcWithoutParams]('')\n          }\n        });\n\n      Promise.all(allPromises).then(data => {\n        const result = {};\n        let i = 0;\n        for (let key in valueObject) {\n          if ({}.hasOwnProperty.call(valueObject, key) && {}.hasOwnProperty.call(exports, key) && data.length > i) {\n            if (valueObject[key] === '*' || valueObject[key] === 'all') {\n              result[key] = data[i];\n            } else {\n              const keys = valueObject[key].replace(/,/g, ' ').replace(/ +/g, ' ').split(' ');\n              if (data[i]) {\n                if (Array.isArray(data[i])) {\n                  // result is in an array, go through all elements of array and pick only the right ones\n                  const partialArray = [];\n                  data[i].forEach(element => {\n                    const partialRes = {};\n                    keys.forEach(k => {\n                      if ({}.hasOwnProperty.call(element, k)) {\n                        partialRes[k] = element[k];\n                      }\n                    });\n                    partialArray.push(partialRes);\n                  });\n                  result[key] = partialArray;\n                } else {\n                  const partialRes = {};\n                  keys.forEach(k => {\n                    if ({}.hasOwnProperty.call(data[i], k)) {\n                      partialRes[k] = data[i][k];\n                    }\n                  });\n                  result[key] = partialRes;\n                }\n              } else {\n                result[key] = {};\n              }\n            }\n            i++;\n          }\n        }\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nfunction observe(valueObject, interval, callback) {\n  let _data = null;\n\n  const result = setInterval(() => {\n    get(valueObject).then(data => {\n      if (JSON.stringify(_data) !== JSON.stringify(data)) {\n        _data = Object.assign({}, data);\n        callback(data);\n      }\n    });\n  }, interval);\n  return result;\n}\n\n// ----------------------------------------------------------------------------------\n// export all libs\n// ----------------------------------------------------------------------------------\n\nexports.version = version;\nexports.system = system.system;\nexports.bios = system.bios;\nexports.baseboard = system.baseboard;\nexports.chassis = system.chassis;\n\nexports.time = osInfo.time;\nexports.osInfo = osInfo.osInfo;\nexports.versions = osInfo.versions;\nexports.shell = osInfo.shell;\nexports.uuid = osInfo.uuid;\n\nexports.cpu = cpu.cpu;\nexports.cpuFlags = cpu.cpuFlags;\nexports.cpuCache = cpu.cpuCache;\nexports.cpuCurrentspeed = cpu.cpuCurrentspeed;\nexports.cpuTemperature = cpu.cpuTemperature;\nexports.currentLoad = cpu.currentLoad;\nexports.fullLoad = cpu.fullLoad;\n\nexports.mem = memory.mem;\nexports.memLayout = memory.memLayout;\n\nexports.battery = battery;\n\nexports.graphics = graphics.graphics;\n\nexports.fsSize = filesystem.fsSize;\nexports.fsOpenFiles = filesystem.fsOpenFiles;\nexports.blockDevices = filesystem.blockDevices;\nexports.fsStats = filesystem.fsStats;\nexports.disksIO = filesystem.disksIO;\nexports.diskLayout = filesystem.diskLayout;\n\nexports.networkInterfaceDefault = network.networkInterfaceDefault;\nexports.networkGatewayDefault = network.networkGatewayDefault;\nexports.networkInterfaces = network.networkInterfaces;\nexports.networkStats = network.networkStats;\nexports.networkConnections = network.networkConnections;\n\nexports.wifiNetworks = wifi.wifiNetworks;\n\nexports.services = processes.services;\nexports.processes = processes.processes;\nexports.processLoad = processes.processLoad;\n\nexports.users = users.users;\n\nexports.inetChecksite = internet.inetChecksite;\nexports.inetLatency = internet.inetLatency;\n\nexports.dockerInfo = docker.dockerInfo;\nexports.dockerContainers = docker.dockerContainers;\nexports.dockerContainerStats = docker.dockerContainerStats;\nexports.dockerContainerProcesses = docker.dockerContainerProcesses;\nexports.dockerAll = docker.dockerAll;\n\nexports.vboxInfo = vbox.vboxInfo;\n\nexports.getStaticData = getStaticData;\nexports.getDynamicData = getDynamicData;\nexports.getAllData = getAllData;\nexports.get = get;\nexports.observe = observe;\n\n", "\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n", "\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n", "\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n", "\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n", "\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n", "\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n", "\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar whatwgUrl = _interopDefault(require('whatwg-url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n", "/*\n * Generated by script. DO NOT EDIT!\n *\n * This part is derived from Unicode Data Files and provided under Unicode, Inc. License Agreement.\n */\n\n/* BEGIN */\nexport const defs = [\n  { start: 0, end: 31, prop: \"N\" },\n  { start: 32, end: 126, prop: \"Na\" },\n  { start: 127, end: 160, prop: \"N\" },\n  { start: 161, end: 161, prop: \"A\" },\n  { start: 162, end: 163, prop: \"Na\" },\n  { start: 164, end: 164, prop: \"A\" },\n  { start: 165, end: 166, prop: \"Na\" },\n  { start: 167, end: 168, prop: \"A\" },\n  { start: 169, end: 169, prop: \"N\" },\n  { start: 170, end: 170, prop: \"A\" },\n  { start: 171, end: 171, prop: \"N\" },\n  { start: 172, end: 172, prop: \"Na\" },\n  { start: 173, end: 174, prop: \"A\" },\n  { start: 175, end: 175, prop: \"Na\" },\n  { start: 176, end: 180, prop: \"A\" },\n  { start: 181, end: 181, prop: \"N\" },\n  { start: 182, end: 186, prop: \"A\" },\n  { start: 187, end: 187, prop: \"N\" },\n  { start: 188, end: 191, prop: \"A\" },\n  { start: 192, end: 197, prop: \"N\" },\n  { start: 198, end: 198, prop: \"A\" },\n  { start: 199, end: 207, prop: \"N\" },\n  { start: 208, end: 208, prop: \"A\" },\n  { start: 209, end: 214, prop: \"N\" },\n  { start: 215, end: 216, prop: \"A\" },\n  { start: 217, end: 221, prop: \"N\" },\n  { start: 222, end: 225, prop: \"A\" },\n  { start: 226, end: 229, prop: \"N\" },\n  { start: 230, end: 230, prop: \"A\" },\n  { start: 231, end: 231, prop: \"N\" },\n  { start: 232, end: 234, prop: \"A\" },\n  { start: 235, end: 235, prop: \"N\" },\n  { start: 236, end: 237, prop: \"A\" },\n  { start: 238, end: 239, prop: \"N\" },\n  { start: 240, end: 240, prop: \"A\" },\n  { start: 241, end: 241, prop: \"N\" },\n  { start: 242, end: 243, prop: \"A\" },\n  { start: 244, end: 246, prop: \"N\" },\n  { start: 247, end: 250, prop: \"A\" },\n  { start: 251, end: 251, prop: \"N\" },\n  { start: 252, end: 252, prop: \"A\" },\n  { start: 253, end: 253, prop: \"N\" },\n  { start: 254, end: 254, prop: \"A\" },\n  { start: 255, end: 256, prop: \"N\" },\n  { start: 257, end: 257, prop: \"A\" },\n  { start: 258, end: 272, prop: \"N\" },\n  { start: 273, end: 273, prop: \"A\" },\n  { start: 274, end: 274, prop: \"N\" },\n  { start: 275, end: 275, prop: \"A\" },\n  { start: 276, end: 282, prop: \"N\" },\n  { start: 283, end: 283, prop: \"A\" },\n  { start: 284, end: 293, prop: \"N\" },\n  { start: 294, end: 295, prop: \"A\" },\n  { start: 296, end: 298, prop: \"N\" },\n  { start: 299, end: 299, prop: \"A\" },\n  { start: 300, end: 304, prop: \"N\" },\n  { start: 305, end: 307, prop: \"A\" },\n  { start: 308, end: 311, prop: \"N\" },\n  { start: 312, end: 312, prop: \"A\" },\n  { start: 313, end: 318, prop: \"N\" },\n  { start: 319, end: 322, prop: \"A\" },\n  { start: 323, end: 323, prop: \"N\" },\n  { start: 324, end: 324, prop: \"A\" },\n  { start: 325, end: 327, prop: \"N\" },\n  { start: 328, end: 331, prop: \"A\" },\n  { start: 332, end: 332, prop: \"N\" },\n  { start: 333, end: 333, prop: \"A\" },\n  { start: 334, end: 337, prop: \"N\" },\n  { start: 338, end: 339, prop: \"A\" },\n  { start: 340, end: 357, prop: \"N\" },\n  { start: 358, end: 359, prop: \"A\" },\n  { start: 360, end: 362, prop: \"N\" },\n  { start: 363, end: 363, prop: \"A\" },\n  { start: 364, end: 461, prop: \"N\" },\n  { start: 462, end: 462, prop: \"A\" },\n  { start: 463, end: 463, prop: \"N\" },\n  { start: 464, end: 464, prop: \"A\" },\n  { start: 465, end: 465, prop: \"N\" },\n  { start: 466, end: 466, prop: \"A\" },\n  { start: 467, end: 467, prop: \"N\" },\n  { start: 468, end: 468, prop: \"A\" },\n  { start: 469, end: 469, prop: \"N\" },\n  { start: 470, end: 470, prop: \"A\" },\n  { start: 471, end: 471, prop: \"N\" },\n  { start: 472, end: 472, prop: \"A\" },\n  { start: 473, end: 473, prop: \"N\" },\n  { start: 474, end: 474, prop: \"A\" },\n  { start: 475, end: 475, prop: \"N\" },\n  { start: 476, end: 476, prop: \"A\" },\n  { start: 477, end: 592, prop: \"N\" },\n  { start: 593, end: 593, prop: \"A\" },\n  { start: 594, end: 608, prop: \"N\" },\n  { start: 609, end: 609, prop: \"A\" },\n  { start: 610, end: 707, prop: \"N\" },\n  { start: 708, end: 708, prop: \"A\" },\n  { start: 709, end: 710, prop: \"N\" },\n  { start: 711, end: 711, prop: \"A\" },\n  { start: 712, end: 712, prop: \"N\" },\n  { start: 713, end: 715, prop: \"A\" },\n  { start: 716, end: 716, prop: \"N\" },\n  { start: 717, end: 717, prop: \"A\" },\n  { start: 718, end: 719, prop: \"N\" },\n  { start: 720, end: 720, prop: \"A\" },\n  { start: 721, end: 727, prop: \"N\" },\n  { start: 728, end: 731, prop: \"A\" },\n  { start: 732, end: 732, prop: \"N\" },\n  { start: 733, end: 733, prop: \"A\" },\n  { start: 734, end: 734, prop: \"N\" },\n  { start: 735, end: 735, prop: \"A\" },\n  { start: 736, end: 767, prop: \"N\" },\n  { start: 768, end: 879, prop: \"A\" },\n  { start: 880, end: 912, prop: \"N\" },\n  { start: 913, end: 929, prop: \"A\" },\n  { start: 930, end: 930, prop: \"N\" },\n  { start: 931, end: 937, prop: \"A\" },\n  { start: 938, end: 944, prop: \"N\" },\n  { start: 945, end: 961, prop: \"A\" },\n  { start: 962, end: 962, prop: \"N\" },\n  { start: 963, end: 969, prop: \"A\" },\n  { start: 970, end: 1024, prop: \"N\" },\n  { start: 1025, end: 1025, prop: \"A\" },\n  { start: 1026, end: 1039, prop: \"N\" },\n  { start: 1040, end: 1103, prop: \"A\" },\n  { start: 1104, end: 1104, prop: \"N\" },\n  { start: 1105, end: 1105, prop: \"A\" },\n  { start: 1106, end: 4351, prop: \"N\" },\n  { start: 4352, end: 4447, prop: \"W\" },\n  { start: 4448, end: 8207, prop: \"N\" },\n  { start: 8208, end: 8208, prop: \"A\" },\n  { start: 8209, end: 8210, prop: \"N\" },\n  { start: 8211, end: 8214, prop: \"A\" },\n  { start: 8215, end: 8215, prop: \"N\" },\n  { start: 8216, end: 8217, prop: \"A\" },\n  { start: 8218, end: 8219, prop: \"N\" },\n  { start: 8220, end: 8221, prop: \"A\" },\n  { start: 8222, end: 8223, prop: \"N\" },\n  { start: 8224, end: 8226, prop: \"A\" },\n  { start: 8227, end: 8227, prop: \"N\" },\n  { start: 8228, end: 8231, prop: \"A\" },\n  { start: 8232, end: 8239, prop: \"N\" },\n  { start: 8240, end: 8240, prop: \"A\" },\n  { start: 8241, end: 8241, prop: \"N\" },\n  { start: 8242, end: 8243, prop: \"A\" },\n  { start: 8244, end: 8244, prop: \"N\" },\n  { start: 8245, end: 8245, prop: \"A\" },\n  { start: 8246, end: 8250, prop: \"N\" },\n  { start: 8251, end: 8251, prop: \"A\" },\n  { start: 8252, end: 8253, prop: \"N\" },\n  { start: 8254, end: 8254, prop: \"A\" },\n  { start: 8255, end: 8307, prop: \"N\" },\n  { start: 8308, end: 8308, prop: \"A\" },\n  { start: 8309, end: 8318, prop: \"N\" },\n  { start: 8319, end: 8319, prop: \"A\" },\n  { start: 8320, end: 8320, prop: \"N\" },\n  { start: 8321, end: 8324, prop: \"A\" },\n  { start: 8325, end: 8360, prop: \"N\" },\n  { start: 8361, end: 8361, prop: \"H\" },\n  { start: 8362, end: 8363, prop: \"N\" },\n  { start: 8364, end: 8364, prop: \"A\" },\n  { start: 8365, end: 8450, prop: \"N\" },\n  { start: 8451, end: 8451, prop: \"A\" },\n  { start: 8452, end: 8452, prop: \"N\" },\n  { start: 8453, end: 8453, prop: \"A\" },\n  { start: 8454, end: 8456, prop: \"N\" },\n  { start: 8457, end: 8457, prop: \"A\" },\n  { start: 8458, end: 8466, prop: \"N\" },\n  { start: 8467, end: 8467, prop: \"A\" },\n  { start: 8468, end: 8469, prop: \"N\" },\n  { start: 8470, end: 8470, prop: \"A\" },\n  { start: 8471, end: 8480, prop: \"N\" },\n  { start: 8481, end: 8482, prop: \"A\" },\n  { start: 8483, end: 8485, prop: \"N\" },\n  { start: 8486, end: 8486, prop: \"A\" },\n  { start: 8487, end: 8490, prop: \"N\" },\n  { start: 8491, end: 8491, prop: \"A\" },\n  { start: 8492, end: 8530, prop: \"N\" },\n  { start: 8531, end: 8532, prop: \"A\" },\n  { start: 8533, end: 8538, prop: \"N\" },\n  { start: 8539, end: 8542, prop: \"A\" },\n  { start: 8543, end: 8543, prop: \"N\" },\n  { start: 8544, end: 8555, prop: \"A\" },\n  { start: 8556, end: 8559, prop: \"N\" },\n  { start: 8560, end: 8569, prop: \"A\" },\n  { start: 8570, end: 8584, prop: \"N\" },\n  { start: 8585, end: 8585, prop: \"A\" },\n  { start: 8586, end: 8591, prop: \"N\" },\n  { start: 8592, end: 8601, prop: \"A\" },\n  { start: 8602, end: 8631, prop: \"N\" },\n  { start: 8632, end: 8633, prop: \"A\" },\n  { start: 8634, end: 8657, prop: \"N\" },\n  { start: 8658, end: 8658, prop: \"A\" },\n  { start: 8659, end: 8659, prop: \"N\" },\n  { start: 8660, end: 8660, prop: \"A\" },\n  { start: 8661, end: 8678, prop: \"N\" },\n  { start: 8679, end: 8679, prop: \"A\" },\n  { start: 8680, end: 8703, prop: \"N\" },\n  { start: 8704, end: 8704, prop: \"A\" },\n  { start: 8705, end: 8705, prop: \"N\" },\n  { start: 8706, end: 8707, prop: \"A\" },\n  { start: 8708, end: 8710, prop: \"N\" },\n  { start: 8711, end: 8712, prop: \"A\" },\n  { start: 8713, end: 8714, prop: \"N\" },\n  { start: 8715, end: 8715, prop: \"A\" },\n  { start: 8716, end: 8718, prop: \"N\" },\n  { start: 8719, end: 8719, prop: \"A\" },\n  { start: 8720, end: 8720, prop: \"N\" },\n  { start: 8721, end: 8721, prop: \"A\" },\n  { start: 8722, end: 8724, prop: \"N\" },\n  { start: 8725, end: 8725, prop: \"A\" },\n  { start: 8726, end: 8729, prop: \"N\" },\n  { start: 8730, end: 8730, prop: \"A\" },\n  { start: 8731, end: 8732, prop: \"N\" },\n  { start: 8733, end: 8736, prop: \"A\" },\n  { start: 8737, end: 8738, prop: \"N\" },\n  { start: 8739, end: 8739, prop: \"A\" },\n  { start: 8740, end: 8740, prop: \"N\" },\n  { start: 8741, end: 8741, prop: \"A\" },\n  { start: 8742, end: 8742, prop: \"N\" },\n  { start: 8743, end: 8748, prop: \"A\" },\n  { start: 8749, end: 8749, prop: \"N\" },\n  { start: 8750, end: 8750, prop: \"A\" },\n  { start: 8751, end: 8755, prop: \"N\" },\n  { start: 8756, end: 8759, prop: \"A\" },\n  { start: 8760, end: 8763, prop: \"N\" },\n  { start: 8764, end: 8765, prop: \"A\" },\n  { start: 8766, end: 8775, prop: \"N\" },\n  { start: 8776, end: 8776, prop: \"A\" },\n  { start: 8777, end: 8779, prop: \"N\" },\n  { start: 8780, end: 8780, prop: \"A\" },\n  { start: 8781, end: 8785, prop: \"N\" },\n  { start: 8786, end: 8786, prop: \"A\" },\n  { start: 8787, end: 8799, prop: \"N\" },\n  { start: 8800, end: 8801, prop: \"A\" },\n  { start: 8802, end: 8803, prop: \"N\" },\n  { start: 8804, end: 8807, prop: \"A\" },\n  { start: 8808, end: 8809, prop: \"N\" },\n  { start: 8810, end: 8811, prop: \"A\" },\n  { start: 8812, end: 8813, prop: \"N\" },\n  { start: 8814, end: 8815, prop: \"A\" },\n  { start: 8816, end: 8833, prop: \"N\" },\n  { start: 8834, end: 8835, prop: \"A\" },\n  { start: 8836, end: 8837, prop: \"N\" },\n  { start: 8838, end: 8839, prop: \"A\" },\n  { start: 8840, end: 8852, prop: \"N\" },\n  { start: 8853, end: 8853, prop: \"A\" },\n  { start: 8854, end: 8856, prop: \"N\" },\n  { start: 8857, end: 8857, prop: \"A\" },\n  { start: 8858, end: 8868, prop: \"N\" },\n  { start: 8869, end: 8869, prop: \"A\" },\n  { start: 8870, end: 8894, prop: \"N\" },\n  { start: 8895, end: 8895, prop: \"A\" },\n  { start: 8896, end: 8977, prop: \"N\" },\n  { start: 8978, end: 8978, prop: \"A\" },\n  { start: 8979, end: 8985, prop: \"N\" },\n  { start: 8986, end: 8987, prop: \"W\" },\n  { start: 8988, end: 9000, prop: \"N\" },\n  { start: 9001, end: 9002, prop: \"W\" },\n  { start: 9003, end: 9192, prop: \"N\" },\n  { start: 9193, end: 9196, prop: \"W\" },\n  { start: 9197, end: 9199, prop: \"N\" },\n  { start: 9200, end: 9200, prop: \"W\" },\n  { start: 9201, end: 9202, prop: \"N\" },\n  { start: 9203, end: 9203, prop: \"W\" },\n  { start: 9204, end: 9311, prop: \"N\" },\n  { start: 9312, end: 9449, prop: \"A\" },\n  { start: 9450, end: 9450, prop: \"N\" },\n  { start: 9451, end: 9547, prop: \"A\" },\n  { start: 9548, end: 9551, prop: \"N\" },\n  { start: 9552, end: 9587, prop: \"A\" },\n  { start: 9588, end: 9599, prop: \"N\" },\n  { start: 9600, end: 9615, prop: \"A\" },\n  { start: 9616, end: 9617, prop: \"N\" },\n  { start: 9618, end: 9621, prop: \"A\" },\n  { start: 9622, end: 9631, prop: \"N\" },\n  { start: 9632, end: 9633, prop: \"A\" },\n  { start: 9634, end: 9634, prop: \"N\" },\n  { start: 9635, end: 9641, prop: \"A\" },\n  { start: 9642, end: 9649, prop: \"N\" },\n  { start: 9650, end: 9651, prop: \"A\" },\n  { start: 9652, end: 9653, prop: \"N\" },\n  { start: 9654, end: 9655, prop: \"A\" },\n  { start: 9656, end: 9659, prop: \"N\" },\n  { start: 9660, end: 9661, prop: \"A\" },\n  { start: 9662, end: 9663, prop: \"N\" },\n  { start: 9664, end: 9665, prop: \"A\" },\n  { start: 9666, end: 9669, prop: \"N\" },\n  { start: 9670, end: 9672, prop: \"A\" },\n  { start: 9673, end: 9674, prop: \"N\" },\n  { start: 9675, end: 9675, prop: \"A\" },\n  { start: 9676, end: 9677, prop: \"N\" },\n  { start: 9678, end: 9681, prop: \"A\" },\n  { start: 9682, end: 9697, prop: \"N\" },\n  { start: 9698, end: 9701, prop: \"A\" },\n  { start: 9702, end: 9710, prop: \"N\" },\n  { start: 9711, end: 9711, prop: \"A\" },\n  { start: 9712, end: 9724, prop: \"N\" },\n  { start: 9725, end: 9726, prop: \"W\" },\n  { start: 9727, end: 9732, prop: \"N\" },\n  { start: 9733, end: 9734, prop: \"A\" },\n  { start: 9735, end: 9736, prop: \"N\" },\n  { start: 9737, end: 9737, prop: \"A\" },\n  { start: 9738, end: 9741, prop: \"N\" },\n  { start: 9742, end: 9743, prop: \"A\" },\n  { start: 9744, end: 9747, prop: \"N\" },\n  { start: 9748, end: 9749, prop: \"W\" },\n  { start: 9750, end: 9755, prop: \"N\" },\n  { start: 9756, end: 9756, prop: \"A\" },\n  { start: 9757, end: 9757, prop: \"N\" },\n  { start: 9758, end: 9758, prop: \"A\" },\n  { start: 9759, end: 9791, prop: \"N\" },\n  { start: 9792, end: 9792, prop: \"A\" },\n  { start: 9793, end: 9793, prop: \"N\" },\n  { start: 9794, end: 9794, prop: \"A\" },\n  { start: 9795, end: 9799, prop: \"N\" },\n  { start: 9800, end: 9811, prop: \"W\" },\n  { start: 9812, end: 9823, prop: \"N\" },\n  { start: 9824, end: 9825, prop: \"A\" },\n  { start: 9826, end: 9826, prop: \"N\" },\n  { start: 9827, end: 9829, prop: \"A\" },\n  { start: 9830, end: 9830, prop: \"N\" },\n  { start: 9831, end: 9834, prop: \"A\" },\n  { start: 9835, end: 9835, prop: \"N\" },\n  { start: 9836, end: 9837, prop: \"A\" },\n  { start: 9838, end: 9838, prop: \"N\" },\n  { start: 9839, end: 9839, prop: \"A\" },\n  { start: 9840, end: 9854, prop: \"N\" },\n  { start: 9855, end: 9855, prop: \"W\" },\n  { start: 9856, end: 9874, prop: \"N\" },\n  { start: 9875, end: 9875, prop: \"W\" },\n  { start: 9876, end: 9885, prop: \"N\" },\n  { start: 9886, end: 9887, prop: \"A\" },\n  { start: 9888, end: 9888, prop: \"N\" },\n  { start: 9889, end: 9889, prop: \"W\" },\n  { start: 9890, end: 9897, prop: \"N\" },\n  { start: 9898, end: 9899, prop: \"W\" },\n  { start: 9900, end: 9916, prop: \"N\" },\n  { start: 9917, end: 9918, prop: \"W\" },\n  { start: 9919, end: 9919, prop: \"A\" },\n  { start: 9920, end: 9923, prop: \"N\" },\n  { start: 9924, end: 9925, prop: \"W\" },\n  { start: 9926, end: 9933, prop: \"A\" },\n  { start: 9934, end: 9934, prop: \"W\" },\n  { start: 9935, end: 9939, prop: \"A\" },\n  { start: 9940, end: 9940, prop: \"W\" },\n  { start: 9941, end: 9953, prop: \"A\" },\n  { start: 9954, end: 9954, prop: \"N\" },\n  { start: 9955, end: 9955, prop: \"A\" },\n  { start: 9956, end: 9959, prop: \"N\" },\n  { start: 9960, end: 9961, prop: \"A\" },\n  { start: 9962, end: 9962, prop: \"W\" },\n  { start: 9963, end: 9969, prop: \"A\" },\n  { start: 9970, end: 9971, prop: \"W\" },\n  { start: 9972, end: 9972, prop: \"A\" },\n  { start: 9973, end: 9973, prop: \"W\" },\n  { start: 9974, end: 9977, prop: \"A\" },\n  { start: 9978, end: 9978, prop: \"W\" },\n  { start: 9979, end: 9980, prop: \"A\" },\n  { start: 9981, end: 9981, prop: \"W\" },\n  { start: 9982, end: 9983, prop: \"A\" },\n  { start: 9984, end: 9988, prop: \"N\" },\n  { start: 9989, end: 9989, prop: \"W\" },\n  { start: 9990, end: 9993, prop: \"N\" },\n  { start: 9994, end: 9995, prop: \"W\" },\n  { start: 9996, end: 10023, prop: \"N\" },\n  { start: 10024, end: 10024, prop: \"W\" },\n  { start: 10025, end: 10044, prop: \"N\" },\n  { start: 10045, end: 10045, prop: \"A\" },\n  { start: 10046, end: 10059, prop: \"N\" },\n  { start: 10060, end: 10060, prop: \"W\" },\n  { start: 10061, end: 10061, prop: \"N\" },\n  { start: 10062, end: 10062, prop: \"W\" },\n  { start: 10063, end: 10066, prop: \"N\" },\n  { start: 10067, end: 10069, prop: \"W\" },\n  { start: 10070, end: 10070, prop: \"N\" },\n  { start: 10071, end: 10071, prop: \"W\" },\n  { start: 10072, end: 10101, prop: \"N\" },\n  { start: 10102, end: 10111, prop: \"A\" },\n  { start: 10112, end: 10132, prop: \"N\" },\n  { start: 10133, end: 10135, prop: \"W\" },\n  { start: 10136, end: 10159, prop: \"N\" },\n  { start: 10160, end: 10160, prop: \"W\" },\n  { start: 10161, end: 10174, prop: \"N\" },\n  { start: 10175, end: 10175, prop: \"W\" },\n  { start: 10176, end: 10213, prop: \"N\" },\n  { start: 10214, end: 10221, prop: \"Na\" },\n  { start: 10222, end: 10628, prop: \"N\" },\n  { start: 10629, end: 10630, prop: \"Na\" },\n  { start: 10631, end: 11034, prop: \"N\" },\n  { start: 11035, end: 11036, prop: \"W\" },\n  { start: 11037, end: 11087, prop: \"N\" },\n  { start: 11088, end: 11088, prop: \"W\" },\n  { start: 11089, end: 11092, prop: \"N\" },\n  { start: 11093, end: 11093, prop: \"W\" },\n  { start: 11094, end: 11097, prop: \"A\" },\n  { start: 11098, end: 11903, prop: \"N\" },\n  { start: 11904, end: 11929, prop: \"W\" },\n  { start: 11930, end: 11930, prop: \"N\" },\n  { start: 11931, end: 12019, prop: \"W\" },\n  { start: 12020, end: 12031, prop: \"N\" },\n  { start: 12032, end: 12245, prop: \"W\" },\n  { start: 12246, end: 12271, prop: \"N\" },\n  { start: 12272, end: 12283, prop: \"W\" },\n  { start: 12284, end: 12287, prop: \"N\" },\n  { start: 12288, end: 12288, prop: \"F\" },\n  { start: 12289, end: 12350, prop: \"W\" },\n  { start: 12351, end: 12352, prop: \"N\" },\n  { start: 12353, end: 12438, prop: \"W\" },\n  { start: 12439, end: 12440, prop: \"N\" },\n  { start: 12441, end: 12543, prop: \"W\" },\n  { start: 12544, end: 12548, prop: \"N\" },\n  { start: 12549, end: 12591, prop: \"W\" },\n  { start: 12592, end: 12592, prop: \"N\" },\n  { start: 12593, end: 12686, prop: \"W\" },\n  { start: 12687, end: 12687, prop: \"N\" },\n  { start: 12688, end: 12730, prop: \"W\" },\n  { start: 12731, end: 12735, prop: \"N\" },\n  { start: 12736, end: 12771, prop: \"W\" },\n  { start: 12772, end: 12783, prop: \"N\" },\n  { start: 12784, end: 12830, prop: \"W\" },\n  { start: 12831, end: 12831, prop: \"N\" },\n  { start: 12832, end: 12871, prop: \"W\" },\n  { start: 12872, end: 12879, prop: \"A\" },\n  { start: 12880, end: 19903, prop: \"W\" },\n  { start: 19904, end: 19967, prop: \"N\" },\n  { start: 19968, end: 42124, prop: \"W\" },\n  { start: 42125, end: 42127, prop: \"N\" },\n  { start: 42128, end: 42182, prop: \"W\" },\n  { start: 42183, end: 43359, prop: \"N\" },\n  { start: 43360, end: 43388, prop: \"W\" },\n  { start: 43389, end: 44031, prop: \"N\" },\n  { start: 44032, end: 55203, prop: \"W\" },\n  { start: 55204, end: 57343, prop: \"N\" },\n  { start: 57344, end: 63743, prop: \"A\" },\n  { start: 63744, end: 64255, prop: \"W\" },\n  { start: 64256, end: 65023, prop: \"N\" },\n  { start: 65024, end: 65039, prop: \"A\" },\n  { start: 65040, end: 65049, prop: \"W\" },\n  { start: 65050, end: 65071, prop: \"N\" },\n  { start: 65072, end: 65106, prop: \"W\" },\n  { start: 65107, end: 65107, prop: \"N\" },\n  { start: 65108, end: 65126, prop: \"W\" },\n  { start: 65127, end: 65127, prop: \"N\" },\n  { start: 65128, end: 65131, prop: \"W\" },\n  { start: 65132, end: 65280, prop: \"N\" },\n  { start: 65281, end: 65376, prop: \"F\" },\n  { start: 65377, end: 65470, prop: \"H\" },\n  { start: 65471, end: 65473, prop: \"N\" },\n  { start: 65474, end: 65479, prop: \"H\" },\n  { start: 65480, end: 65481, prop: \"N\" },\n  { start: 65482, end: 65487, prop: \"H\" },\n  { start: 65488, end: 65489, prop: \"N\" },\n  { start: 65490, end: 65495, prop: \"H\" },\n  { start: 65496, end: 65497, prop: \"N\" },\n  { start: 65498, end: 65500, prop: \"H\" },\n  { start: 65501, end: 65503, prop: \"N\" },\n  { start: 65504, end: 65510, prop: \"F\" },\n  { start: 65511, end: 65511, prop: \"N\" },\n  { start: 65512, end: 65518, prop: \"H\" },\n  { start: 65519, end: 65532, prop: \"N\" },\n  { start: 65533, end: 65533, prop: \"A\" },\n  { start: 65534, end: 94175, prop: \"N\" },\n  { start: 94176, end: 94179, prop: \"W\" },\n  { start: 94180, end: 94207, prop: \"N\" },\n  { start: 94208, end: 100343, prop: \"W\" },\n  { start: 100344, end: 100351, prop: \"N\" },\n  { start: 100352, end: 101106, prop: \"W\" },\n  { start: 101107, end: 110591, prop: \"N\" },\n  { start: 110592, end: 110878, prop: \"W\" },\n  { start: 110879, end: 110927, prop: \"N\" },\n  { start: 110928, end: 110930, prop: \"W\" },\n  { start: 110931, end: 110947, prop: \"N\" },\n  { start: 110948, end: 110951, prop: \"W\" },\n  { start: 110952, end: 110959, prop: \"N\" },\n  { start: 110960, end: 111355, prop: \"W\" },\n  { start: 111356, end: 126979, prop: \"N\" },\n  { start: 126980, end: 126980, prop: \"W\" },\n  { start: 126981, end: 127182, prop: \"N\" },\n  { start: 127183, end: 127183, prop: \"W\" },\n  { start: 127184, end: 127231, prop: \"N\" },\n  { start: 127232, end: 127242, prop: \"A\" },\n  { start: 127243, end: 127247, prop: \"N\" },\n  { start: 127248, end: 127277, prop: \"A\" },\n  { start: 127278, end: 127279, prop: \"N\" },\n  { start: 127280, end: 127337, prop: \"A\" },\n  { start: 127338, end: 127343, prop: \"N\" },\n  { start: 127344, end: 127373, prop: \"A\" },\n  { start: 127374, end: 127374, prop: \"W\" },\n  { start: 127375, end: 127376, prop: \"A\" },\n  { start: 127377, end: 127386, prop: \"W\" },\n  { start: 127387, end: 127404, prop: \"A\" },\n  { start: 127405, end: 127487, prop: \"N\" },\n  { start: 127488, end: 127490, prop: \"W\" },\n  { start: 127491, end: 127503, prop: \"N\" },\n  { start: 127504, end: 127547, prop: \"W\" },\n  { start: 127548, end: 127551, prop: \"N\" },\n  { start: 127552, end: 127560, prop: \"W\" },\n  { start: 127561, end: 127567, prop: \"N\" },\n  { start: 127568, end: 127569, prop: \"W\" },\n  { start: 127570, end: 127583, prop: \"N\" },\n  { start: 127584, end: 127589, prop: \"W\" },\n  { start: 127590, end: 127743, prop: \"N\" },\n  { start: 127744, end: 127776, prop: \"W\" },\n  { start: 127777, end: 127788, prop: \"N\" },\n  { start: 127789, end: 127797, prop: \"W\" },\n  { start: 127798, end: 127798, prop: \"N\" },\n  { start: 127799, end: 127868, prop: \"W\" },\n  { start: 127869, end: 127869, prop: \"N\" },\n  { start: 127870, end: 127891, prop: \"W\" },\n  { start: 127892, end: 127903, prop: \"N\" },\n  { start: 127904, end: 127946, prop: \"W\" },\n  { start: 127947, end: 127950, prop: \"N\" },\n  { start: 127951, end: 127955, prop: \"W\" },\n  { start: 127956, end: 127967, prop: \"N\" },\n  { start: 127968, end: 127984, prop: \"W\" },\n  { start: 127985, end: 127987, prop: \"N\" },\n  { start: 127988, end: 127988, prop: \"W\" },\n  { start: 127989, end: 127991, prop: \"N\" },\n  { start: 127992, end: 128062, prop: \"W\" },\n  { start: 128063, end: 128063, prop: \"N\" },\n  { start: 128064, end: 128064, prop: \"W\" },\n  { start: 128065, end: 128065, prop: \"N\" },\n  { start: 128066, end: 128252, prop: \"W\" },\n  { start: 128253, end: 128254, prop: \"N\" },\n  { start: 128255, end: 128317, prop: \"W\" },\n  { start: 128318, end: 128330, prop: \"N\" },\n  { start: 128331, end: 128334, prop: \"W\" },\n  { start: 128335, end: 128335, prop: \"N\" },\n  { start: 128336, end: 128359, prop: \"W\" },\n  { start: 128360, end: 128377, prop: \"N\" },\n  { start: 128378, end: 128378, prop: \"W\" },\n  { start: 128379, end: 128404, prop: \"N\" },\n  { start: 128405, end: 128406, prop: \"W\" },\n  { start: 128407, end: 128419, prop: \"N\" },\n  { start: 128420, end: 128420, prop: \"W\" },\n  { start: 128421, end: 128506, prop: \"N\" },\n  { start: 128507, end: 128591, prop: \"W\" },\n  { start: 128592, end: 128639, prop: \"N\" },\n  { start: 128640, end: 128709, prop: \"W\" },\n  { start: 128710, end: 128715, prop: \"N\" },\n  { start: 128716, end: 128716, prop: \"W\" },\n  { start: 128717, end: 128719, prop: \"N\" },\n  { start: 128720, end: 128722, prop: \"W\" },\n  { start: 128723, end: 128724, prop: \"N\" },\n  { start: 128725, end: 128725, prop: \"W\" },\n  { start: 128726, end: 128746, prop: \"N\" },\n  { start: 128747, end: 128748, prop: \"W\" },\n  { start: 128749, end: 128755, prop: \"N\" },\n  { start: 128756, end: 128762, prop: \"W\" },\n  { start: 128763, end: 128991, prop: \"N\" },\n  { start: 128992, end: 129003, prop: \"W\" },\n  { start: 129004, end: 129292, prop: \"N\" },\n  { start: 129293, end: 129393, prop: \"W\" },\n  { start: 129394, end: 129394, prop: \"N\" },\n  { start: 129395, end: 129398, prop: \"W\" },\n  { start: 129399, end: 129401, prop: \"N\" },\n  { start: 129402, end: 129442, prop: \"W\" },\n  { start: 129443, end: 129444, prop: \"N\" },\n  { start: 129445, end: 129450, prop: \"W\" },\n  { start: 129451, end: 129453, prop: \"N\" },\n  { start: 129454, end: 129482, prop: \"W\" },\n  { start: 129483, end: 129484, prop: \"N\" },\n  { start: 129485, end: 129535, prop: \"W\" },\n  { start: 129536, end: 129647, prop: \"N\" },\n  { start: 129648, end: 129651, prop: \"W\" },\n  { start: 129652, end: 129655, prop: \"N\" },\n  { start: 129656, end: 129658, prop: \"W\" },\n  { start: 129659, end: 129663, prop: \"N\" },\n  { start: 129664, end: 129666, prop: \"W\" },\n  { start: 129667, end: 129679, prop: \"N\" },\n  { start: 129680, end: 129685, prop: \"W\" },\n  { start: 129686, end: 131071, prop: \"N\" },\n  { start: 131072, end: 196605, prop: \"W\" },\n  { start: 196606, end: 196607, prop: \"N\" },\n  { start: 196608, end: 262141, prop: \"W\" },\n  { start: 262142, end: 917759, prop: \"N\" },\n  { start: 917760, end: 917999, prop: \"A\" },\n  { start: 918000, end: 983039, prop: \"N\" },\n  { start: 983040, end: 1048573, prop: \"A\" },\n  { start: 1048574, end: 1048575, prop: \"N\" },\n  { start: 1048576, end: 1114109, prop: \"A\" },\n  { start: 1114110, end: 1114111, prop: \"N\" },\n];\n/* END */\n\nexport const version = \"12.1.0\";\n", "import { defs } from \"./defs.js\";\n\n/**\n * Returns The EAW property of a code point.\n * @private\n * @param {string} codePoint A code point\n * @return {string} The EAW property of the specified code point\n */\nfunction _getEAWOfCodePoint(codePoint) {\n  let min = 0;\n  let max = defs.length - 1;\n  while (min !== max) {\n    const i   = min + ((max - min) >> 1);\n    const def = defs[i];\n    if (codePoint < def.start) {\n      max = i - 1;\n    } else if (codePoint > def.end) {\n      min = i + 1;\n    } else {\n      return def.prop;\n    }\n  }\n  return defs[min].prop;\n}\n\n/**\n * Returns the EAW property of a character.\n * @param {string} str A string in which the character is contained\n * @param {number} [at = 0] The position (in code unit) of the character in the string\n * @return {string} The EAW property of the specified character\n * @example\n * import { getEAW } from \"meaw\";\n *\n * // Narrow\n * assert(getEAW(\"A\") === \"Na\");\n * // Wide\n * assert(getEAW(\"あ\") === \"W\");\n * assert(getEAW(\"安\") === \"W\");\n * assert(getEAW(\"🍣\") === \"W\");\n * // Fullwidth\n * assert(getEAW(\"Ａ\") === \"F\");\n * // Halfwidth\n * assert(getEAW(\"ｱ\") === \"H\");\n * // Ambiguous\n * assert(getEAW(\"∀\") === \"A\");\n * assert(getEAW(\"→\") === \"A\");\n * assert(getEAW(\"Ω\") === \"A\");\n * assert(getEAW(\"Я\") === \"A\");\n * // Neutral\n * assert(getEAW(\"ℵ\") === \"N\");\n *\n * // a position (in code unit) can be specified\n * assert(getEAW(\"ℵAあＡｱ∀\", 2) === \"W\");\n */\nexport function getEAW(str, at) {\n  const codePoint = str.codePointAt(at || 0);\n  return codePoint === undefined\n    ? undefined\n    : _getEAWOfCodePoint(codePoint);\n}\n", "import { getEAW } from \"./get-eaw.js\";\n\nconst defaultWidthMap = {\n  \"N\" : 1,\n  \"Na\": 1,\n  \"W\" : 2,\n  \"F\" : 2,\n  \"H\" : 1,\n  \"A\" : 1,\n};\n\n/**\n * Computes width of a string based on the EAW properties of its characters.\n * By default characters with property Wide (W) or Fullwidth (F) are treated as wide (= 2)\n * and the others are as narrow (= 1)\n * @param {string} str A string to compute width\n * @param {Object<string, number> | undefined} [widthMap = undefined]\n *   An object which represents a map from an EAW property to a character width\n * @return {number} The computed width\n * @example\n * import { computeWidth } from \"meaw\";\n *\n * assert(computeWidth(\"Aあ🍣Ω\") === 6);\n * // custom widths can be specified by an object\n * assert(computeWidth(\"Aあ🍣Ω\", { \"A\": 2 }) === 7);\n */\nexport function computeWidth(str, widthMap) {\n  const map = widthMap\n    ? Object.assign({}, defaultWidthMap, widthMap)\n    : defaultWidthMap;\n  let width = 0;\n  for (const char of str) {\n    width += map[getEAW(char)];\n  }\n  return width;\n}\n", "const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n", "const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n", "const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport {CommandManager} from './util/commandManager';\nimport * as commands from './commands/index';\nimport {Logger} from './util/logger';\nimport {Python} from './util/python';\nimport {Configuration} from './util/configuration';\nimport * as EditorFeatures from './editor/extension';\nimport * as LinterFeatures from './linter/extension';\nimport {setGlobalState, setWorkspaceState} from './util/stateUtils';\nimport {initConfig} from './util/config';\nimport {Commands} from './constants';\nimport container from './inversify.config';\nimport {NAMES, TYPES} from './types';\nimport {updateActivationCount} from './rating';\n\nlet extensionPath = '';\n\nexport function getExtensionPath(): string {\n    return extensionPath;\n}\n\nexport async function activate(\n    context: vscode.ExtensionContext\n): Promise<void> {\n    setGlobalState(context.globalState);\n    setWorkspaceState(context.workspaceState);\n\n    await initConfig(context);\n\n    extensionPath = context.extensionPath;\n\n    const logger = container.getNamed<Logger>(TYPES.Logger, NAMES.Main);\n    logger.log(\n        'Please visit https://docs.restructuredtext.net to learn how to configure the extension.'\n    );\n\n    const configuration = container.get<Configuration>(TYPES.Configuration);\n    const conflicting = configuration.getConflictingExtensions();\n    for (const element of conflicting) {\n        const found = vscode.extensions.getExtension(element);\n        if (found) {\n            const message = `Found conflicting extension ${found.packageJSON.displayName}(${element}). Do you want to uninstall it now?`;\n            logger.log(`found ${element}`);\n            const choice = await vscode.window.showErrorMessage(\n                message,\n                'Yes',\n                'No'\n            );\n            if (choice === 'Yes') {\n                await vscode.commands.executeCommand(\n                    Commands.OPEN_EXTENSION,\n                    element\n                );\n                await vscode.commands.executeCommand(\n                    Commands.UNINSTALL_EXTENSION,\n                    element\n                );\n                await vscode.commands.executeCommand(Commands.RELOAD_WINDOW);\n            } else {\n                vscode.window.showWarningMessage(\n                    'Since conflicting extension is not uninstalled, extension activation ends now.'\n                );\n                return;\n            }\n        }\n    }\n\n    const recommended = configuration.getRecommendedExtensions();\n    for (const element of recommended) {\n        const found = vscode.extensions.getExtension(element);\n        if (!found && !configuration.getPythonRecommendationDisabled()) {\n            const message = `This extension depends on ${element}. Do you want to install it now?`;\n            const choice = await vscode.window.showInformationMessage(\n                message,\n                'Install',\n                'Not now',\n                'Do not show again'\n            );\n            if (choice === 'Install') {\n                logger.log(`Started to install ${element}..`);\n                await vscode.commands.executeCommand(\n                    Commands.OPEN_EXTENSION,\n                    element\n                );\n                if (element === 'swyddfa.esbonio') {\n                    await vscode.commands.executeCommand(\n                        Commands.INSTALL_EXTENSION,\n                        element,\n                        {installPreReleaseVersion: true}\n                    );\n                } else {\n                    await vscode.commands.executeCommand(\n                        Commands.INSTALL_EXTENSION,\n                        element\n                    );\n                }\n            } else if (choice === 'Do not show again') {\n                logger.log('Disabled missing dependency prompt.');\n                await configuration.setPythonRecommendationDisabled();\n            }\n        }\n    }\n\n    const minor = require('semver/functions/minor');\n    const minorVersion = minor(context.extension.packageJSON.version);\n    if (minorVersion % 2 !== 0) {\n        vscode.window.showInformationMessage(\n            'Rollbar logging is enabled in preview release. Switch to a stable release to disable it.'\n        );\n        await logger.logPlatform(context.extension.packageJSON.version);\n    }\n\n    const python = container.get<Python>(TYPES.Python);\n    await python.setup();\n\n    await EditorFeatures.activate(context);\n\n    await LinterFeatures.activate(context, python, logger);\n\n    const commandManager = new CommandManager();\n    context.subscriptions.push(commandManager);\n    commandManager.register(new commands.MoveCursorToPositionCommand());\n    commandManager.register(new commands.OpenDocumentLinkCommand());\n\n    context.subscriptions.push(\n        vscode.workspace.onDidChangeConfiguration(() => {\n            logger.updateConfiguration();\n        })\n    );\n\n    await updateActivationCount(context);\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport interface Command {\n    readonly id: string;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    execute(...args: any[]): void;\n}\n\nexport class CommandManager {\n    private readonly commands = new Map<string, vscode.Disposable>();\n\n    public dispose() {\n        for (const registration of this.commands.values()) {\n            registration.dispose();\n        }\n        this.commands.clear();\n    }\n\n    public register<T extends Command>(command: T): T {\n        this.registerCommand(command.id, command.execute, command);\n        return command;\n    }\n\n    private registerCommand(\n        id: string,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        impl: (...args: any[]) => void,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        thisArg?: any\n    ) {\n        if (this.commands.has(id)) {\n            return;\n        }\n\n        this.commands.set(\n            id,\n            vscode.commands.registerCommand(id, impl, thisArg)\n        );\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as path from 'path';\n\nimport {Command} from '../util/commandManager';\nimport {isRSTFile} from '../util/file';\n\nexport interface OpenDocumentLinkArgs {\n    path: string;\n    fragment: string;\n}\n\nexport class OpenDocumentLinkCommand implements Command {\n    private static readonly id = '_rst.openDocumentLink';\n    public readonly id = OpenDocumentLinkCommand.id;\n\n    public static createCommandUri(path: string, fragment: string): vscode.Uri {\n        return vscode.Uri.parse(\n            `command:${OpenDocumentLinkCommand.id}?${encodeURIComponent(\n                JSON.stringify({path, fragment})\n            )}`\n        );\n    }\n\n    public constructor() {}\n\n    public execute(args: OpenDocumentLinkArgs) {\n        const p = decodeURIComponent(args.path);\n        return this.tryOpen(p, args).catch(() => {\n            if (path.extname(p) === '') {\n                return this.tryOpen(p + '.md', args);\n            }\n            const resource = vscode.Uri.file(p);\n            return Promise.resolve(void 0)\n                .then(() =>\n                    vscode.commands.executeCommand('vscode.open', resource)\n                )\n                .then(() => void 0);\n        });\n    }\n\n    private async tryOpen(path: string, args: OpenDocumentLinkArgs) {\n        const resource = vscode.Uri.file(path);\n        if (\n            vscode.window.activeTextEditor &&\n            isRSTFile(vscode.window.activeTextEditor.document) &&\n            vscode.window.activeTextEditor.document.uri.fsPath ===\n                resource.fsPath\n        ) {\n            return this.tryRevealLine(\n                vscode.window.activeTextEditor,\n                args.fragment\n            );\n        } else {\n            return vscode.workspace\n                .openTextDocument(resource)\n                .then(vscode.window.showTextDocument)\n                .then(editor => this.tryRevealLine(editor, args.fragment));\n        }\n    }\n\n    private async tryRevealLine(editor: vscode.TextEditor, fragment?: string) {\n        if (editor && fragment) {\n            const lineNumberFragment = fragment.match(/^L(\\d+)$/i);\n            if (lineNumberFragment) {\n                const line = +lineNumberFragment[1] - 1;\n                if (!isNaN(line)) {\n                    return editor.revealRange(\n                        new vscode.Range(line, 0, line, 0),\n                        vscode.TextEditorRevealType.AtTop\n                    );\n                }\n            }\n        }\n    }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function isRSTFile(document: vscode.TextDocument) {\n    return document.languageId === 'restructuredtext';\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nimport {Command} from '../util/commandManager';\n\nexport class MoveCursorToPositionCommand implements Command {\n    public readonly id = '_rst.moveCursorToPosition';\n\n    public execute(line: number, character: number) {\n        if (!vscode.window.activeTextEditor) {\n            return;\n        }\n        const position = new vscode.Position(line, character);\n        const selection = new vscode.Selection(position, position);\n        vscode.window.activeTextEditor.revealRange(selection);\n        vscode.window.activeTextEditor.selection = selection;\n    }\n}\n", "import * as vscode from 'vscode';\nimport {\n    key_alt_enter,\n    key_enter,\n    key_shift_enter,\n    key_shift_tab,\n    key_tab,\n} from './commands';\n\nimport {EditorCommands, VSCodeInput} from './link';\nimport {TableEditor} from './tableEditor';\nimport {underline} from './underline';\nimport * as listEditing from './listEditing';\nimport {setContext} from './setContext';\n\nexport async function activate(context: vscode.ExtensionContext) {\n    // Run it once the first time.\n    setContext();\n    vscode.workspace.onDidCloseTextDocument(() => {\n        setContext();\n    });\n    vscode.window.onDidChangeActiveTextEditor(() => {\n        setContext();\n    });\n    vscode.window.onDidChangeTextEditorSelection(() => {\n        setContext();\n    });\n\n    const editorCommands = new EditorCommands(new VSCodeInput());\n    editorCommands.register(context);\n\n    // Section creation support.\n    context.subscriptions.push(\n        vscode.commands.registerTextEditorCommand(\n            'restructuredtext.features.underline.underline',\n            underline\n        ),\n        vscode.commands.registerTextEditorCommand(\n            'restructuredtext.features.underline.underlineReverse',\n            (textEditor, edit) => underline(textEditor, edit, true)\n        )\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.table.createGrid', () => {\n            const editor = vscode.window.activeTextEditor;\n            if (!editor) {\n                return;\n            }\n            const table = new TableEditor(editor);\n            table.createEmptyGrid();\n        })\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.table.dataToTable', () => {\n            const editor = vscode.window.activeTextEditor;\n            if (!editor) {\n                return;\n            }\n            const table = new TableEditor(editor);\n            table.dataToTable();\n        })\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.key.enter', () => {\n            key_enter();\n        })\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.key.shift.enter', () => {\n            key_shift_enter();\n        })\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.key.alt.enter', () => {\n            key_alt_enter();\n        })\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.key.tab', () => {\n            key_tab();\n        })\n    );\n\n    context.subscriptions.push(\n        vscode.commands.registerCommand('resttext.key.shift.tab', () => {\n            key_shift_tab();\n        })\n    );\n\n    listEditing.activate(context);\n}\n", "// ============================================================\n// Copyright (c) 2021 Tatsuya Nakamori. All rights reserved.\n// See LICENSE in the project root for license information.\n// ============================================================\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nimport * as util from './util';\n//import * as listEditor from './listEditor'\nimport * as tableEditor from './tableEditor';\n//import * as completionItemProvider from './completionItemProvider'\n\nexport async function insertRelPath(pathTo: string, withExt: boolean) {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    let pathFrom = editor.document.uri.fsPath;\n    pathFrom = path.dirname(pathFrom);\n\n    let relPath = path.relative(pathFrom, pathTo);\n    relPath = relPath.replace(/\\\\/g, '/');\n\n    if (!withExt) {\n        const parse = path.parse(relPath);\n        if (parse.dir) {\n            relPath = `${parse.dir}/${parse.name}`;\n        } else {\n            relPath = parse.name;\n        }\n    }\n\n    await editor.edit(editBuilder => {\n        editBuilder.replace(editor.selection, relPath);\n    });\n    const selectionEnd = editor.selection.end;\n    editor.selection = new vscode.Selection(selectionEnd, selectionEnd);\n\n    vscode.window.showTextDocument(editor.document);\n}\n\nexport async function bold() {\n    const removed: boolean = await _removeDecoChar('bold');\n    if (!removed) {\n        _addDecorationChar('**');\n    }\n}\n\nexport async function italic() {\n    const removed: boolean = await _removeDecoChar('italic');\n    if (!removed) {\n        _addDecorationChar('*');\n    }\n}\n\nexport async function inlineRaw() {\n    const removed: boolean = await _removeDecoChar('inlineRaw');\n    if (!removed) {\n        _addDecorationChar('``');\n    }\n}\n\nasync function _addDecorationChar(decoChar: string) {\n    // Adds a decorative character to both sides of the selected character.\n    // \u9078\u629E\u3055\u308C\u3066\u3044\u308B\u6587\u5B57\u306E\u4E21\u96A3\u306B\u88C5\u98FE\u6587\u5B57\u3092\u8FFD\u52A0\u3057\u307E\u3059\u3002\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    const document = editor.document;\n    const selections = editor.selections;\n\n    const insertTextList: string[] = [];\n    for (const selection of selections) {\n        const selBeforeChr = util.getTextAtOffsetPosition(\n            document,\n            selection.start,\n            -1\n        );\n        const selAfterChr = util.getTextAtOffsetPosition(\n            document,\n            selection.end,\n            1\n        );\n\n        let addBefore = decoChar;\n        let addAfter = decoChar;\n        if (selBeforeChr && selBeforeChr !== ' ') {\n            addBefore = ` ${decoChar}`;\n        }\n        if (selAfterChr && selAfterChr !== ' ') {\n            addAfter = `${decoChar} `;\n        }\n\n        const text = document.getText(selection);\n        insertTextList.push(`${addBefore}${text}${addAfter}`);\n    }\n\n    editor.edit(editBuilder => {\n        for (let i = 0; i < selections.length; i++) {\n            editBuilder.replace(selections[i], insertTextList[i]);\n        }\n    });\n}\n\nasync function _removeDecoChar(\n    decoType: 'bold' | 'italic' | 'inlineRaw'\n): Promise<boolean> {\n    function _removeDecoCharOneLine(\n        line: string,\n        startCharacter: number,\n        endCharacter: number\n    ) {\n        if (startCharacter === endCharacter && endCharacter > line.length - 1) {\n            startCharacter--;\n            endCharacter--;\n        }\n        const lineSplit = line.split('');\n\n        let regDecoChar: RegExp;\n        if (decoType === 'bold') {\n            regDecoChar =\n                /(?<frontText>.*?)(?<frontDeco>(^|\\s)\\*\\*)(?=\\S)(?!\\*{2,})(?<text>.*?)(?<=\\S)(?<!\\*{2,})(?<backDeco>\\*\\*(\\s|$))(?<backText>.*)/;\n        } else if (decoType === 'italic') {\n            regDecoChar =\n                /(?<frontText>.*?)(?<frontDeco>(^|\\s)\\*)(?=\\S)(?!\\*{1,})(?<text>.*?)(?<=\\S)(?<!\\*{1,})(?<backDeco>\\*(\\s|$))(?<backText>.*)/;\n        } else if (decoType === 'inlineRaw') {\n            regDecoChar =\n                /(?<frontText>.*?)(?<frontDeco>(^|\\s)``)(?=\\S)(?!`{2,})(?<text>.*?)(?<=\\S)(?<!`{2,})(?<backDeco>``(\\s|$))(?<backText>.*)/;\n        } else {\n            // The TypeScript lint error messages are annoying, so I put in this else block (a block that is not really needed).\n            // TypeScript\u306Elint\u306E\u30A8\u30E9\u30FC\u30E1\u30C3\u30BB\u30FC\u30B8\u304C\u3046\u308B\u3055\u3044\u306E\u3067\u3001\u3053\u306Eelse\u30D6\u30ED\u30C3\u30AF\u3092\u5165\u308C\u3066\u3044\u308B(\u672C\u6765\u306F\u5FC5\u8981\u306A\u3044\u30D6\u30ED\u30C3\u30AF)\n            regDecoChar = new RegExp('');\n        }\n\n        interface RemovedDecoCharInfo {\n            removedChar: string;\n            position: 'front' | 'back';\n        }\n        const removedDecoCharsInfo: (string | RemovedDecoCharInfo)[] = [];\n        // Mark whether the placement of each deco character is in the \"front\" or \"back\".\n        // \u5404\u30C7\u30B3\u6587\u5B57\u306E\u914D\u7F6E\u304C\u3001\"front\"\u306B\u3042\u308B\u306E\u304B\"back\"\u306B\u3042\u308B\u306E\u304B\u3092\u30DE\u30FC\u30AD\u30F3\u30B0\u3059\u308B\n        // Finally, generate an array separated by a single character (the marked character will contain a RemovedDecoCharInfo object).\n        // \u6700\u7D42\u7684\u306B\u30011\u6587\u5B57\u305A\u3064\u533A\u5207\u3063\u305F\u914D\u5217\u3092\u751F\u6210\u3059\u308B(\u30DE\u30FC\u30AD\u30F3\u30B0\u3057\u305F\u6587\u5B57\u306F\u3001RemovedDecoCharInfo\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u5165\u308B)\n        // * Repeat if \"regDecoChar\" matches. \u203B\"regDecoChar\"\u304C\u30DE\u30C3\u30C1\u3059\u308B\u9593\u3001\u7E70\u308A\u8FD4\u3057\u3092\u884C\u3044\u307E\u3059\u3002\n        do {\n            const match = regDecoChar.exec(line);\n            if (!match) {\n                removedDecoCharsInfo.push(line);\n                break;\n            }\n            const matchGrp = match.groups;\n            if (!matchGrp) {\n                break;\n            }\n\n            removedDecoCharsInfo.push(matchGrp['frontText']);\n            const frontDecoText = matchGrp['frontDeco'];\n            for (let i = 0; i < frontDecoText.length; i++) {\n                removedDecoCharsInfo.push({\n                    removedChar: frontDecoText[i],\n                    position: 'front',\n                });\n            }\n            removedDecoCharsInfo.push(matchGrp['text']);\n            const backDecoText = matchGrp['backDeco'];\n            for (let i = 0; i < backDecoText.length; i++) {\n                removedDecoCharsInfo.push({\n                    removedChar: backDecoText[i],\n                    position: 'back',\n                });\n            }\n            line = matchGrp['backText'];\n        } while (line);\n\n        let removedDecoCharSplit: (string | RemovedDecoCharInfo)[] = [];\n        for (const removedDecoChar of removedDecoCharsInfo) {\n            if (typeof removedDecoChar === 'string') {\n                removedDecoCharSplit = removedDecoCharSplit.concat(\n                    removedDecoChar.split('')\n                );\n            } else {\n                removedDecoCharSplit.push(removedDecoChar);\n            }\n        }\n\n        // From here, the actual deletion process (deciding whether to delete the deco characters or not and processing them)\n        // \u3053\u3053\u304B\u3089\u3001\u5B9F\u969B\u306E\u524A\u9664\u51E6\u7406(\u30C7\u30B3\u6587\u5B57\u3092\u524A\u9664\u3059\u308B\u304B\u3001\u3057\u306A\u3044\u304B\u3092\u5224\u65AD\u3057\u3066\u51E6\u7406\u3059\u308B)\n        interface AnalysisResults {\n            analyzedForward: string[];\n            analyzedSelRange: string[];\n            analyzedBackward: string[];\n        }\n        const analysisResults: AnalysisResults = {\n            analyzedForward: [],\n            analyzedSelRange: [],\n            analyzedBackward: [],\n        };\n        // Analyze Selection Range\n        let needForwardContinuance: false | 'front' | 'back' = false;\n        let needBackwardContinuance: false | 'front' | 'back' = false;\n        let elementsOut: (string | RemovedDecoCharInfo)[];\n        elementsOut = removedDecoCharSplit.slice(\n            startCharacter,\n            endCharacter + 1\n        );\n        for (let i = 0; i < elementsOut.length; i++) {\n            const element = elementsOut[i];\n            if (typeof element === 'string') {\n                analysisResults.analyzedSelRange.push(element);\n            } else {\n                if (i === 0) {\n                    needForwardContinuance = element.position;\n                }\n                if (i === elementsOut.length - 1) {\n                    needBackwardContinuance = element.position;\n                }\n            }\n        }\n        // Analyze Forward\n        let hasRemovedDecoChar = false;\n        let frontExclusionStatus: null | 'inExclusion' | 'finished' = null;\n        elementsOut = removedDecoCharSplit.slice(0, startCharacter);\n        elementsOut = elementsOut.reverse();\n        if (needForwardContinuance === 'front') {\n            frontExclusionStatus = 'inExclusion';\n        }\n        for (const element of elementsOut) {\n            if (typeof element === 'string') {\n                analysisResults.analyzedForward.unshift(element);\n                if (frontExclusionStatus === 'inExclusion') {\n                    frontExclusionStatus = 'finished';\n                }\n            } else {\n                if (needForwardContinuance === 'back') {\n                    if (element.position === 'front' && !frontExclusionStatus) {\n                        frontExclusionStatus = 'inExclusion';\n                    }\n                    if (frontExclusionStatus === 'finished') {\n                        analysisResults.analyzedForward.unshift(\n                            element.removedChar\n                        );\n                    }\n                } else {\n                    if (hasRemovedDecoChar) {\n                        analysisResults.analyzedForward.unshift(\n                            element.removedChar\n                        );\n                    } else if (element.position === 'back') {\n                        analysisResults.analyzedForward.unshift(\n                            element.removedChar\n                        );\n                        hasRemovedDecoChar = true;\n                    }\n                }\n            }\n        }\n        // Analyze Backward\n        hasRemovedDecoChar = false;\n        let backExclusionStatus: null | 'inExclusion' | 'finished' = null;\n        elementsOut = removedDecoCharSplit.slice(\n            endCharacter + 1,\n            lineSplit.length\n        );\n        if (needBackwardContinuance === 'back') {\n            backExclusionStatus = 'inExclusion';\n        }\n        for (const element of elementsOut) {\n            if (typeof element === 'string') {\n                analysisResults.analyzedBackward.push(element);\n                if (backExclusionStatus === 'inExclusion') {\n                    backExclusionStatus = 'finished';\n                }\n            } else {\n                if (needBackwardContinuance === 'front') {\n                    if (element.position === 'back' && !backExclusionStatus) {\n                        backExclusionStatus = 'inExclusion';\n                    }\n                    if (backExclusionStatus === 'finished') {\n                        analysisResults.analyzedBackward.push(\n                            element.removedChar\n                        );\n                    }\n                } else {\n                    if (hasRemovedDecoChar) {\n                        analysisResults.analyzedBackward.push(\n                            element.removedChar\n                        );\n                    } else if (element.position === 'front') {\n                        analysisResults.analyzedBackward.push(\n                            element.removedChar\n                        );\n                        hasRemovedDecoChar = true;\n                    }\n                }\n            }\n        }\n\n        let finalResult: string[] = [];\n        finalResult = finalResult.concat(analysisResults.analyzedForward);\n        finalResult = finalResult.concat(analysisResults.analyzedSelRange);\n        finalResult = finalResult.concat(analysisResults.analyzedBackward);\n        return finalResult.join('');\n    }\n\n    // ====================\n    // main process\n    // ====================\n    // Whether the modifier was removed or not is passed as the last return value.\n    // \u4FEE\u98FE\u6587\u5B57\u304C\u524A\u9664\u3055\u308C\u305F\u304B\u3069\u3046\u304B\u3092\u3001\u6700\u5F8C\u306B\u8FD4\u308A\u5024\u3068\u3057\u3066\u6E21\u3059\n    let _removed = false;\n\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return _removed;\n    }\n\n    const curSelections: vscode.Selection[] = [];\n    const document = editor.document;\n    const selections = editor.selections;\n    for (const selection of selections) {\n        const startLine = selection.start.line;\n        const startChar = selection.start.character;\n        const startLineEndChar = document.lineAt(startLine).range.end.character;\n        const endLine = selection.end.line;\n        const endChar = selection.end.character;\n        const endLineEndChar = document.lineAt(endLine).range.end.character;\n        curSelections.push(\n            new vscode.Selection(startLine, startChar, endLine, endChar)\n        );\n\n        // The fullRange is the selected line with start and end at the beginning and end.\n        // \u9078\u629E\u3055\u308C\u3066\u3044\u308B\u884C\u306E\u4E2D\u3067\u3001start\u3068end\u306E\u4F4D\u7F6E\u304C\u5148\u982D\u3068\u6700\u5F8C\u307E\u3067\u3042\u308B\u72B6\u614B\u306E\u3082\u306E\u3092fullRange\u3068\u3059\u308B\n        const fullRange = new vscode.Range(\n            startLine,\n            0,\n            endLine,\n            endLineEndChar\n        );\n        const fullText = document.getText(fullRange);\n        const fullLines = fullText.split(/\\r\\n|\\r|\\n/);\n\n        const newLines: string[] = [];\n        for (let i = 0; i < fullLines.length; i++) {\n            const line = fullLines[i];\n\n            if (i === 0) {\n                if (selection.isSingleLine) {\n                    const newLine = _removeDecoCharOneLine(\n                        line,\n                        startChar,\n                        endChar\n                    );\n                    newLines.push(newLine);\n                    if (line !== newLine) {\n                        _removed = true;\n                    }\n                } else {\n                    const newLine = _removeDecoCharOneLine(\n                        line,\n                        startChar,\n                        startLineEndChar\n                    );\n                    newLines.push(newLine);\n                    if (line !== newLine) {\n                        _removed = true;\n                    }\n                    continue;\n                }\n            } else if (i === fullLines.length - 1) {\n                const newLine = _removeDecoCharOneLine(line, 0, endChar);\n                newLines.push(newLine);\n                if (line !== newLine) {\n                    _removed = true;\n                }\n                continue;\n            } else {\n                const newLine = _removeDecoCharOneLine(line, 0, line.length);\n                newLines.push(newLine);\n                if (line !== newLine) {\n                    _removed = true;\n                }\n                continue;\n            }\n        }\n\n        await editor.edit(editBuilder => {\n            const newText = newLines.join('\\n');\n            editBuilder.replace(fullRange, newText);\n        });\n    }\n    editor.selections = curSelections;\n\n    return _removed;\n}\n\nexport function list() {\n    //listEditor.moveSelectionPositionForCompletion();\n    vscode.commands.executeCommand('editor.action.triggerSuggest');\n}\n\nexport function heading() {\n    vscode.commands.executeCommand('editor.action.triggerSuggest');\n}\n\nexport async function addHeading(_triggerChar: string) {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    const document = editor.document;\n    const selections = editor.selections;\n\n    for (let i = 0; i < selections.length; i++) {\n        const selection = selections[i];\n        const curSelectionLine = selection.start.line;\n\n        let insertText = `${_triggerChar.repeat(5)}\\n\\n`;\n        if (curSelectionLine > 0) {\n            const oneLineRangeAbove = editor.document.lineAt(\n                curSelectionLine - 1\n            ).range;\n            const oneLineRangeAboveEndCharNumber =\n                oneLineRangeAbove.end.character;\n\n            if (oneLineRangeAboveEndCharNumber > 0) {\n                const lineText = document.getText(oneLineRangeAbove);\n                const strCount = util.countTextWidth(lineText);\n\n                if (strCount > 5) {\n                    insertText = `${_triggerChar.repeat(strCount)}\\n`;\n                }\n            }\n        }\n\n        const range = editor.document.lineAt(curSelectionLine).range;\n        await editor.edit(editBuilder => {\n            editBuilder.replace(range, insertText);\n        });\n    }\n\n    const selection = editor.selection;\n    const newSelection = new vscode.Selection(selection.end, selection.end);\n    editor.selection = newSelection;\n}\n\nexport async function key_enter() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    if (util.tableIsSelected(editor)) {\n        const prevTwoLetters = util.getTextAtOffsetPosition(\n            editor.document,\n            editor.selection.end,\n            -2\n        );\n        const postLetter = util.getTextAtOffsetPosition(\n            editor.document,\n            editor.selection.end,\n            1\n        );\n        const prevLetter = util.getTextAtOffsetPosition(\n            editor.document,\n            editor.selection.end,\n            -1\n        );\n\n        const table = new tableEditor.TableEditor(editor);\n\n        // Normal line feed [\u901A\u5E38\u306E\u6539\u884C]\n        if (table.isSelectedFirstGrid()) {\n            const curLine = editor.selection.start.line;\n            const curLineFirstChar =\n                editor.document.lineAt(curLine).range.start.character;\n            const newPos = new vscode.Position(curLine, curLineFirstChar);\n            editor.selection = new vscode.Selection(newPos, newPos);\n\n            _addNewLine();\n            return;\n        } else if (table.isSelectedLastGrid()) {\n            const curLine = editor.selection.end.line;\n            const curLineLastChar =\n                editor.document.lineAt(curLine).range.end.character;\n            const newPos = new vscode.Position(curLine, curLineLastChar);\n            editor.selection = new vscode.Selection(newPos, newPos);\n\n            _addNewLine();\n            return;\n        }\n\n        // Add Row\n        if (util.isSelectingLastChara() && prevLetter === '|') {\n            table.addRow();\n\n            // Add Column\n        } else if (\n            prevTwoLetters === '|+' ||\n            (prevLetter === '+' && postLetter === '|')\n        ) {\n            table.addColumn();\n\n            // Remove Column/ Remove Row\n        } else if (\n            prevTwoLetters === '|-' ||\n            (prevLetter === '-' && postLetter === '|')\n        ) {\n            if (util.isSelectingLastChara()) {\n                table.removeRow();\n            } else {\n                const regStartWithMinusSymbol = /^(-\\|)/;\n                const curLine = editor.selection.end.line;\n                const curLineText = editor.document.lineAt(curLine).text;\n                const startWithMatch =\n                    regStartWithMinusSymbol.exec(curLineText);\n\n                if (startWithMatch) {\n                    table.removeRow();\n                } else {\n                    table.removeColumn();\n                }\n            }\n\n            // Move Column To Right\n        } else if (\n            prevTwoLetters === '|>' ||\n            prevTwoLetters === '>>' ||\n            (prevLetter === '>' && postLetter === '|')\n        ) {\n            table.moveColumn('right');\n\n            // Move Column To Left\n        } else if (\n            prevTwoLetters === '|<' ||\n            prevTwoLetters === '<<' ||\n            (prevLetter === '<' && postLetter === '|')\n        ) {\n            table.moveColumn('left');\n\n            // Move Column To Top\n        } else if (\n            prevTwoLetters === '|^' ||\n            prevTwoLetters === '^^' ||\n            (prevLetter === '^' && postLetter === '|')\n        ) {\n            table.moveRow('top');\n\n            // Move Column To Buttom\n        } else if (\n            prevTwoLetters === '|v' ||\n            prevTwoLetters === 'vv' ||\n            (prevLetter === 'v' && postLetter === '|')\n        ) {\n            table.moveRow('bottom');\n\n            // Select a cell down\n        } else {\n            table.selectionChange('buttom');\n        }\n    } else if (util.listIsSelected(editor)) {\n        //listEditor.addLine(\"next\", editor);\n    }\n}\n\nexport async function key_shift_enter() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    if (util.tableIsSelected(editor)) {\n        const table = new tableEditor.TableEditor(editor);\n        table.selectionChange('top');\n    } else if (util.listIsSelected(editor)) {\n        //listEditor.addLine(\"prev\", editor);\n    }\n}\n\nexport async function key_alt_enter() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    if (util.tableIsSelected(editor) && !util.isSelectingLastChara()) {\n        const table = new tableEditor.TableEditor(editor);\n        table.addNewLine();\n    }\n}\n\nexport async function key_tab() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    if (util.tableIsSelected(editor)) {\n        const table = new tableEditor.TableEditor(editor);\n        table.selectionChange('right');\n    } else if (util.listIsSelected(editor)) {\n        //await listEditor.indentAction(\"curLine\", editor);\n        //completionItemProvider.setListCompletionTrigger(true);\n        //listEditor.moveSelectionPositionForCompletion();\n        vscode.commands.executeCommand('editor.action.triggerSuggest');\n    } else if (util.listExistsOneLineAbove(editor)) {\n        //await listEditor.indentAction(\"aboveLine\", editor);\n        //completionItemProvider.setListCompletionTrigger(true);\n        //listEditor.moveSelectionPositionForCompletion();\n        vscode.commands.executeCommand('editor.action.triggerSuggest');\n    } else {\n        vscode.commands.executeCommand('tab');\n    }\n}\n\nexport async function key_shift_tab() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    if (util.tableIsSelected(editor)) {\n        const table = new tableEditor.TableEditor(editor);\n        table.selectionChange('left');\n    } else if (util.listIsSelected(editor)) {\n        //listEditor.outdentAction(editor);\n    } else {\n        vscode.commands.executeCommand('outdent');\n    }\n}\n\n// Normal line feed [\u901A\u5E38\u306E\u6539\u884C]\nasync function _addNewLine() {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    const editOptions = {undoStopBefore: false, undoStopAfter: false};\n    await editor.edit(editBuilder => {\n        const curPosition = editor.selection.end;\n        editBuilder.insert(curPosition, '\\n');\n    }, editOptions);\n}\n", "// ============================================================\n// Copyright (c) 2021 Tatsuya Nakamori. All rights reserved.\n// See LICENSE in the project root for license information.\n// ============================================================\nimport * as vscode from 'vscode';\nimport * as i18n from './i18n';\n\nexport function getOpenedWorkfolderUri(): vscode.Uri | undefined {\n    const workspaceFolders = vscode.workspace.workspaceFolders;\n    if (!workspaceFolders?.length) {\n        console.log(i18n.localize('resttext.sphinx.workspaceFolders.error'));\n        return;\n    }\n    return workspaceFolders[0].uri;\n}\n\nexport function getTextAtOffsetPosition(\n    document: vscode.TextDocument,\n    position: vscode.Position,\n    offset: number\n): string | undefined {\n    const curLine = position.line;\n    const curChar = position.character;\n    const newChar = curChar + offset;\n    const lineEndChar = document.lineAt(curLine).range.end.character;\n\n    if (newChar < 0 || newChar > lineEndChar) {\n        return;\n    }\n\n    const range = new vscode.Range(curLine, curChar, curLine, newChar);\n    return document.getText(range);\n}\n\nexport function isSelectingLastChara(): boolean | undefined {\n    const editor = vscode.window.activeTextEditor;\n    if (!editor) {\n        return;\n    }\n\n    const selPosition = editor.selection.start;\n    const lineEndPosition = editor.document.lineAt(selPosition.line).range.end;\n    const isLastIndex = selPosition.isEqual(lineEndPosition);\n\n    return isLastIndex;\n}\n\nexport function isAscii(text: string): boolean {\n    // eslint-disable-next-line no-control-regex\n    if (text.match(/[\\x01-\\x7E\\xA1-\\xDF]/)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function countTextWidth(text: string): number {\n    let count = 0;\n    for (let i = 0; i < text.length; i++) {\n        const chr = text[i];\n        if (isAscii(chr)) {\n            count += 1;\n        } else {\n            count += 2;\n        }\n    }\n    return count;\n}\n\nexport function tableSizeIsSelected(\n    editor?: vscode.TextEditor\n): [number, number] {\n    if (!editor) {\n        editor = vscode.window.activeTextEditor;\n        if (!editor) {\n            return;\n        }\n    }\n\n    const selection = editor.selection;\n    if (selection.isEmpty) {\n        return;\n    }\n    const startPos = new vscode.Position(selection.start.line, 0);\n    const endLine = selection.end.line;\n    const endLastChar = editor.document.lineAt(endLine).range.end.character;\n    const endPos = new vscode.Position(endLine, endLastChar);\n\n    const data = editor.document.getText(new vscode.Range(startPos, endPos));\n    const regRowColumn = /^(?<row>\\d+)(?<x>x)(?<column>\\d+)$/;\n    const match = regRowColumn.exec(data);\n    if (!match?.groups) {\n        return;\n    }\n\n    const rowText = match.groups['row'];\n    const x = match.groups['x'];\n    const columnText = match.groups['column'];\n    if (!(rowText && x && columnText)) {\n        return;\n    }\n\n    return [Number(rowText), Number(columnText)];\n}\n\nexport function tableIsSelected(\n    editor?: vscode.TextEditor\n): number[] | undefined {\n    if (!editor) {\n        editor = vscode.window.activeTextEditor;\n        if (!editor) {\n            return;\n        }\n    }\n    const curLine = editor.selection.start.line;\n\n    const regTableBegin = /^(\\+-[-+]+-\\+)$/;\n    const regTableEnd = /^(?!(\\s|\\+|\\||-))(?<!\\w+)/;\n\n    const allText = editor.document.getText();\n    const allTextSplit = allText.split(/\\r\\n|\\r|\\n/);\n\n    let tableLines: number[] = [];\n    let inTheTable = false;\n    for (let i = 0; i < allTextSplit.length; i++) {\n        const textLine = allTextSplit[i];\n\n        if (!inTheTable) {\n            const match = regTableBegin.exec(textLine);\n            if (match) {\n                tableLines.push(i);\n                inTheTable = true;\n            }\n        } else {\n            const match = regTableEnd.exec(textLine);\n            if (match) {\n                inTheTable = false;\n                if (tableLines.includes(curLine)) {\n                    return tableLines;\n                } else {\n                    tableLines = [];\n                }\n            } else {\n                tableLines.push(i);\n            }\n        }\n    }\n\n    if (tableLines.includes(curLine)) {\n        return tableLines;\n    } else {\n        return;\n    }\n}\n\nexport function listIsSelected(editor?: vscode.TextEditor): boolean {\n    if (!editor) {\n        editor = vscode.window.activeTextEditor;\n        if (!editor) {\n            return false;\n        }\n    }\n    const curLine = editor.selection.start.line;\n\n    const regListLine = /^\\s*((\\(?([a-zA-Z0-9]+|#)(\\.|\\))) )|^\\s*([-+*] )/;\n    const curLineRange = editor.document.lineAt(curLine).range;\n    const curLineText = editor.document.getText(curLineRange);\n    const match = regListLine.exec(curLineText);\n    if (match) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function listExistsOneLineAbove(editor?: vscode.TextEditor): boolean {\n    if (!editor) {\n        editor = vscode.window.activeTextEditor;\n        if (!editor) {\n            return false;\n        }\n    }\n    const curLine = editor.selection.start.line;\n\n    const regListLine = /^\\s*((\\(?([a-zA-Z0-9]+|#)(\\.|\\))) )|^\\s*([-+*] )/;\n    if (curLine === 0) {\n        return false;\n    } else {\n        const oneLineAboveRange = editor.document.lineAt(curLine - 1).range;\n        const oneLineAboveText = editor.document.getText(oneLineAboveRange);\n\n        const match = regListLine.exec(oneLineAboveText);\n        if (match) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n", "// ============================================================\n// Copyright (c) 2021 Tatsuya Nakamori. All rights reserved.\n// See LICENSE in the project root for license information.\n// ============================================================\nimport * as vscode from 'vscode';\n\nconst i18nFiles: {[key: string]: string} = {\n    en: './../package.nls.json',\n};\nconst i18nData = getData();\n\nexport function localize(i18nKey: string): string {\n    return i18nData[i18nKey];\n}\n\nfunction getData(): {[key: string]: string} {\n    // Get locale (\"en\", \"ja\", etc..)\n    const locale = vscode.env.language;\n\n    // Load [package.nls[.xx].json] file\n    let i18nJSON: {[key: string]: string};\n    if (locale in i18nFiles) {\n        i18nJSON = require(i18nFiles[locale]);\n    } else {\n        i18nJSON = require(i18nFiles['en']);\n    }\n    return i18nJSON;\n}\n", "// ============================================================\n// Copyright (c) 2021 Tatsuya Nakamori. All rights reserved.\n// See LICENSE in the project root for license information.\n// ============================================================\nimport * as vscode from 'vscode';\nimport container from '../inversify.config';\nimport {TYPES} from '../types';\nimport {Configuration} from '../util/configuration';\nimport * as util from './util';\n\ninterface CellPosition {\n    line: number;\n    column: number;\n    row: number;\n}\n\nexport class TableEditor {\n    editor: vscode.TextEditor;\n    tableRange: vscode.Range;\n    tableLineNumbers: number[] | undefined;\n    selectedCellPosition: CellPosition;\n\n    constructor(editor: vscode.TextEditor) {\n        this.editor = editor;\n\n        this.tableLineNumbers = util.tableIsSelected(this.editor);\n        this.tableRange = this._tableRange();\n\n        this.selectedCellPosition = this.selectedCellColumn();\n    }\n\n    public async reformat() {\n        const configuration = container.get<Configuration>(TYPES.Configuration);\n        if (configuration.getTableEditorReformatDisabled()) {\n            return;\n        }\n        this.tableLineNumbers = util.tableIsSelected(this.editor);\n\n        const cellContents: string[][] = this._getCellContents();\n        const hasHeader: boolean = this._hasHeader();\n        const insertText = this._generateTableString(cellContents, hasHeader);\n\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            const tableRange = this._tableRange();\n            editBuilder.replace(tableRange, insertText);\n        }, editOptions);\n    }\n\n    public async createEmptyGrid() {\n        // eslint-disable-next-line prefer-const\n        let [row, column] = util.tableSizeIsSelected(this.editor);\n\n        const inputResult = await vscode.window.showQuickPick([\n            'With Header',\n            'Without Header',\n        ]);\n        if (!inputResult) {\n            return;\n        }\n        const header = inputResult === 'With Header';\n\n        if (header) {\n            row += 1;\n        }\n\n        const contentsLine = new Array(column).fill(''); // \"\"-filled array: [\"\", \"\", \"\".....]\n        const cellContents = new Array(row).fill(contentsLine); // []-filled array: [[\"\", \"\"], [\"\", \"\"], [\"\", \"\"].....]\n        const insertText = this._generateTableString(cellContents, header);\n\n        const curLine = this.editor.selection.start.line;\n        const curLineRange = this.editor.document.lineAt(curLine).range;\n\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            editBuilder.replace(curLineRange, insertText);\n        }, editOptions);\n\n        const newPos = new vscode.Position(curLine + 1, 2);\n        this.editor.selection = new vscode.Selection(newPos, newPos);\n    }\n\n    public async dataToTable() {\n        if (this.editor.selection.isEmpty) {\n            return;\n        }\n\n        const selection = this.editor.selection;\n        const startPos = new vscode.Position(selection.start.line, 0);\n        const endLine = selection.end.line;\n        const endLastChar =\n            this.editor.document.lineAt(endLine).range.end.character;\n        const endPos = new vscode.Position(endLine, endLastChar);\n\n        const data = this.editor.document.getText(\n            new vscode.Range(startPos, endPos)\n        );\n        const dataLines = data.split(/\\r\\n|\\r|\\n/);\n\n        // First, we will parse the selected csv format string.\n        const cellContents: string[][] = [];\n        for (let i = 0; i < dataLines.length; i++) {\n            const dataLine = dataLines[i];\n            const contents = dataLine.split(',');\n            cellContents.push([]);\n\n            for (let j = 0; j < contents.length; j++) {\n                let content = contents[j];\n                content = content.trim();\n                content = content.replace(/(\\s)\\s*/g, '$1');\n                cellContents[i].push(content);\n            }\n        }\n\n        const inputResult = await vscode.window.showQuickPick([\n            'With Header',\n            'Without Header',\n        ]);\n        if (!inputResult) {\n            return;\n        }\n        const header = inputResult === 'With Header';\n\n        const insertText = this._generateTableString(cellContents, header);\n\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            editBuilder.replace(new vscode.Range(startPos, endPos), insertText);\n        }, editOptions);\n\n        const newPos = new vscode.Position(startPos.line + 1, 2);\n        this.editor.selection = new vscode.Selection(newPos, newPos);\n    }\n\n    private _generateTableString(\n        cellContents: string[][],\n        header: boolean\n    ): string {\n        // Record the maximum number of characters in each column in an array (At least three.)\n        const cellStrLengthList: number[] = [];\n        for (let i = 0; i < cellContents.length; i++) {\n            for (let j = 0; j < cellContents[i].length; j++) {\n                if (j > cellStrLengthList.length - 1) {\n                    cellStrLengthList.push(3);\n                }\n\n                const content = cellContents[i][j];\n                const rows = content.split(/\\r\\n|\\r|\\n/);\n                for (let k = 0; k < rows.length; k++) {\n                    const row = rows[k];\n\n                    let strCount = util.countTextWidth(row);\n                    if (rows.length > 1) {\n                        strCount -= 1;\n                    }\n                    cellStrLengthList[j] = Math.max(\n                        cellStrLengthList[j],\n                        strCount\n                    );\n                }\n            }\n        }\n\n        // GenerateGrid\n        let gridRow = '';\n        let headerRow = '';\n        for (let i = 0; i < cellStrLengthList.length; i++) {\n            const width = cellStrLengthList[i] + 2;\n            gridRow += `+${'-'.repeat(width)}`; // +-----\n            headerRow += `+${'='.repeat(width)}`; // +=====\n        }\n        gridRow += '+'; // +-----+----+---+\n        headerRow += '+'; // +=====+====+===+\n\n        const insertTextLines: string[] = [];\n        for (let i = 0; i < cellContents.length; i++) {\n            if (i === 0) {\n                insertTextLines.push(gridRow); // +-----+----+---+  // roof\n            }\n\n            const multiLineCell: string[][] = [];\n            const columnContents = cellContents[i];\n            for (\n                let columnIndex = 0;\n                columnIndex < columnContents.length;\n                columnIndex++\n            ) {\n                const cellText = columnContents[columnIndex];\n                const cellTextSplit = cellText.split(/\\r\\n|\\r|\\n/);\n\n                if (columnIndex === 0) {\n                    for (let j = 0; j < cellTextSplit.length; j++) {\n                        multiLineCell.push([]); // []-filled array:[[], [].....]\n                    }\n                }\n\n                for (\n                    let lineIndex = 0;\n                    lineIndex < cellTextSplit.length;\n                    lineIndex++\n                ) {\n                    const contentLine = cellTextSplit[lineIndex];\n                    multiLineCell[lineIndex].push(contentLine);\n                }\n            }\n\n            for (\n                let lineIndex = 0;\n                lineIndex < multiLineCell.length;\n                lineIndex++\n            ) {\n                let cellRow = '';\n                const lineTextList = multiLineCell[lineIndex];\n\n                for (\n                    let columnIndex = 0;\n                    columnIndex < cellStrLengthList.length;\n                    columnIndex++\n                ) {\n                    const textMaxWidth = cellStrLengthList[columnIndex];\n                    const content = lineTextList[columnIndex];\n\n                    if (columnIndex < lineTextList.length) {\n                        const strCount = util.countTextWidth(content);\n                        const missingSpaces = `${' '.repeat(\n                            textMaxWidth - strCount + 1\n                        )}`;\n\n                        if (multiLineCell.length > 1) {\n                            cellRow += `|${content}${missingSpaces} `; // || ABC\n                        } else {\n                            cellRow += `| ${content}${missingSpaces}`; // | ABC\n                        }\n                    } else {\n                        cellRow += `|${' '.repeat(textMaxWidth + 2)}`; // |.....\n                    }\n                }\n                cellRow += '|'; // | ABC | DE | F |\n                insertTextLines.push(cellRow); // | ABC | DE | F |\n            }\n\n            if (i === 0 && header) {\n                insertTextLines.push(headerRow); // +=====+====+===+\n            } else {\n                insertTextLines.push(gridRow); // +-----+----+---+\n            }\n        }\n\n        return insertTextLines.join('\\n');\n    }\n\n    private _hasHeader(): boolean {\n        if (!this.tableLineNumbers) {\n            return false;\n        }\n\n        // Various regular expressions\n        const regGridHeaderLine = /^\\+=(=|\\+)+=\\+$/;\n\n        for (let i = 0; i < this.tableLineNumbers.length; i++) {\n            const tableLine = this.tableLineNumbers[i];\n\n            let lineText = this.editor.document.lineAt(tableLine).text;\n            lineText = lineText.trim();\n\n            const gridHeaderLineMatch = regGridHeaderLine.exec(lineText);\n            if (gridHeaderLineMatch) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _getCellContents(): string[][] {\n        if (!this.tableLineNumbers) {\n            return [];\n        }\n\n        // Various regular expressions\n        const regContentsLine = /^(\\+)?\\|.+\\|(\\+)?$/;\n        const regCellContents =\n            /(?<=\\|(\\+|-)?([<>^v])*) (?<content>([^|]|(\\*\\|\\*)|(`\\|`))*?) (?=([<>^v])*(\\+|-)?\\|)/g;\n\n        let curLineKind: 'contents' | undefined;\n        const cellContents: string[][] = [];\n        for (let i = 0; i < this.tableLineNumbers.length; i++) {\n            const tableLine = this.tableLineNumbers[i];\n\n            let lineText = this.editor.document.lineAt(tableLine).text;\n            lineText = lineText.trim();\n\n            const contentsLine = regContentsLine.exec(lineText);\n            if (!contentsLine) {\n                curLineKind = undefined;\n                continue;\n            }\n\n            if (curLineKind !== 'contents') {\n                cellContents.push([]);\n            }\n\n            let columnIndex = 0;\n            let match;\n            while ((match = regCellContents.exec(lineText))) {\n                if (!match?.groups) {\n                    continue;\n                }\n\n                let content = match.groups['content'];\n                content = content.trim();\n                content = content.replace(/(\\s)\\s*/g, '$1');\n\n                if (curLineKind !== 'contents') {\n                    cellContents[cellContents.length - 1].push(content);\n                } else {\n                    let prevContent =\n                        cellContents[cellContents.length - 1][columnIndex];\n\n                    if (!prevContent) {\n                        prevContent = '| ';\n                    } else if (!prevContent.startsWith('|')) {\n                        prevContent = `| ${prevContent}`;\n                    }\n                    cellContents[cellContents.length - 1][\n                        columnIndex\n                    ] = `${prevContent}\\n| ${content}`;\n                    columnIndex += 1;\n                }\n            }\n            curLineKind = 'contents';\n        }\n\n        return cellContents;\n    }\n\n    private _tableRange(): vscode.Range {\n        if (this.tableLineNumbers) {\n            const startPos = new vscode.Position(this.tableLineNumbers[0], 0);\n            const endLine =\n                this.tableLineNumbers[this.tableLineNumbers.length - 1];\n            const endLastChar =\n                this.editor.document.lineAt(endLine).range.end.character;\n            const endPos = new vscode.Position(endLine, endLastChar);\n            return new vscode.Range(startPos, endPos);\n        } else {\n            const startPos = new vscode.Position(0, 0);\n            const endPos = new vscode.Position(0, 0);\n            return new vscode.Range(startPos, endPos);\n        }\n    }\n\n    public isSelectedFirstGrid(): boolean {\n        const curLine = this.editor.selection.start.line;\n\n        const tableRange = this._tableRange();\n        const tableStartLine = tableRange.start.line;\n\n        return curLine === tableStartLine;\n    }\n\n    public isSelectedLastGrid(): boolean {\n        const curLine = this.editor.selection.end.line;\n\n        const tableRange = this._tableRange();\n        const tableLastLine = tableRange.end.line;\n\n        return curLine === tableLastLine;\n    }\n\n    public selectedCellColumn(): CellPosition {\n        const curLine = this.editor.selection.start.line;\n        const curChar = this.editor.selection.start.character;\n        const lineText = this.editor.document.lineAt(curLine).text;\n\n        const regContentsLine = /^\\+?\\|.+\\|\\+?$/;\n        const regCellContents =\n            /(?<=\\|)(?<cell>(\\+|-)?([<>v^])* .*? ([<>v^])*(\\+|-)?)(?=\\|)/g;\n\n        let column = -1;\n        let row = -1;\n        if (!regContentsLine.exec(lineText) || !this.tableLineNumbers) {\n            const selectedCell: CellPosition = {\n                line: curLine,\n                column: column,\n                row: row,\n            };\n            return selectedCell;\n        }\n\n        // Column Index\n        let match;\n        while ((match = regCellContents.exec(lineText))) {\n            if (!match?.groups) {\n                continue;\n            }\n            column += 1;\n\n            const matchIndex = match.index;\n            const cellText = match.groups['cell'];\n            const lastIndex = matchIndex + cellText.length;\n\n            if (curChar <= lastIndex) {\n                break;\n            }\n        }\n\n        // Row Index\n        let curLineKind: 'contents' | undefined;\n        for (let i = 0; i < this.tableLineNumbers.length; i++) {\n            const lineNumber = this.tableLineNumbers[i];\n            const lineText = this.editor.document.lineAt(lineNumber).text;\n\n            if (!regContentsLine.exec(lineText)) {\n                curLineKind = undefined;\n                continue;\n            }\n\n            if (!curLineKind) {\n                row += 1;\n                curLineKind = 'contents';\n            }\n\n            if (lineNumber >= curLine) {\n                break;\n            }\n        }\n\n        const selectedCell: CellPosition = {\n            line: curLine,\n            column: column,\n            row: row,\n        };\n\n        return selectedCell;\n    }\n\n    public selectCellContent(\n        cellPosition: CellPosition,\n        offset?: 'top' | 'buttom' | 'left' | 'right',\n        offsetType?: 'cellIndex' | 'lineNumber'\n    ) {\n        if (!this.tableLineNumbers) {\n            return;\n        }\n\n        let lineNumber = cellPosition.line;\n        let rowIndex = cellPosition.row;\n        let columnIndex = cellPosition.column;\n        if (rowIndex === -1) {\n            rowIndex = 0;\n        }\n        if (columnIndex === -1) {\n            columnIndex = 0;\n        }\n\n        let curLine = lineNumber;\n        if (offset === 'top') {\n            curLine -= 1;\n            rowIndex -= 1;\n        } else if (offset === 'buttom') {\n            curLine += 1;\n            rowIndex += 1;\n        } else if (offset === 'right') {\n            columnIndex += 1;\n        } else if (offset === 'left') {\n            columnIndex -= 1;\n        }\n\n        // Calc Row Number\n        let lineText = '';\n        const regContentsLine = /^\\|.+\\|$/;\n\n        if (offsetType === 'cellIndex') {\n            let curRowIndex = -1;\n            let curLineKind: 'contents' | undefined;\n            for (let i = 0; i < this.tableLineNumbers.length; i++) {\n                const curLineNumber = this.tableLineNumbers[i];\n                const lineText =\n                    this.editor.document.lineAt(curLineNumber).text;\n\n                if (!regContentsLine.exec(lineText)) {\n                    curLineKind = undefined;\n                    continue;\n                }\n\n                if (!curLineKind) {\n                    curRowIndex += 1;\n                    curLineKind = 'contents';\n                }\n\n                if (curRowIndex >= rowIndex) {\n                    lineNumber = curLineNumber;\n                    break;\n                }\n            }\n            lineText = this.editor.document.lineAt(lineNumber).text;\n        } else {\n            let matchedContentsLine = false;\n            if (offset === 'top' || offset === 'buttom') {\n                while (this.tableLineNumbers.includes(curLine)) {\n                    lineText = this.editor.document.lineAt(curLine).text;\n\n                    if (!regContentsLine.exec(lineText)) {\n                        if (offset === 'top') {\n                            curLine -= 1;\n                        } else if (offset === 'buttom') {\n                            curLine += 1;\n                        }\n                    } else {\n                        matchedContentsLine = true;\n                        lineNumber = curLine;\n                        break;\n                    }\n                }\n            }\n\n            if (!matchedContentsLine) {\n                lineText = this.editor.document.lineAt(lineNumber).text;\n            }\n        }\n\n        // Get Column Index (match.index)\n        const regCellContents =\n            /(?<=\\|)(?<cell> ([^|]|(\\*\\|\\*)|(`\\|`))* )(?=\\|)/g;\n\n        let curColumn = 0;\n        let match;\n        while ((match = regCellContents.exec(lineText))) {\n            if (curColumn >= columnIndex) {\n                break;\n            }\n            curColumn += 1;\n        }\n\n        if (!match?.groups) {\n            return;\n        }\n        const matchIndex = match.index;\n        const cellText = match.groups['cell'];\n\n        // Index of characters to select\n        const regAllSpaces = /^(\\s+)$/;\n        const regWord = /^(\\s*)(.*?)\\s*$/;\n        const allSpaceMatch = regAllSpaces.exec(cellText);\n        const wordMatch = regWord.exec(cellText);\n\n        let wordFirstIndex = 0;\n        let wordLastIndex = 0;\n        if (allSpaceMatch) {\n            wordFirstIndex = matchIndex + 1;\n            wordLastIndex = wordFirstIndex;\n        } else if (wordMatch) {\n            const cellSpeces = wordMatch[1];\n            const cellWordText = wordMatch[2];\n            wordFirstIndex = matchIndex + wordMatch.index + cellSpeces.length;\n            wordLastIndex = wordFirstIndex + cellWordText.length;\n        }\n\n        // Range\n        const newPosStart = new vscode.Position(lineNumber, wordFirstIndex);\n        const newPosEnd = new vscode.Position(lineNumber, wordLastIndex);\n        this.editor.selection = new vscode.Selection(newPosStart, newPosEnd);\n    }\n\n    public async selectionChange(moveTo: 'top' | 'buttom' | 'right' | 'left') {\n        await this.reformat();\n        this.selectCellContent(this.selectedCellPosition, moveTo);\n    }\n\n    public async addNewLine() {\n        const curLine = this.editor.selection.start.line;\n        const curTextLine = this.editor.document.lineAt(curLine);\n        const lineText = curTextLine.text;\n        const lineEndPosition = curTextLine.range.end;\n\n        const regCellContents = /(?<=\\|)( .*? )(?=\\|)/g;\n        const emptyRow = lineText.replace(regCellContents, '   ');\n        const insertText = `\\n${emptyRow}`;\n\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            editBuilder.replace(lineEndPosition, insertText);\n        }, editOptions);\n\n        await this.reformat();\n\n        this.selectCellContent(this.selectedCellPosition, 'buttom');\n    }\n\n    public async addRow() {\n        if (!this.tableLineNumbers) {\n            return;\n        }\n\n        const curLine = this.editor.selection.start.line;\n        let startIndex = this.tableLineNumbers.indexOf(curLine);\n        if (startIndex === -1) {\n            return;\n        } else if (startIndex === 0) {\n            startIndex += 1;\n        }\n\n        const regGridLine = /^\\+(-|=)(\\1|\\+)+\\1\\+$/;\n        let insertRowLineNumber = startIndex;\n        for (let i = startIndex; i < this.tableLineNumbers.length; i++) {\n            const tableLine = this.tableLineNumbers[i];\n            const lineText = this.editor.document.lineAt(tableLine).text;\n\n            const gridLineMatch = regGridLine.exec(lineText);\n            if (gridLineMatch) {\n                insertRowLineNumber = this.tableLineNumbers[i];\n                break;\n            }\n        }\n\n        // Get information about the content\n        const cellContents: string[][] = this._getCellContents();\n        const hasHeader: boolean = this._hasHeader();\n\n        const insertRowIndex = this.selectedCellPosition.row + 1;\n        cellContents.splice(insertRowIndex, 0, ['']);\n\n        // Updating a table\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            const insertText = this._generateTableString(\n                cellContents,\n                hasHeader\n            );\n            const tableRange = this._tableRange();\n            editBuilder.replace(tableRange, insertText);\n        }, editOptions);\n\n        // Select a cell\n        this.tableLineNumbers = util.tableIsSelected(this.editor);\n        this.selectedCellPosition.column = 0;\n        this.selectedCellPosition.line = insertRowLineNumber;\n        this.selectCellContent(\n            this.selectedCellPosition,\n            'buttom',\n            'cellIndex'\n        );\n    }\n\n    public async removeRow() {\n        await this.reformat();\n        this.selectCellContent(this.selectedCellPosition);\n    }\n\n    public async moveRow(moveTo: 'top' | 'bottom') {\n        if (!this.tableLineNumbers) {\n            return;\n        }\n\n        const numOfTimesToMove = this._getNumberOfTimesToMove(moveTo);\n\n        // Get information about the content\n        const cellContents: string[][] = this._getCellContents();\n        const hasHeader: boolean = this._hasHeader();\n\n        // Row\u306E\u5165\u308C\u66FF\u3048\n        const row_from = this.selectedCellPosition.row;\n        let row_to = row_from + numOfTimesToMove;\n        if (row_to < 0) {\n            row_to = 0;\n        } else if (row_to > cellContents.length - 1) {\n            row_to = cellContents.length - 1;\n        }\n\n        const moveRowContents = cellContents[row_from];\n        cellContents.splice(row_from, 1); // \u8981\u7D20(\u884C)\u3092\u524A\u9664\n        cellContents.splice(row_to, 0, moveRowContents); // \u8981\u7D20(\u884C)\u3092\u8FFD\u52A0\n\n        // Updating a table\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            const insertText = this._generateTableString(\n                cellContents,\n                hasHeader\n            );\n            const tableRange = this._tableRange();\n            editBuilder.replace(tableRange, insertText);\n        }, editOptions);\n\n        // Select a cell\n        this.selectedCellPosition.row = row_to;\n        this.selectCellContent(this.selectedCellPosition);\n    }\n\n    public async addColumn() {\n        if (!this.tableLineNumbers) {\n            return;\n        }\n\n        // Locate the operator.\n        const addLastColumn = util.isSelectingLastChara();\n\n        const curLine = this.editor.selection.start.line;\n        const curLineText = this.editor.document.lineAt(curLine).text;\n        const regContents = /(?<=\\|)(\\+?)( .*? )(\\+?)(?=\\|)/g;\n        let match;\n        let afterOperator;\n        while ((match = regContents.exec(curLineText))) {\n            if (match[3]) {\n                afterOperator = match[3];\n                break;\n            }\n        }\n\n        // Get information about the content\n        const cellContents: string[][] = this._getCellContents();\n        const hasHeader: boolean = this._hasHeader();\n\n        // Make sure that each line has a newline.\n        const newLineCount: number[] = [];\n        for (let i = 0; i < cellContents.length; i++) {\n            newLineCount.push(0);\n\n            const rowContents = cellContents[i];\n            for (let j = 0; j < rowContents.length; j++) {\n                const cellContent = rowContents[j];\n                const lineCount = cellContent.split(/\\r\\n|\\r|\\n/).length;\n                newLineCount[i] = Math.max(newLineCount[i], lineCount);\n            }\n        }\n\n        // Add a column to each row.\n        let insertColumnIndex = this.selectedCellPosition.column;\n        if (afterOperator || addLastColumn) {\n            insertColumnIndex += 1;\n        }\n        for (let i = 0; i < cellContents.length; i++) {\n            const rowContents = cellContents[i];\n            if (newLineCount[i] > 1) {\n                rowContents.splice(\n                    insertColumnIndex,\n                    0,\n                    `${'\\n'.repeat(newLineCount[i] - 1)}`\n                ); // \u8981\u7D20\u3092\u8FFD\u52A0\n            } else {\n                rowContents.splice(insertColumnIndex, 0, ''); // \u8981\u7D20\u3092\u8FFD\u52A0\n            }\n        }\n\n        // Updating a table\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            const insertText = this._generateTableString(\n                cellContents,\n                hasHeader\n            );\n            const tableRange = this._tableRange();\n\n            editBuilder.replace(tableRange, insertText);\n        }, editOptions);\n\n        // Select a cell\n        if (curLineText.startsWith('+|')) {\n            this.selectedCellPosition.column = 0;\n        } else if (afterOperator || addLastColumn) {\n            this.selectedCellPosition.column += 1;\n        }\n        this.selectCellContent(this.selectedCellPosition);\n    }\n\n    public async removeColumn() {\n        if (!this.tableLineNumbers) {\n            return;\n        }\n\n        // Get information about the content\n        const cellContents: string[][] = this._getCellContents();\n        const hasHeader: boolean = this._hasHeader();\n\n        const delColumnIndex = this.selectedCellPosition.column;\n        for (let i = 0; i < cellContents.length; i++) {\n            const rowContents = cellContents[i];\n            rowContents.splice(delColumnIndex, 1); // \u8981\u7D20\u3092\u524A\u9664\n        }\n\n        // Updating a table\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            const insertText = this._generateTableString(\n                cellContents,\n                hasHeader\n            );\n            const tableRange = this._tableRange();\n\n            editBuilder.replace(tableRange, insertText);\n        }, editOptions);\n\n        // Select a cell\n        const curColumn = this.selectedCellPosition.column;\n        if (curColumn > 0) {\n            this.selectedCellPosition.column -= 1;\n        } else {\n            this.selectedCellPosition.column = 0;\n        }\n        this.selectCellContent(this.selectedCellPosition);\n    }\n\n    public async moveColumn(moveTo: 'right' | 'left') {\n        if (!this.tableLineNumbers) {\n            return;\n        }\n\n        const numOfTimesToMove = this._getNumberOfTimesToMove(moveTo);\n\n        // Get information about the content\n        const cellContents: string[][] = this._getCellContents();\n        const hasHeader: boolean = this._hasHeader();\n\n        // Column\u306E\u5165\u308C\u66FF\u3048\n        const column_from = this.selectedCellPosition.column;\n        let column_to = column_from + numOfTimesToMove;\n        if (column_to < 0) {\n            column_to = 0;\n        } else if (column_to > cellContents[0].length - 1) {\n            column_to = cellContents[0].length - 1;\n        }\n\n        for (let i = 0; i < cellContents.length; i++) {\n            const rowContents = cellContents[i];\n            const moveColumnContent = rowContents[column_from];\n            rowContents.splice(column_from, 1); // \u8981\u7D20\u3092\u524A\u9664\n            rowContents.splice(column_to, 0, moveColumnContent); // \u8981\u7D20\u3092\u8FFD\u52A0\n        }\n\n        // Updating a table\n        const editOptions = {undoStopBefore: false, undoStopAfter: false};\n        await this.editor.edit(editBuilder => {\n            const insertText = this._generateTableString(\n                cellContents,\n                hasHeader\n            );\n            const tableRange = this._tableRange();\n            editBuilder.replace(tableRange, insertText);\n        }, editOptions);\n\n        // Select a cell\n        this.selectedCellPosition.column = column_to;\n        this.selectCellContent(this.selectedCellPosition);\n    }\n\n    private _getNumberOfTimesToMove(\n        moveTo: 'top' | 'bottom' | 'right' | 'left'\n    ): number {\n        let checkChar = '';\n        if (moveTo === 'top') {\n            checkChar = '^';\n        } else if (moveTo === 'bottom') {\n            checkChar = 'v';\n        } else if (moveTo === 'right') {\n            checkChar = '>';\n        } else if (moveTo === 'left') {\n            checkChar = '<';\n        }\n\n        const curLine = this.editor.selection.start.line;\n        const curLineCharList = this.editor.document\n            .lineAt(curLine)\n            .text.split('');\n\n        let curChar = this.editor.selection.start.character - 1;\n        let numOfTimesToMove = 0;\n        while (curChar >= 0) {\n            if (checkChar !== curLineCharList[curChar]) {\n                break;\n            }\n            numOfTimesToMove += 1;\n            curChar -= 1;\n        }\n\n        if (moveTo === 'right' || moveTo === 'bottom') {\n            return numOfTimesToMove;\n        } else {\n            return -numOfTimesToMove;\n        }\n    }\n}\n", "/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 \u00A7 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n", "import 'reflect-metadata';\n\nimport {Container} from 'inversify';\nimport {NAMES, TYPES} from './types';\nimport {ConsoleLogger, Logger} from './util/logger';\nimport {Python} from './util/python';\nimport {Configuration} from './util/configuration';\nimport {workspace} from 'vscode';\n\nconst container = new Container();\n\nconst folders = workspace.workspaceFolders;\nconst singleFolder = folders?.length === 1;\n\nconst main = new ConsoleLogger('reStructuredText');\ncontainer\n    .bind<Logger>(TYPES.Logger)\n    .toConstantValue(main)\n    .whenTargetNamed(NAMES.Main);\nconst lsp = new ConsoleLogger('Esbonio Language Server');\ncontainer\n    .bind<Logger>(TYPES.Logger)\n    .toConstantValue(lsp)\n    .whenTargetNamed(NAMES.Lsp);\ncontainer\n    .bind<Configuration>(TYPES.Configuration)\n    .to(Configuration)\n    .inSingletonScope();\ncontainer.bind<Python>(TYPES.Python).to(Python).inSingletonScope();\ncontainer.bind<boolean>(TYPES.SingleFolder).toConstantValue(singleFolder);\n\nexport default container;\n", "/* eslint-disable @typescript-eslint/naming-convention */\nconst TYPES = {\n    Logger: Symbol.for('Logger'),\n    Python: Symbol.for('Python'),\n    Configuration: Symbol.for('Configuration'),\n    Esbonio: Symbol.for('Esbonio'),\n    FolderStatus: Symbol.for('FolderStatus'),\n    FileStatus: Symbol.for('FileStatus'),\n    FileSelector: Symbol.for('FileSelector'),\n    PreviewContext: Symbol.for('PreviewContext'),\n    RstEngine: Symbol.for('RstEngine'),\n    ContentProvider: Symbol.for('ContentProvider'),\n    PreviewManager: Symbol.for('PreviewManager'),\n    Policy: Symbol.for('Policy'),\n    SecuritySelector: Symbol.for('SecuritySelector'),\n    SingleFolder: Symbol.for('SingleFolder'),\n};\n\nconst NAMES = {\n    Lsp: Symbol.for('Lsp'),\n    Main: Symbol.for('Main'),\n};\n\nexport {TYPES, NAMES};\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {injectable} from 'inversify';\nimport Rollbar = require('rollbar');\nimport si = require('@jedithepro/system-info');\n\nexport interface Logger {\n    info(message: string): void;\n    error(message: string): void;\n    warning(message: string): void;\n    debug(message: string): void;\n    log(message: string): void;\n    logPlatform(version: string): Promise<void>;\n    outputChannel: vscode.OutputChannel;\n    updateConfiguration(): void;\n    collect(version: string, platform: string): void;\n}\n\nexport enum Trace {\n    Off,\n    Verbose,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Trace {\n    export function fromString(value: string): Trace {\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n}\n\nfunction isString(value: unknown): value is string {\n    return Object.prototype.toString.call(value) === '[object String]';\n}\n\n@injectable()\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class ConsoleLogger implements Logger {\n    private trace?: Trace;\n    public outputChannel: vscode.OutputChannel;\n    private rollbar: Rollbar;\n\n    constructor(name: string) {\n        this.outputChannel = vscode.window.createOutputChannel(name);\n        this.updateConfiguration();\n\n        this.rollbar = new Rollbar({\n            accessToken: 'ae7bc72e09184fb4aa1ea1c4a3cfb705',\n            captureUncaught: false,\n            captureUnhandledRejections: false,\n        });\n    }\n\n    public error(message: string): void {\n        this.log(message);\n    }\n\n    public info(message: string): void {\n        this.log(message);\n    }\n\n    public debug(message: string): void {\n        this.log(message);\n    }\n\n    public warning(message: string): void {\n        this.log(message);\n    }\n\n    public collect(version: string, platform: string): void {\n        this.rollbar.log(version, {details: platform});\n    }\n\n    public log(message: string, data?: unknown): void {\n        if (this.trace === Trace.Verbose) {\n            this.appendLine(\n                `[Log - ${new Date().toLocaleTimeString()}] ${message}`\n            );\n            if (data) {\n                this.appendLine(ConsoleLogger.data2String(data));\n            }\n        }\n    }\n\n    public updateConfiguration() {\n        this.trace = this.readTrace();\n    }\n\n    public appendLine(value = '') {\n        return this.outputChannel.appendLine(value);\n    }\n\n    public append(value: string) {\n        return this.outputChannel.append(value);\n    }\n\n    public show() {\n        this.outputChannel.show();\n    }\n\n    private readTrace(): Trace {\n        return Trace.fromString(\n            vscode.workspace\n                .getConfiguration()\n                .get<string>('restructuredtext.trace', 'off')\n        );\n    }\n\n    private static data2String(data: unknown): string {\n        if (data instanceof Error) {\n            if (isString(data.stack)) {\n                return data.stack;\n            }\n            return (data as Error).message;\n        }\n        if (isString(data)) {\n            return data;\n        }\n        return JSON.stringify(data, undefined, 2);\n    }\n\n    public async logPlatform(version: string): Promise<void> {\n        const result = await si.osInfo();\n        const platform = result.platform;\n        const release = result.release;\n        const dist = result.distro;\n        const arch = result.arch;\n\n        this.log(`OS is ${platform} ${release} ${dist} ${arch}`);\n        this.collect(version, `${platform} ${release} ${dist} ${arch}`);\n    }\n}\n", "'use strict';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {inject, injectable, named} from 'inversify';\nimport {exec, ExecException} from 'child_process';\nimport * as vscode from 'vscode';\nimport {Uri} from 'vscode';\nimport {Configuration} from './configuration';\nimport {Logger} from './logger';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {NAMES, TYPES} from './../types';\n\n@injectable()\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class Python {\n    private version: 2 | 3 | null = null;\n    private pythonPath: string | undefined;\n    private ready: boolean = false;\n\n    public constructor(\n        @inject(TYPES.Logger)\n        @named(NAMES.Main)\n        private readonly logger: Logger,\n        @inject(TYPES.Configuration)\n        private readonly configuration: Configuration\n    ) {}\n\n    public isReady(): boolean {\n        return this.ready;\n    }\n\n    public async setup(resource?: Uri): Promise<void> {\n        if (await this.checkPython(resource)) {\n            this.ready = true;\n        }\n    }\n\n    public async checkPython(\n        resource: vscode.Uri,\n        showInformation = true\n    ): Promise<boolean> {\n        const path = await this.configuration.getPythonPath(resource);\n        if (path) {\n            this.pythonPath = `\"${path}\"`;\n            if (await this.getVersion()) {\n                return true;\n            }\n        }\n\n        this.logger.error('Cannot find Python.');\n        if (showInformation) {\n            const choice = await vscode.window.showErrorMessage(\n                'Please review Python installation on this machine before using this extension.',\n                'Learn more...'\n            );\n            if (choice === 'Learn more...') {\n                vscode.commands.executeCommand(\n                    'vscode.open',\n                    vscode.Uri.parse(\n                        'https://docs.restructuredtext.net/articles/prerequisites.html#install-python-for-most-features'\n                    )\n                );\n            }\n        }\n        return false;\n    }\n\n    private async installDoc8(): Promise<void> {\n        try {\n            await this.exec('-m', 'pip', 'install', 'doc8');\n            this.logger.info('Finished installing doc8');\n            vscode.window.showInformationMessage(\n                'The linter doc8 is installed.'\n            );\n        } catch (e) {\n            this.logger.error('Failed to install doc8');\n            vscode.window.showErrorMessage(\n                'Could not install doc8. Please run `pip install doc8` to use this ' +\n                    'linter, or check your Python path.'\n            );\n        }\n    }\n\n    public async checkDoc8Install(): Promise<boolean> {\n        try {\n            await this.exec('-c', '\"import doc8.main;\"');\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private async installRstCheck(): Promise<void> {\n        try {\n            await this.exec('-m', 'pip', 'install', 'rstcheck');\n            this.logger.info('Finished installing rstcheck');\n            vscode.window.showInformationMessage(\n                'The linter rstcheck is installed.'\n            );\n        } catch (e) {\n            this.logger.error('Failed to install rstcheck');\n            vscode.window.showErrorMessage(\n                'Could not install rstcheck. Please run `pip install rstcheck` to use this ' +\n                    'linter, or check your Python path.'\n            );\n        }\n    }\n\n    public async checkRstCheckInstall(): Promise<boolean> {\n        try {\n            await this.exec('-c', '\"import rstcheck;\"');\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private async installRstLint(): Promise<void> {\n        try {\n            await this.exec('-m', 'pip', 'install', 'restructuredtext_lint');\n            this.logger.info('Finished installing restructuredtext_lint');\n            vscode.window.showInformationMessage(\n                'The linter restructuredtext_lint is installed.'\n            );\n        } catch (e) {\n            this.logger.error('Failed to install restructuredtext_lint');\n            vscode.window.showErrorMessage(\n                'Could not install restructuredtext_lint. Please run `pip install restructuredtext_lint` to use this ' +\n                    'linter, or check your Python path.'\n            );\n        }\n    }\n\n    public async checkRstLintInstall(): Promise<boolean> {\n        try {\n            await this.exec('-c', '\"import restructuredtext_lint;\"');\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    private async getVersion(): Promise<boolean> {\n        if (this.version !== null) {\n            return true;\n        }\n\n        try {\n            const version = await this.exec(\n                '-c',\n                '\"import sys; print(sys.version_info[0])\"'\n            );\n            switch (Number.parseInt(version)) {\n                case 2:\n                    this.version = 2;\n                    return true;\n                case 3:\n                    this.version = 3;\n                    return true;\n            }\n            // eslint-disable-next-line no-empty\n        } catch (e) {}\n        return false;\n    }\n\n    public exec(...args: string[]): Promise<string> {\n        const cmd = [this.pythonPath, ...args];\n        return new Promise<string>((resolve, reject) => {\n            this.logger.info(\n                `Running cmd: ${this.pythonPath} ${args.join(' ')}`\n            );\n            exec(\n                cmd.join(' '),\n                (\n                    error: ExecException | null,\n                    stdout: string,\n                    stderr: string\n                ) => {\n                    if (error) {\n                        const errorMessage: string = [\n                            error.name,\n                            error.message,\n                            error.stack,\n                            '',\n                            stderr.toString(),\n                        ].join('\\n');\n                        this.logger.error(errorMessage);\n                        reject(errorMessage);\n                    } else {\n                        this.logger.info('Successful exec');\n                        resolve(stdout.toString());\n                    }\n                }\n            );\n        });\n    }\n}\n", "'use strict';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport {injectable} from 'inversify';\nimport fs = require('fs');\nimport path = require('path');\nimport {\n    extensions,\n    Uri,\n    workspace,\n    WorkspaceConfiguration,\n    WorkspaceFolder,\n} from 'vscode';\nimport {getConfig} from './config';\nimport {Constants} from '../constants';\n\n@injectable()\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport class Configuration {\n    public getConflictingExtensions(resource?: Uri): string[] | undefined {\n        return this.loadAnySetting<string[]>(\n            'conflictingExtensions',\n            undefined,\n            resource\n        );\n    }\n\n    public getRecommendedExtensions(resource?: Uri): string[] | undefined {\n        return this.loadAnySetting<string[]>(\n            'recommendedExtensions',\n            undefined,\n            resource\n        );\n    }\n\n    public getDoc8Path(resource?: Uri): string | undefined {\n        return this.loadSetting(\n            'linter.doc8.executablePath',\n            undefined,\n            resource\n        );\n    }\n\n    public getDoc8ExtraArgs(resource?: Uri): string[] | undefined {\n        return this.loadAnySetting<string[]>(\n            'linter.doc8.extraArgs',\n            undefined,\n            resource\n        );\n    }\n\n    public getRstCheckPath(resource?: Uri): string | undefined {\n        return this.loadSetting(\n            'linter.rstcheck.executablePath',\n            undefined,\n            resource\n        );\n    }\n\n    public getRstCheckExtraArgs(resource?: Uri): string[] | undefined {\n        return this.loadAnySetting<string[]>(\n            'linter.rstcheck.extraArgs',\n            undefined,\n            resource\n        );\n    }\n\n    public getRstLintPath(resource?: Uri): string | undefined {\n        return this.loadSetting(\n            'linter.rst-lint.executablePath',\n            undefined,\n            resource\n        );\n    }\n\n    public getRstLintExtraArgs(resource?: Uri): string[] | undefined {\n        return this.loadAnySetting<string[]>(\n            'linter.rst-lint.extraArgs',\n            undefined,\n            resource\n        );\n    }\n\n    public getTelemetryDisabled(resource?: Uri): boolean | undefined {\n        return this.loadAnySetting('telemetry.disabled', false, resource);\n    }\n\n    public getRunType(resource?: Uri): string | undefined {\n        return this.loadAnySetting('linter.run', 'onType', resource);\n    }\n\n    public async getPythonPath(resource?: Uri): Promise<string> {\n        try {\n            const extension = extensions.getExtension('ms-python.python');\n            if (!extension) {\n                return Constants.python;\n            }\n            const usingNewInterpreterStorage =\n                extension.packageJSON?.featureFlags?.usingNewInterpreterStorage;\n            if (usingNewInterpreterStorage) {\n                if (!extension.isActive) {\n                    await extension.activate();\n                }\n                const pythonPath =\n                    extension.exports.settings.getExecutionDetails(resource)\n                        .execCommand[0];\n                return pythonPath;\n            } else {\n                return (\n                    this.getConfiguration('python', resource).get<string>(\n                        'pythonPath'\n                    ) ?? Constants.python\n                );\n            }\n        } catch (error) {\n            return Constants.python;\n        }\n    }\n\n    public getConfiguration(\n        section?: string,\n        resource?: Uri\n    ): WorkspaceConfiguration {\n        if (resource) {\n            return workspace.getConfiguration(section, resource);\n        } else {\n            return workspace.getConfiguration(section);\n        }\n    }\n\n    public getPythonPath2(resource?: Uri): string | undefined {\n        // IMPORTANT: python3 does not work, so the default comes from Python extension.\n        const primary = this.loadSetting(\n            'pythonPath',\n            'python3',\n            resource,\n            true,\n            'python'\n        );\n        // the user setting python.defaultInterpreterPath must be used to invoke the interpreter from the\n        // VSCode internal storage\n        if (primary) {\n            const workspaceRoot = this.getRootPath(resource);\n            if (workspaceRoot) {\n                const optional = path.join(workspaceRoot, primary);\n                if (fs.existsSync(optional)) {\n                    return optional;\n                }\n            }\n        }\n        return primary;\n    }\n\n    public getLinterDisabled(resource?: Uri): string[] | undefined {\n        return this.loadAnySetting<string[]>(\n            'linter.disabledLinters',\n            [],\n            resource\n        );\n    }\n\n    public getTableEditorDisabled(resource?: Uri): boolean | undefined {\n        return this.loadAnySetting(\n            'editor.tableEditor.disabled',\n            false,\n            resource\n        );\n    }\n\n    public getTableEditorReformatDisabled(resource?: Uri): boolean | undefined {\n        return this.loadAnySetting(\n            'editor.tableEditor.reformat.disabled',\n            false,\n            resource\n        );\n    }\n\n    // list of underline characters, from higher level to lower level\n    // Use the recommended items from http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#sections,\n    // The first six items are convention of Python documentation, https://devguide.python.org/documenting/#sections\n    public getAdornments(resource?: Uri): string | undefined {\n        return this.loadAnySetting(\n            'editor.sectionEditor.adornments',\n            '#*=-^\"\\'`:.~_+',\n            resource\n        );\n    }\n\n    public getPythonRecommendationDisabled(\n        resource?: Uri\n    ): boolean | undefined {\n        return this.loadAnySetting(\n            'pythonRecommendation.disabled',\n            false,\n            resource\n        );\n    }\n\n    public async setPythonRecommendationDisabled(resource?: Uri) {\n        await this.saveAnySetting(\n            'pythonRecommendation.disabled',\n            true,\n            resource\n        );\n    }\n\n    private loadAnySetting<T>(\n        configSection: string,\n        defaultValue?: T,\n        resource?: Uri,\n        header = 'restructuredtext'\n    ): T | undefined {\n        if (defaultValue) {\n            return getConfig(header, resource).get(configSection, defaultValue);\n        }\n        return getConfig(header, resource).get<T>(configSection);\n    }\n\n    private async saveAnySetting<T>(\n        configSection: string,\n        value: T,\n        resource?: Uri,\n        header = 'restructuredtext'\n    ): Promise<T | undefined> {\n        if (workspace.workspaceFolders) {\n            await getConfig(header, resource).update(configSection, value);\n            return value;\n        }\n        return undefined;\n    }\n\n    private loadSetting(\n        configSection: string,\n        defaultValue?: string,\n        resource?: Uri,\n        expand = true,\n        header = 'restructuredtext'\n    ): string | undefined {\n        const result = this.loadAnySetting<string>(\n            configSection,\n            defaultValue,\n            resource,\n            header\n        );\n        if (expand && result) {\n            return this.expandMacro(result!, resource);\n        }\n\n        return result;\n    }\n\n    public expandMacro(input: string, resource?: Uri): string {\n        if (input.indexOf('${') === -1) {\n            return input;\n        }\n\n        let expanded: string;\n        if (input.indexOf('${env:') > -1) {\n            expanded = input.replace(/\\$\\{env:(.+)\\}/, (_match, p1) => {\n                const variable = process.env[p1];\n                return variable ?? '';\n            });\n        } else {\n            expanded = input;\n        }\n\n        if (expanded.indexOf('${') > -1) {\n            const path = this.getRootPath(resource);\n            if (path) {\n                return expanded\n                    .replace('${workspaceRoot}', path)\n                    .replace('${workspaceFolder}', path);\n            }\n        }\n\n        return expanded;\n    }\n\n    public getRootPath(resource?: Uri): string | undefined {\n        if (!workspace.workspaceFolders) {\n            return (\n                workspace.rootPath ??\n                (resource ? path.dirname(resource.fsPath) : undefined)\n            );\n        }\n\n        let root: WorkspaceFolder | undefined;\n        if (workspace.workspaceFolders.length === 1) {\n            root = workspace.workspaceFolders[0];\n        } else {\n            if (!resource) {\n                return undefined;\n            }\n            root = workspace.getWorkspaceFolder(resource);\n        }\n\n        return root?.uri.fsPath;\n    }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See LICENSE in the project root for license information.\n *--------------------------------------------------------*/\n\nimport vscode = require('vscode');\n\nlet globalState: vscode.Memento;\nlet workspaceState: vscode.Memento;\n\nexport function getFromGlobalState(key: string, defaultValue?: any): any {\n    if (!globalState) {\n        return defaultValue;\n    }\n    return globalState.get(key, defaultValue);\n}\n\nexport function updateGlobalState(key: string, value: any) {\n    if (!globalState) {\n        return;\n    }\n    return globalState.update(key, value);\n}\n\nexport function setGlobalState(state: vscode.Memento) {\n    globalState = state;\n}\n\nexport function getGlobalState() {\n    return globalState;\n}\n\nexport function resetGlobalState() {\n    resetStateQuickPick(globalState, updateGlobalState);\n}\n\nexport function getFromWorkspaceState(key: string, defaultValue?: any) {\n    if (!workspaceState) {\n        return defaultValue;\n    }\n    return workspaceState.get(key, defaultValue);\n}\n\nexport function updateWorkspaceState(key: string, value: any) {\n    if (!workspaceState) {\n        return;\n    }\n    return workspaceState.update(key, value);\n}\n\nexport function setWorkspaceState(state: vscode.Memento) {\n    workspaceState = state;\n}\n\nexport function getWorkspaceState(): vscode.Memento {\n    return workspaceState;\n}\n\nexport function resetWorkspaceState() {\n    resetStateQuickPick(workspaceState, updateWorkspaceState);\n}\n\nexport function getMementoKeys(state: vscode.Memento): string[] {\n    if (!state) {\n        return [];\n    }\n    // tslint:disable-next-line: no-empty\n    if ((state as any)._value) {\n        const keys = Object.keys((state as any)._value);\n        // Filter out keys with undefined values, so they are not shown\n        // in the quick pick menu.\n        return keys.filter(key => state.get(key) !== undefined);\n    }\n    return [];\n}\n\nasync function resetStateQuickPick(\n    state: vscode.Memento,\n    updateFn: (key: string, value: any) => {}\n) {\n    const items = await vscode.window.showQuickPick(getMementoKeys(state), {\n        canPickMany: true,\n        placeHolder: 'Select the keys to reset.',\n    });\n    resetItemsState(items, updateFn);\n}\n\nexport function resetItemsState(\n    items: string[],\n    updateFn: (key: string, value: any) => {}\n) {\n    if (!items) {\n        return;\n    }\n    items.forEach(item => updateFn(item, undefined));\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n/*---------------------------------------------------------\n * Copyright 2021 The Go Authors. All rights reserved.\n * Licensed under the MIT License. See LICENSE in the project root for license information.\n *--------------------------------------------------------*/\n\nimport vscode = require('vscode');\nimport {getFromWorkspaceState, updateWorkspaceState} from './stateUtils';\n\nconst WORKSPACE_IS_TRUSTED_KEY = 'WORKSPACE_IS_TRUSTED_KEY';\nconst SECURITY_SENSITIVE_CONFIG: string[] = [\n    'linter.doc8.executablePath',\n    'linter.rstcheck.executablePath',\n    'linter.rst-lint.executablePath',\n];\n\nexport async function initConfig(ctx: vscode.ExtensionContext) {\n    const isTrusted = getFromWorkspaceState(WORKSPACE_IS_TRUSTED_KEY, false);\n    if (isTrusted !== defaultConfig.workspaceIsTrusted()) {\n        defaultConfig.toggleWorkspaceIsTrusted();\n    }\n    ctx.subscriptions.push(\n        vscode.commands.registerCommand(\n            'restructuredtext.workspace.isTrusted.toggle',\n            toggleWorkspaceIsTrusted\n        )\n    );\n\n    if (isTrusted) {\n        return;\n    }\n    const ignored = ignoredWorkspaceConfig(\n        vscode.workspace.getConfiguration('restructuredtext'),\n        SECURITY_SENSITIVE_CONFIG\n    );\n    if (ignored.length === 0) {\n        return;\n    }\n    const ignoredSettings = ignored\n        .map(x => `\"restructuredtext.${x}\"`)\n        .join(',');\n    const val = await vscode.window.showWarningMessage(\n        `Some workspace/folder-level settings (${ignoredSettings}) from the untrusted workspace are disabled ` +\n            'by default. If this workspace is trusted, explicitly enable the workspace/folder-level settings ' +\n            'by running the \"reStructuredText: Toggle Workspace Trust Flag\" command.',\n        'OK',\n        'Trust This Workspace',\n        'More Info'\n    );\n    switch (val) {\n        case 'Trust This Workspace':\n            await toggleWorkspaceIsTrusted();\n            break;\n        case 'More Info':\n            vscode.env.openExternal(\n                vscode.Uri.parse(\n                    'https://docs.restructuredtext.net/articles/configuration.html#security'\n                )\n            );\n            break;\n        default:\n            break;\n    }\n}\n\nfunction ignoredWorkspaceConfig(\n    cfg: vscode.WorkspaceConfiguration,\n    keys: string[]\n) {\n    return keys.filter(key => {\n        const inspect = cfg.inspect(key);\n        return (\n            inspect.workspaceValue !== undefined ||\n            inspect.workspaceFolderValue !== undefined\n        );\n    });\n}\n\nasync function toggleWorkspaceIsTrusted() {\n    const v = defaultConfig.toggleWorkspaceIsTrusted();\n    await updateWorkspaceState(WORKSPACE_IS_TRUSTED_KEY, v);\n}\n\n// reStructuredText extension configuration for a workspace.\nexport class Configuration {\n    constructor(\n        private _workspaceIsTrusted = false,\n        private getConfiguration = vscode.workspace.getConfiguration\n    ) {}\n\n    public toggleWorkspaceIsTrusted() {\n        this._workspaceIsTrusted = !this._workspaceIsTrusted;\n        return this._workspaceIsTrusted;\n    }\n\n    // returns a Proxied vscode.WorkspaceConfiguration, which prevents\n    // from using the workspace configuration if the workspace is untrusted.\n    public get(\n        section: string,\n        uri?: vscode.Uri\n    ): vscode.WorkspaceConfiguration {\n        const cfg = this.getConfiguration(section, uri);\n        if (section !== 'restructuredtext' || this._workspaceIsTrusted) {\n            return cfg;\n        }\n        return new WrappedConfiguration(cfg);\n    }\n\n    public workspaceIsTrusted(): boolean {\n        return this._workspaceIsTrusted;\n    }\n}\n\nconst defaultConfig = new Configuration();\n\n// Returns the workspace Configuration used by the extension.\nexport function DefaultConfig() {\n    return defaultConfig;\n}\n\n// wrappedConfiguration wraps vscode.WorkspaceConfiguration.\n// tslint:disable-next-line: max-classes-per-file\nclass WrappedConfiguration implements vscode.WorkspaceConfiguration {\n    constructor(private readonly _wrapped: vscode.WorkspaceConfiguration) {\n        // set getters for direct setting access (e.g. cfg.gopath), but don't overwrite _wrapped.\n        const desc = Object.getOwnPropertyDescriptors(_wrapped);\n        for (const prop in desc) {\n            // TODO(hyangah): find a better way to exclude WrappedConfiguration's members.\n            // These methods are defined by WrappedConfiguration.\n            if (\n                typeof prop === 'string' &&\n                !['get', 'has', 'inspect', 'update', '_wrapped'].includes(prop)\n            ) {\n                const d = desc[prop];\n                if (SECURITY_SENSITIVE_CONFIG.includes(prop)) {\n                    const inspect = this._wrapped.inspect(prop);\n                    d.value = inspect.globalValue ?? inspect.defaultValue;\n                }\n                Object.defineProperty(this, prop, desc[prop]);\n            }\n        }\n    }\n\n    public get(section: any, defaultValue?: any) {\n        if (SECURITY_SENSITIVE_CONFIG.includes(section)) {\n            const inspect = this._wrapped.inspect(section);\n            return inspect.globalValue ?? defaultValue ?? inspect.defaultValue;\n        }\n        return this._wrapped.get(section, defaultValue);\n    }\n    public has(section: string) {\n        return this._wrapped.has(section);\n    }\n    public inspect<T>(section: string) {\n        return this._wrapped.inspect<T>(section);\n    }\n    public update(\n        section: string,\n        value: any,\n        configurationTarget?: boolean | vscode.ConfigurationTarget,\n        overrideInLanguage?: boolean\n    ): Thenable<void> {\n        return this._wrapped.update(\n            section,\n            value,\n            configurationTarget,\n            overrideInLanguage\n        );\n    }\n}\n\nexport function getConfig(section: string, uri?: vscode.Uri) {\n    if (!uri) {\n        if (vscode.window.activeTextEditor) {\n            uri = vscode.window.activeTextEditor.document.uri;\n        } else {\n            uri = null;\n        }\n    }\n    return defaultConfig.get(section, uri);\n}\n\n// True if the extension is running in known cloud-based IDEs.\nexport const IsInCloudIDE =\n    process.env.CLOUD_SHELL === 'true' || process.env.CODESPACES === 'true';\n", "export const PYTHON_EXTENSION = 'ms-python.python';\n\nexport class Constants {\n    public static readonly python = 'python';\n    public static readonly shrinkLength = 32;\n}\n\nexport const Server = {\n    REQUIRED_PYTHON: '3.6.0',\n    REQUIRED_VERSION: '0.7.0',\n};\n\nexport const Commands = {\n    OPEN_PREVIEW: 'esbonio.preview.open',\n    OPEN_PREVIEW_TO_SIDE: 'esbonio.preview.openSide',\n\n    INSTALL_SERVER: 'esbonio.server.install',\n    RESTART_SERVER: 'esbonio.server.restart',\n    UPDATE_SERVER: 'esbonio.server.update',\n\n    RELOAD_WINDOW: 'workbench.action.reloadWindow',\n    OPEN_EXTENSION: 'extension.open',\n    INSTALL_EXTENSION: 'workbench.extensions.installExtension',\n    UNINSTALL_EXTENSION: 'workbench.extensions.uninstallExtension',\n};\n", "import fetch from 'node-fetch';\nimport * as vscode from 'vscode';\n\n/**\n * Iterface that allows us to mock out various user input commands.\n */\nexport interface UserInput {\n    /**\n     * Exposes VSCode `showInputBox` function.\n     */\n    inputBox(\n        label: string,\n        placeholder: string,\n        value?: string\n    ): Thenable<string | undefined>;\n}\n\n/**\n * Implementation of UserInput that uses VSCode's APIs\n */\nexport class VSCodeInput implements UserInput {\n    inputBox(\n        label: string,\n        placeholder: string,\n        value?: string\n    ): Thenable<string> {\n        return vscode.window.showInputBox({\n            prompt: label,\n            placeHolder: placeholder,\n            value: value,\n        });\n    }\n}\n\n/**\n * Get the corresponding end of line sequence for the given enum..\n *\n * Is there a built-in way to get this??\n */\nfunction getEOLSequence(eol: vscode.EndOfLine): string {\n    switch (eol) {\n        case vscode.EndOfLine.LF:\n            return '\\n';\n        case vscode.EndOfLine.CRLF:\n            return '\\r\\n';\n    }\n}\n\n/**\n * Class that holds all the text editor commands.\n */\nexport class EditorCommands {\n    public static INSERT_LINK = 'esbonio.insert.link';\n    public static INSERT_INLINE_LINK = 'esbonio.insert.inlineLink';\n\n    LINK_PATTERN = /\\.\\.[ ]_\\S+:[ ]\\S+\\n/;\n\n    constructor(public userInput: UserInput) {}\n\n    async insertLink(editor: vscode.TextEditor) {\n        const link = await this.getLinkInfo(editor);\n        if (!link.url || !link.label) {\n            return;\n        }\n\n        const selection = editor.selection;\n        const eol = getEOLSequence(editor.document.eol);\n\n        const lastLine = editor.document.lineAt(editor.document.lineCount - 1);\n        let lineText = editor.document.getText(\n            lastLine.rangeIncludingLineBreak\n        );\n\n        let prefix = '';\n        if (lineText.length === 0) {\n            const line = editor.document.lineAt(editor.document.lineCount - 2);\n            lineText = editor.document.getText(line.rangeIncludingLineBreak);\n        } else {\n            prefix = eol;\n        }\n\n        // If the text at the bottom of the page is not a set of links, insert an\n        // extra new line to start a separate block.\n        if (!this.LINK_PATTERN.test(lineText)) {\n            prefix += eol;\n        }\n\n        const linkRef = `\\`${link.label}\\`_`;\n        const linkDef = `${prefix}.. _${link.label}: ${link.url}${eol}`;\n\n        await editor.edit(edit => {\n            edit.replace(selection, linkRef);\n            edit.insert(lastLine.range.end, linkDef);\n        });\n\n        // Clear the selection\n        const position = editor.selection.end;\n        editor.selection = new vscode.Selection(position, position);\n    }\n\n    /**\n     * Insert inline link.\n     *\n     */\n    async insertInlineLink(editor: vscode.TextEditor) {\n        const link = await this.getLinkInfo(editor);\n        if (!link.url || !link.label) {\n            return;\n        }\n\n        const selection = editor.selection;\n\n        const inlineLink = `\\`${link.label} <${link.url}>\\`_`;\n\n        await editor.edit(edit => {\n            edit.replace(selection, inlineLink);\n        });\n\n        // Clear the selection.\n        const position = editor.selection.end;\n        editor.selection = new vscode.Selection(position, position);\n    }\n\n    /**\n     * Register all the commands this class provides\n     */\n    register(context: vscode.ExtensionContext) {\n        context.subscriptions.push(\n            vscode.commands.registerTextEditorCommand(\n                EditorCommands.INSERT_INLINE_LINK,\n                this.insertInlineLink,\n                this\n            )\n        );\n        context.subscriptions.push(\n            vscode.commands.registerTextEditorCommand(\n                EditorCommands.INSERT_LINK,\n                this.insertLink,\n                this\n            )\n        );\n    }\n\n    /**\n     * Helper function that returns the url to be linked and its label\n     */\n    private async getLinkInfo(editor: vscode.TextEditor) {\n        let label: string;\n        const url = await this.userInput.inputBox('Link URL', 'https://...');\n\n        const parseTitle = body => {\n            const match = body.match(/<title>([^<]*)<\\/title>/); // regular expression to parse contents of the <title> tag\n            if (!match || typeof match[1] !== 'string')\n                throw new Error('Unable to parse the title tag');\n            return match[1];\n        };\n\n        const title = await fetch(url)\n            .then(res => res.text()) // parse response's body as text\n            .then(body => parseTitle(body))\n            .catch(() => null); // extract <title> from body\n\n        const selection = editor.selection;\n        if (selection.isEmpty) {\n            label = await this.userInput.inputBox(\n                'Link Text',\n                'Link Text',\n                title\n            );\n        } else {\n            label = editor.document.getText(selection);\n        }\n\n        return {label: label, url: url};\n    }\n}\n", "/**\n * This module provides utility functions to handle underline title levels\n */\nimport * as vscode from 'vscode';\nimport * as meaw from 'meaw';\nimport {Configuration} from '../util/configuration';\nimport container from '../inversify.config';\nimport {TYPES} from '../types';\n\nconst configuration = container.get<Configuration>(TYPES.Configuration);\nconst underlineChars = configuration.getAdornments();\n\n/**\n * Analyze current underline char and return the underline character corresponding\n * to the next subtitle level.\n *\n * @param current - The current underline character\n * @return - The next underline char in the list of precedence\n */\nexport function nextUnderlineChar(current: string, reverse = false): string {\n    const nextIndex = underlineChars.indexOf(current) + (reverse ? -1 : 1);\n    const nextCharIndex =\n        nextIndex >= 0\n            ? nextIndex % underlineChars.length\n            : nextIndex + underlineChars.length;\n    return underlineChars[nextCharIndex];\n}\n\n/**\n * Check if current line is followed by a line of underline characters. If true, return\n * the underline character, otherwise return null.\n *\n * @param currentLine - current line of text under cursor\n * @param nextLine - next line of text\n * @return - the current underline character if any or null\n */\nexport function currentUnderlineChar(\n    currentLine: string,\n    nextLine: string\n): string {\n    for (const char of underlineChars) {\n        if (\n            nextLine.length >= currentLine.length &&\n            nextLine === char.repeat(nextLine.length)\n        ) {\n            return char;\n        }\n    }\n    return null;\n}\n\n/**\n * Underline current line. If it's already underlined, pick up the underline character\n * corresponding to the nextitle level and replace the current underline.\n */\nexport function underline(\n    textEditor: vscode.TextEditor,\n    edit: vscode.TextEditorEdit,\n    reverse = false\n) {\n    textEditor.selections.forEach(selection => {\n        const position = selection.active;\n        const line = textEditor.document.lineAt(position.line).text;\n        if (line === '') {\n            return; // don't underline empty lines\n        }\n\n        let underlineChar = null;\n        let nextLine = null;\n        if (position.line < textEditor.document.lineCount - 1) {\n            nextLine = textEditor.document.lineAt(position.line + 1).text;\n            underlineChar = currentUnderlineChar(line, nextLine);\n        }\n\n        const lineWidth = underlineWidth(line);\n        if (underlineChar === null) {\n            edit.insert(\n                new vscode.Position(position.line, line.length),\n                '\\n' + '='.repeat(lineWidth)\n            );\n        } else {\n            const nextLineRange = new vscode.Range(\n                new vscode.Position(position.line + 1, 0),\n                new vscode.Position(position.line + 1, nextLine.length)\n            );\n            const replacement = nextUnderlineChar(underlineChar, reverse);\n            edit.replace(nextLineRange, replacement.repeat(lineWidth));\n        }\n    });\n}\n\n/**\n * Return the column width of unicode text.\n * See https://sourceforge.net/p/docutils/code/HEAD/tree/tags/docutils-0.14/docutils/utils/__init__.py#l643\n *\n * TODO: consider the count of combining chars same as docutils.\n */\nexport function underlineWidth(line: string): number {\n    return meaw.computeWidth(line.normalize());\n}\n", "'use strict';\n\nimport {\n    commands,\n    ExtensionContext,\n    Position,\n    Range,\n    Selection,\n    TextEditor,\n    window,\n    workspace,\n    WorkspaceEdit,\n} from 'vscode';\n// import { isInFencedCodeBlock, mathEnvCheck } from './util';\n\nexport function activate(context: ExtensionContext) {\n    context.subscriptions.push(\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onEnterKey',\n            onEnterKey\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onCtrlEnterKey',\n            () => {\n                return onEnterKey('ctrl');\n            }\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onShiftEnterKey',\n            () => {\n                return onEnterKey('shift');\n            }\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onTabKey',\n            onTabKey\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onShiftTabKey',\n            () => {\n                return onTabKey('shift');\n            }\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onBackspaceKey',\n            onBackspaceKey\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.checkTaskList',\n            checkTaskList\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onMoveLineDown',\n            onMoveLineDown\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onMoveLineUp',\n            onMoveLineUp\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onCopyLineDown',\n            onCopyLineDown\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onCopyLineUp',\n            onCopyLineUp\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onIndentLines',\n            onIndentLines\n        ),\n        commands.registerCommand(\n            'restructuredtext.editor.listEditing.onOutdentLines',\n            onOutdentLines\n        )\n    );\n}\n\n// The commands here are only bound to keys with `when` clause containing `editorTextFocus && !editorReadonly`. (package.json)\n// So we don't need to check whether `activeTextEditor` returns `undefined` in most cases.\n\nfunction onEnterKey(modifiers?: string) {\n    const editor = window.activeTextEditor;\n    const cursorPos: Position = editor.selection.active;\n    const line = editor.document.lineAt(cursorPos.line);\n    const textBeforeCursor = line.text.substr(0, cursorPos.character);\n    const textAfterCursor = line.text.substr(cursorPos.character);\n\n    let lineBreakPos = cursorPos;\n    if (modifiers === 'ctrl') {\n        lineBreakPos = line.range.end;\n    }\n\n    if (modifiers === 'shift') {\n        // || isInFencedCodeBlock(editor.document, cursorPos.line) || mathEnvCheck(editor.document, cursorPos)) {\n        return asNormal('enter', modifiers);\n    }\n\n    //// This is a possibility that the current line is a thematic break `<hr>` (GitHub #785)\n    const lineTextNoSpace = line.text.replace(/\\s/g, '');\n    if (\n        lineTextNoSpace.length > 2 &&\n        (lineTextNoSpace.replace(/-/g, '').length === 0 ||\n            lineTextNoSpace.replace(/\\*/g, '').length === 0)\n    ) {\n        return asNormal('enter', modifiers);\n    }\n\n    //// If it's an empty list item, remove it\n    if (\n        /^(>|([-+*\u2022\u2023\u2043]|[0-9]+[.)]|#.)( +\\[[ x]\\])?)$/.test(\n            textBeforeCursor.trim()\n        ) &&\n        textAfterCursor.trim().length === 0\n    ) {\n        return editor\n            .edit(editBuilder => {\n                editBuilder.delete(line.range);\n                editBuilder.insert(line.range.end, '\\n');\n            })\n            .then(() => {\n                editor.revealRange(editor.selection);\n            })\n            .then(() => fixMarker(findNextMarkerLineNumber()));\n    }\n\n    let matches;\n    if (/^> /.test(textBeforeCursor)) {\n        // Quote block\n        return editor\n            .edit(editBuilder => {\n                editBuilder.insert(lineBreakPos, '\\n> ');\n            })\n            .then(() => {\n                // Fix cursor position\n                if (modifiers === 'ctrl' && !cursorPos.isEqual(lineBreakPos)) {\n                    const newCursorPos = cursorPos.with(line.lineNumber + 1, 2);\n                    editor.selection = new Selection(\n                        newCursorPos,\n                        newCursorPos\n                    );\n                }\n            })\n            .then(() => {\n                editor.revealRange(editor.selection);\n            });\n    } else if (\n        (matches = /^(\\s*([-+*\u2022\u2023\u2043]|#.) +(\\[[ x]\\] +)?)/.exec(\n            textBeforeCursor\n        )) !== null\n    ) {\n        // Unordered list\n        return editor\n            .edit(editBuilder => {\n                editBuilder.insert(\n                    lineBreakPos,\n                    `\\n${matches[1].replace('[x]', '[ ]')}`\n                );\n            })\n            .then(() => {\n                // Fix cursor position\n                if (modifiers === 'ctrl' && !cursorPos.isEqual(lineBreakPos)) {\n                    const newCursorPos = cursorPos.with(\n                        line.lineNumber + 1,\n                        matches[1].length\n                    );\n                    editor.selection = new Selection(\n                        newCursorPos,\n                        newCursorPos\n                    );\n                }\n            })\n            .then(() => {\n                editor.revealRange(editor.selection);\n            });\n    } else if (\n        (matches = /^(\\s*)([0-9]+)([.)])( +)((\\[[ x]\\] +)?)/.exec(\n            textBeforeCursor\n        )) !== null\n    ) {\n        // Ordered list\n        const config = workspace\n            .getConfiguration('restructuredtext.editor.listEditing.orderedList')\n            .get<string>('marker');\n        let marker = '1';\n        const leadingSpace = matches[1];\n        const previousMarker = matches[2];\n        const delimiter = matches[3];\n        let trailingSpace = matches[4];\n        const gfmCheckbox = matches[5].replace('[x]', '[ ]');\n        const textIndent = (previousMarker + delimiter + trailingSpace).length;\n        if (config === 'ordered') {\n            marker = String(Number(previousMarker) + 1);\n        }\n        // Add enough trailing spaces so that the text is aligned with the previous list item, but always keep at least one space\n        trailingSpace = ' '.repeat(\n            Math.max(1, textIndent - (marker + delimiter).length)\n        );\n\n        const toBeAdded =\n            leadingSpace + marker + delimiter + trailingSpace + gfmCheckbox;\n        return editor\n            .edit(\n                editBuilder => {\n                    editBuilder.insert(lineBreakPos, `\\n${toBeAdded}`);\n                },\n                {undoStopBefore: true, undoStopAfter: false}\n            )\n            .then(() => {\n                // Fix cursor position\n                if (modifiers === 'ctrl' && !cursorPos.isEqual(lineBreakPos)) {\n                    const newCursorPos = cursorPos.with(\n                        line.lineNumber + 1,\n                        toBeAdded.length\n                    );\n                    editor.selection = new Selection(\n                        newCursorPos,\n                        newCursorPos\n                    );\n                }\n            })\n            .then(() => fixMarker())\n            .then(() => {\n                editor.revealRange(editor.selection);\n            });\n    } else {\n        return asNormal('enter', modifiers);\n    }\n}\n\nfunction onTabKey(modifiers?: string) {\n    const editor = window.activeTextEditor;\n    const cursorPos = editor.selection.start;\n    const lineText = editor.document.lineAt(cursorPos.line).text;\n\n    // if (isInFencedCodeBlock(editor.document, cursorPos.line) || mathEnvCheck(editor.document, cursorPos)) {\n    //     return asNormal('tab', modifiers);\n    // }\n\n    const match = /^\\s*([-+*\u2022\u2023\u2043]|[0-9]+[.)]|#.) +(\\[[ x]\\] +)?/.exec(lineText);\n    if (\n        match &&\n        (modifiers === 'shift' ||\n            !editor.selection.isEmpty ||\n            (editor.selection.isEmpty &&\n                cursorPos.character <= match[0].length))\n    ) {\n        if (modifiers === 'shift') {\n            return outdent(editor).then(() => fixMarker());\n        } else {\n            return indent(editor).then(() => fixMarker());\n        }\n    } else {\n        return asNormal('tab', modifiers);\n    }\n}\n\nfunction onBackspaceKey() {\n    const editor = window.activeTextEditor;\n    const cursor = editor.selection.active;\n    const document = editor.document;\n    const textBeforeCursor = document\n        .lineAt(cursor.line)\n        .text.substr(0, cursor.character);\n\n    // if (isInFencedCodeBlock(document, cursor.line) || mathEnvCheck(editor.document, cursor)) {\n    //     return asNormal('backspace');\n    // }\n\n    if (!editor.selection.isEmpty) {\n        return asNormal('backspace').then(() =>\n            fixMarker(findNextMarkerLineNumber())\n        );\n    } else if (/^\\s+([-+*]|[0-9]+[.)]) $/.test(textBeforeCursor)) {\n        // e.g. textBeforeCursor === `  - `, `   1. `\n        return outdent(editor).then(() => fixMarker());\n    } else if (/^([-+*]|[0-9]+[.)]) $/.test(textBeforeCursor)) {\n        // e.g. textBeforeCursor === `- `, `1. `\n        return editor\n            .edit(editBuilder => {\n                editBuilder.replace(\n                    new Range(cursor.with({character: 0}), cursor),\n                    ' '.repeat(textBeforeCursor.length)\n                );\n            })\n            .then(() => fixMarker(findNextMarkerLineNumber()));\n    } else if (/^\\s*([-+*]|[0-9]+[.)]) +(\\[[ x]\\] )$/.test(textBeforeCursor)) {\n        // e.g. textBeforeCursor === `- [ ]`, `1. [x]`, `  - [x]`\n        return deleteRange(\n            editor,\n            new Range(\n                cursor.with({character: textBeforeCursor.length - 4}),\n                cursor\n            )\n        ).then(() => fixMarker(findNextMarkerLineNumber()));\n    } else {\n        return asNormal('backspace');\n    }\n}\n\nfunction asNormal(key: string, modifiers?: string) {\n    switch (key) {\n        case 'enter':\n            if (modifiers === 'ctrl') {\n                return commands.executeCommand('editor.action.insertLineAfter');\n            } else {\n                return commands.executeCommand('type', {\n                    source: 'keyboard',\n                    text: '\\n',\n                });\n            }\n        case 'tab':\n            if (modifiers === 'shift') {\n                return commands.executeCommand('editor.action.outdentLines');\n            } else if (\n                window.activeTextEditor.selection.isEmpty &&\n                workspace\n                    .getConfiguration('emmet')\n                    .get<boolean>('triggerExpansionOnTab')\n            ) {\n                return commands.executeCommand(\n                    'editor.emmet.action.expandAbbreviation'\n                );\n            } else {\n                return commands.executeCommand('tab');\n            }\n        case 'backspace':\n            return commands.executeCommand('deleteLeft');\n    }\n}\n\n/**\n * If\n *\n * 1. it is not the first line\n * 2. there is a  list item before this line\n *\n * then indent the current line to align with the previous list item.\n */\nfunction indent(editor?: TextEditor) {\n    if (!editor) {\n        editor = window.activeTextEditor;\n    }\n\n    if (\n        workspace\n            .getConfiguration(\n                'restructuredtext.editor.listEditing.list',\n                editor.document.uri\n            )\n            .get<string>('indentationSize') === 'adaptive'\n    ) {\n        try {\n            const selection = editor.selection;\n            const indentationSize = tryDetermineIndentationSize(\n                editor,\n                selection.start.line,\n                editor.document.lineAt(selection.start.line)\n                    .firstNonWhitespaceCharacterIndex\n            );\n            const edit = new WorkspaceEdit();\n            for (let i = selection.start.line; i <= selection.end.line; i++) {\n                if (\n                    i === selection.end.line &&\n                    !selection.isEmpty &&\n                    selection.end.character === 0\n                ) {\n                    break;\n                }\n                if (editor.document.lineAt(i).text.length !== 0) {\n                    edit.insert(\n                        editor.document.uri,\n                        new Position(i, 0),\n                        ' '.repeat(indentationSize)\n                    );\n                }\n            }\n            return workspace.applyEdit(edit);\n        } catch (error) {\n            /* empty */\n        }\n    }\n\n    return commands.executeCommand('editor.action.indentLines');\n}\n\n/**\n * Similar to `indent`-function\n */\nfunction outdent(editor?: TextEditor) {\n    if (!editor) {\n        editor = window.activeTextEditor;\n    }\n\n    if (\n        workspace\n            .getConfiguration(\n                'restructuredtext.editor.listEditing.list',\n                editor.document.uri\n            )\n            .get<string>('indentationSize') === 'adaptive'\n    ) {\n        try {\n            const selection = editor.selection;\n            const indentationSize = tryDetermineIndentationSize(\n                editor,\n                selection.start.line,\n                editor.document.lineAt(selection.start.line)\n                    .firstNonWhitespaceCharacterIndex\n            );\n            const edit = new WorkspaceEdit();\n            for (let i = selection.start.line; i <= selection.end.line; i++) {\n                if (\n                    i === selection.end.line &&\n                    !selection.isEmpty &&\n                    selection.end.character === 0\n                ) {\n                    break;\n                }\n                const lineText = editor.document.lineAt(i).text;\n                let maxOutdentSize: number;\n                if (lineText.trim().length === 0) {\n                    maxOutdentSize = lineText.length;\n                } else {\n                    maxOutdentSize =\n                        editor.document.lineAt(\n                            i\n                        ).firstNonWhitespaceCharacterIndex;\n                }\n                if (maxOutdentSize > 0) {\n                    edit.delete(\n                        editor.document.uri,\n                        new Range(\n                            i,\n                            0,\n                            i,\n                            Math.min(indentationSize, maxOutdentSize)\n                        )\n                    );\n                }\n            }\n            return workspace.applyEdit(edit);\n        } catch (error) {\n            /* empty */\n        }\n    }\n\n    return commands.executeCommand('editor.action.outdentLines');\n}\n\nfunction tryDetermineIndentationSize(\n    editor: TextEditor,\n    line: number,\n    currentIndentation: number\n) {\n    while (--line >= 0) {\n        const lineText = editor.document.lineAt(line).text;\n        let matches;\n        if (\n            (matches = /^(\\s*)(([-+*]|[0-9]+[.)]) +)(\\[[ x]\\] +)?/.exec(\n                lineText\n            )) !== null\n        ) {\n            if (matches[1].length <= currentIndentation) {\n                return matches[2].length;\n            }\n        }\n    }\n    throw 'No previous reStructuredText list item';\n}\n\n/**\n * Returns the line number of the next ordered list item starting either from\n * the specified line or the beginning of the current selection.\n */\nfunction findNextMarkerLineNumber(line?: number): number {\n    const editor = window.activeTextEditor;\n    if (line === undefined) {\n        // Use start.line instead of active.line so that we can find the first\n        // marker following either the cursor or the entire selected range\n        line = editor.selection.start.line;\n    }\n    while (line < editor.document.lineCount) {\n        const lineText = editor.document.lineAt(line).text;\n\n        if (lineText.startsWith('#')) {\n            // Don't go searching past any headings\n            return -1;\n        }\n\n        if (/^\\s*[0-9]+[.)] +/.exec(lineText) !== null) {\n            return line;\n        }\n        line++;\n    }\n    return undefined;\n}\n\n/**\n * Looks for the previous ordered list marker at the same indentation level\n * and returns the marker number that should follow it.\n *\n * @returns the fixed marker number\n */\nfunction lookUpwardForMarker(\n    editor: TextEditor,\n    line: number,\n    currentIndentation: number\n): number {\n    while (--line >= 0) {\n        const lineText = editor.document.lineAt(line).text;\n        let matches;\n        if ((matches = /^(\\s*)(([0-9]+)[.)] +)/.exec(lineText)) !== null) {\n            const leadingSpace: string = matches[1];\n            const marker = matches[3];\n            if (leadingSpace.length === currentIndentation) {\n                return Number(marker) + 1;\n            } else if (\n                (!leadingSpace.includes('\\t') &&\n                    leadingSpace.length + matches[2].length <=\n                        currentIndentation) ||\n                (leadingSpace.includes('\\t') &&\n                    leadingSpace.length + 1 <= currentIndentation)\n            ) {\n                return 1;\n            }\n        } else if ((matches = /^(\\s*)\\S/.exec(lineText)) !== null) {\n            if (matches[1].length <= currentIndentation) {\n                break;\n            }\n        }\n    }\n    return 1;\n}\n\n/**\n * Fix ordered list marker *iteratively* starting from current line\n */\nexport function fixMarker(line?: number) {\n    if (\n        !workspace\n            .getConfiguration('restructuredtext.editor.listEditing.orderedList')\n            .get<boolean>('autoRenumber')\n    )\n        return;\n    if (\n        workspace\n            .getConfiguration('restructuredtext.editor.listEditing.orderedList')\n            .get<string>('marker') === 'one'\n    )\n        return;\n\n    const editor = window.activeTextEditor;\n    if (line === undefined) {\n        // Use either the first line containing an ordered list marker within the selection or the active line\n        line = findNextMarkerLineNumber();\n        if (line === undefined || line > editor.selection.end.line) {\n            line = editor.selection.active.line;\n        }\n    }\n    if (line < 0 || editor.document.lineCount <= line) {\n        return;\n    }\n\n    const currentLineText = editor.document.lineAt(line).text;\n    let matches;\n    if ((matches = /^(\\s*)([0-9]+)([.)])( +)/.exec(currentLineText)) !== null) {\n        // ordered list\n        const leadingSpace = matches[1];\n        const marker = matches[2];\n        const delimiter = matches[3];\n        const trailingSpace = matches[4];\n        const fixedMarker = lookUpwardForMarker(\n            editor,\n            line,\n            leadingSpace.length\n        );\n        const listIndent =\n            marker.length + delimiter.length + trailingSpace.length;\n        let fixedMarkerString = String(fixedMarker);\n\n        return editor\n            .edit(\n                editBuilder => {\n                    if (marker === fixedMarkerString) {\n                        return;\n                    }\n                    // Add enough trailing spaces so that the text is still aligned at the same indentation level as it was previously, but always keep at least one space\n                    fixedMarkerString +=\n                        delimiter +\n                        ' '.repeat(\n                            Math.max(\n                                1,\n                                listIndent -\n                                    (fixedMarkerString + delimiter).length\n                            )\n                        );\n\n                    editBuilder.replace(\n                        new Range(\n                            line,\n                            leadingSpace.length,\n                            line,\n                            leadingSpace.length + listIndent\n                        ),\n                        fixedMarkerString\n                    );\n                },\n                {undoStopBefore: false, undoStopAfter: false}\n            )\n            .then(() => {\n                let nextLine = line + 1;\n                const indentString = ' '.repeat(listIndent);\n                while (editor.document.lineCount > nextLine) {\n                    const nextLineText = editor.document.lineAt(nextLine).text;\n                    if (/^\\s*[0-9]+[.)] +/.test(nextLineText)) {\n                        return fixMarker(nextLine);\n                    } else if (/^\\s*$/.test(nextLineText)) {\n                        nextLine++;\n                    } else if (\n                        listIndent <= 4 &&\n                        !nextLineText.startsWith(indentString)\n                    ) {\n                        return;\n                    } else {\n                        nextLine++;\n                    }\n                }\n            });\n    }\n}\n\nfunction deleteRange(editor: TextEditor, range: Range): Thenable<boolean> {\n    return editor.edit(\n        editBuilder => {\n            editBuilder.delete(range);\n        },\n        // We will enable undoStop after fixing markers\n        {undoStopBefore: true, undoStopAfter: false}\n    );\n}\n\nfunction checkTaskList() {\n    // - Look into selections for lines that could be checked/unchecked.\n    // - The first matching line dictates the new state for all further lines.\n    //   - I.e. if the first line is unchecked, only other unchecked lines will\n    //     be considered, and vice versa.\n    const editor = window.activeTextEditor;\n    const uncheckedRegex = /^(\\s*([-+*]|[0-9]+[.)]) +\\[) \\]/;\n    const checkedRegex = /^(\\s*([-+*]|[0-9]+[.)]) +\\[)x\\]/;\n    const toBeToggled: Position[] = []; // all spots that have an \"[x]\" resp. \"[ ]\" which should be toggled\n    let newState: boolean | undefined = undefined; // true = \"x\", false = \" \", undefined = no matching lines\n\n    // go through all touched lines of all selections.\n    for (const selection of editor.selections) {\n        for (let i = selection.start.line; i <= selection.end.line; i++) {\n            const line = editor.document.lineAt(i);\n            const lineStart = line.range.start;\n\n            if (\n                !selection.isSingleLine &&\n                (selection.start.isEqual(line.range.end) ||\n                    selection.end.isEqual(line.range.start))\n            ) {\n                continue;\n            }\n\n            let matches: RegExpExecArray;\n            if (\n                (matches = uncheckedRegex.exec(line.text)) &&\n                newState !== false\n            ) {\n                toBeToggled.push(\n                    lineStart.with({character: matches[1].length})\n                );\n                newState = true;\n            } else if (\n                (matches = checkedRegex.exec(line.text)) &&\n                newState !== true\n            ) {\n                toBeToggled.push(\n                    lineStart.with({character: matches[1].length})\n                );\n                newState = false;\n            }\n        }\n    }\n\n    if (newState !== undefined) {\n        const newChar = newState ? 'x' : ' ';\n        return editor.edit(editBuilder => {\n            for (const pos of toBeToggled) {\n                const range = new Range(\n                    pos,\n                    pos.with({character: pos.character + 1})\n                );\n                editBuilder.replace(range, newChar);\n            }\n        });\n    }\n}\n\nfunction onMoveLineUp() {\n    return commands\n        .executeCommand('editor.action.moveLinesUpAction')\n        .then(() => fixMarker());\n}\n\nfunction onMoveLineDown() {\n    return commands\n        .executeCommand('editor.action.moveLinesDownAction')\n        .then(() =>\n            fixMarker(\n                findNextMarkerLineNumber(\n                    window.activeTextEditor.selection.start.line - 1\n                )\n            )\n        );\n}\n\nfunction onCopyLineUp() {\n    return commands\n        .executeCommand('editor.action.copyLinesUpAction')\n        .then(() => fixMarker());\n}\n\nfunction onCopyLineDown() {\n    return commands\n        .executeCommand('editor.action.copyLinesDownAction')\n        .then(() => fixMarker());\n}\n\nfunction onIndentLines() {\n    return indent().then(() => fixMarker());\n}\n\nfunction onOutdentLines() {\n    return outdent().then(() => fixMarker());\n}\n\nexport function deactivate() {}\n", "// ============================================================\n// Copyright (c) 2021 Tatsuya Nakamori. All rights reserved.\n// See LICENSE in the project root for license information.\n// ============================================================\nimport * as vscode from 'vscode';\nimport container from '../inversify.config';\nimport {TYPES} from '../types';\nimport {Configuration} from '../util/configuration';\nimport * as util from './util';\n\nexport async function setContext() {\n    const configuration = container.get<Configuration>(TYPES.Configuration);\n    if (configuration.getTableEditorDisabled()) {\n        return;\n    }\n\n    const editor = vscode.window.activeTextEditor;\n    if (editor) {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.editor.opening',\n            true\n        );\n    } else {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.editor.opening',\n            false\n        );\n        return;\n    }\n\n    const tableSizeIsSelected = util.tableSizeIsSelected(editor);\n    if (tableSizeIsSelected) {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.createGrid.enabled',\n            true\n        );\n    } else {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.createGrid.enabled',\n            false\n        );\n    }\n\n    const tableIsSelected = util.tableIsSelected(editor);\n    //const listIsSelected = util.listIsSelected(editor);\n    const listExistsOneLineAbove = util.listExistsOneLineAbove(editor);\n\n    // Conditions under which the Enter(Shift+Enter) button is enabled\n    if (tableIsSelected /* || listIsSelected*/) {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.enter.enabled',\n            true\n        );\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.shift.enter.enabled',\n            true\n        );\n    } else {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.enter.enabled',\n            false\n        );\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.shift.enter.enabled',\n            false\n        );\n    }\n\n    // Alt+Enter (Table - New Line)\n    const selectedLastChara = util.isSelectingLastChara();\n    if (tableIsSelected && !selectedLastChara) {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.alt.enter.enabled',\n            true\n        );\n    } else {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.alt.enter.enabled',\n            false\n        );\n    }\n\n    // Conditions under which the Tab button is enabled\n    if (tableIsSelected || /*listIsSelected ||*/ listExistsOneLineAbove) {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.tab.enabled',\n            true\n        );\n    } else {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.tab.enabled',\n            false\n        );\n    }\n\n    // Conditions under which the [Shift+Tab] button is enabled\n    if (tableIsSelected /* || listIsSelected*/) {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.shift.tab.enabled',\n            true\n        );\n    } else {\n        vscode.commands.executeCommand(\n            'setContext',\n            'resttext.shift.tab.enabled',\n            false\n        );\n    }\n}\n", "'use strict';\nimport {Diagnostic, DiagnosticSeverity, Disposable, Range, Uri} from 'vscode';\nimport {Logger} from '../util/logger';\nimport {Python} from '../util/python';\nimport {Configuration} from '../util/configuration';\nimport {\n    ILinter,\n    ILinterConfiguration,\n    LintingProvider,\n} from './lintingProvider';\nimport container from '../inversify.config';\nimport {TYPES} from '../types';\n\nexport default class RstLintingProvider implements ILinter {\n    public languageId = 'restructuredtext';\n\n    public constructor(\n        public name: string,\n        private module: string,\n        private path: string,\n        private extraArgs: string[],\n        private readonly logger: Logger,\n        private readonly python: Python\n    ) {}\n\n    public activate(subscriptions: Disposable[]) {\n        const provider = new LintingProvider(this, this.logger, this.python);\n        provider.activate(subscriptions);\n    }\n\n    public async loadConfiguration(\n        resource: Uri\n    ): Promise<ILinterConfiguration> {\n        let module: string[] = [];\n        const configuration = container.get<Configuration>(TYPES.Configuration);\n\n        let build = this.path;\n        if (build === null) {\n            const python = await configuration.getPythonPath(resource);\n            if (python) {\n                build = '\"' + python + '\"';\n                module = module.concat(['-m', this.module]);\n            }\n        } else {\n            build = '\"' + build + '\"';\n        }\n\n        if (build === null) {\n            build = this.name;\n        }\n\n        return {\n            executable: build,\n            module,\n            fileArgs: [],\n            bufferArgs: [],\n            extraArgs: this.extraArgs.map(value =>\n                configuration.expandMacro(value, resource)\n            ),\n            runTrigger: configuration.getRunType(resource),\n            rootPath: configuration.getRootPath(resource),\n        };\n    }\n\n    public process(contents: string[]): Diagnostic[] {\n        const diagnostics: Diagnostic[] = [];\n        for (const text of contents) {\n            if (text.includes('No module named') || text.includes('Errno')) {\n                diagnostics.push({\n                    range: new Range(0, 0, 0, Number.MAX_VALUE),\n                    severity: DiagnosticSeverity.Warning,\n                    message: text,\n                    code: null,\n                    source: this.name,\n                });\n                continue;\n            }\n\n            const regex =\n                /(([A-Z]+)\\s+)?(.+?):([0-9]+):?\\s(([A-Z0-9]+)\\s)?(\\(([A-Z]+)\\/[0-9]+\\)\\s)?(.+)/;\n            const matches = regex.exec(text);\n            if (matches === null) {\n                continue;\n            }\n\n            const severity1 = matches[2];\n            const file = matches[3];\n            const line = matches[4];\n            const code = matches[6];\n            const severity2 = matches[8];\n            const message = matches[9];\n            if (file.endsWith('.py') && this.name === 'doc8') {\n                // doc8 internal issues.\n                continue;\n            }\n\n            const lineNumber = parseInt(line, 10) - 1;\n            diagnostics.push({\n                range: new Range(lineNumber, 0, lineNumber, Number.MAX_VALUE),\n                severity: DiagnosticSeverity.Warning,\n                message,\n                code: severity1 ?? severity2 ?? code,\n                source: this.name,\n            });\n        }\n        return diagnostics;\n    }\n}\n", "'use strict';\n\nimport * as cp from 'child_process';\n\nimport * as vscode from 'vscode';\n\nimport {Logger} from '../util/logger';\nimport {Python} from '../util/python';\nimport {ThrottledDelayer} from '../util/async';\nimport {Configuration} from '../util/configuration';\nimport {LineDecoder} from '../util/lineDecoder';\nimport container from '../inversify.config';\nimport {TYPES} from '../types';\n\nenum RunTrigger {\n    onSave,\n    onType,\n    off,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace RunTrigger {\n    export const strings = {\n        off: 'off',\n        onSave: 'onSave',\n        onType: 'onType',\n    };\n    export const from = (value: string): RunTrigger => {\n        if (value === 'onType') {\n            return RunTrigger.onType;\n        } else if (value === 'onSave') {\n            return RunTrigger.onSave;\n        } else {\n            return RunTrigger.off;\n        }\n    };\n}\n\nexport interface ILinterConfiguration {\n    executable: string;\n    module: string[];\n    fileArgs: string[];\n    bufferArgs: string[];\n    extraArgs: string[];\n    runTrigger: string;\n    rootPath: string;\n}\n\nexport interface ILinter {\n    languageId: string;\n    name: string;\n    loadConfiguration: (resource: vscode.Uri) => Promise<ILinterConfiguration>;\n    process: (output: string[]) => vscode.Diagnostic[];\n}\n\nexport class LintingProvider {\n    public linterConfiguration: ILinterConfiguration;\n\n    private executableNotFound: boolean;\n\n    private documentListener: vscode.Disposable;\n    private diagnosticCollection: vscode.DiagnosticCollection;\n    private delayers: {[key: string]: ThrottledDelayer<void>};\n\n    constructor(\n        private readonly linter: ILinter,\n        private readonly logger: Logger,\n        private readonly python: Python\n    ) {\n        this.executableNotFound = false;\n    }\n\n    public activate(subscriptions: vscode.Disposable[]) {\n        this.diagnosticCollection =\n            vscode.languages.createDiagnosticCollection();\n        subscriptions.push(this);\n        vscode.workspace.onDidChangeConfiguration(\n            this.resetConfiguration,\n            this,\n            subscriptions\n        );\n        vscode.workspace.onDidSaveTextDocument(\n            textDocument => {\n                if (textDocument.fileName.endsWith('settings.json')) {\n                    this.resetConfiguration();\n                }\n            },\n            null,\n            subscriptions\n        );\n        this.resetConfiguration();\n\n        vscode.workspace.onDidOpenTextDocument(\n            this.triggerLint,\n            this,\n            subscriptions\n        );\n        vscode.workspace.onDidCloseTextDocument(\n            textDocument => {\n                this.diagnosticCollection.delete(textDocument.uri);\n                delete this.delayers[textDocument.uri.toString()];\n            },\n            null,\n            subscriptions\n        );\n    }\n\n    public dispose(): void {\n        this.diagnosticCollection.clear();\n        this.diagnosticCollection.dispose();\n    }\n\n    private resetConfiguration(): void {\n        this.linterConfiguration = null;\n        vscode.workspace.textDocuments.forEach(this.triggerLint, this);\n    }\n\n    private async loadConfiguration(resource: vscode.Uri): Promise<void> {\n        const oldExecutable =\n            this.linterConfiguration && this.linterConfiguration.executable;\n        this.linterConfiguration = await this.linter.loadConfiguration(\n            resource\n        );\n\n        this.delayers = Object.create(null);\n        if (this.executableNotFound) {\n            this.executableNotFound =\n                oldExecutable === this.linterConfiguration.executable;\n        }\n        if (this.documentListener) {\n            this.documentListener.dispose();\n        }\n        if (\n            RunTrigger.from(this.linterConfiguration.runTrigger) ===\n            RunTrigger.onType\n        ) {\n            this.documentListener = vscode.workspace.onDidChangeTextDocument(\n                e => {\n                    this.triggerLint(e.document);\n                }\n            );\n        } else {\n            this.documentListener = vscode.workspace.onDidSaveTextDocument(\n                this.triggerLint,\n                this\n            );\n        }\n        this.documentListener = vscode.workspace.onDidSaveTextDocument(\n            this.triggerLint,\n            this\n        );\n        // Configuration has changed. Reevaluate all documents.\n    }\n\n    private async triggerLint(\n        textDocument: vscode.TextDocument\n    ): Promise<void> {\n        const configuration = container.get<Configuration>(TYPES.Configuration);\n        const currentFolder = configuration.getRootPath(textDocument.uri);\n        if (\n            this.linterConfiguration === null ||\n            (currentFolder &&\n                this.linterConfiguration.rootPath !== currentFolder)\n        ) {\n            await this.loadConfiguration(textDocument.uri);\n        }\n\n        if (\n            textDocument.languageId !== this.linter.languageId ||\n            textDocument.uri.scheme !== 'file' ||\n            this.executableNotFound ||\n            RunTrigger.from(this.linterConfiguration.runTrigger) ===\n                RunTrigger.off\n        ) {\n            return;\n        }\n\n        const key = textDocument.uri.toString();\n        let delayer = this.delayers[key];\n        if (!delayer) {\n            delayer = new ThrottledDelayer<void>(\n                RunTrigger.from(this.linterConfiguration.runTrigger) ===\n                RunTrigger.onType\n                    ? 250\n                    : 0\n            );\n            this.delayers[key] = delayer;\n        }\n        delayer.trigger(() => this.doLint(textDocument));\n    }\n\n    private async doLint(textDocument: vscode.TextDocument): Promise<void> {\n        if (!(await this.python.checkPython(textDocument.uri, false))) {\n            return;\n        }\n\n        return new Promise<void>(resolve => {\n            const configuration = container.get<Configuration>(\n                TYPES.Configuration\n            );\n            const executable = this.linterConfiguration.executable;\n            const decoder = new LineDecoder();\n            let diagnostics: vscode.Diagnostic[] = [];\n            const file = '\"' + textDocument.fileName + '\"';\n            const rootPath = configuration.getRootPath(textDocument.uri);\n            const options = rootPath ? {rootPath, shell: true} : undefined;\n            let args: string[] = [];\n            args = args.concat(this.linterConfiguration.module);\n            if (\n                RunTrigger.from(this.linterConfiguration.runTrigger) ===\n                RunTrigger.onSave\n            ) {\n                args = args.concat(this.linterConfiguration.fileArgs.slice(0));\n                args.push(file);\n            } else {\n                args.push(file);\n            }\n            args = args.concat(this.linterConfiguration.extraArgs);\n\n            const childProcess = cp.spawn(executable, args, options);\n            this.logger.log(\n                `[linter] Execute: ${executable} ${args.join(\n                    ' '\n                )} in ${rootPath}.`\n            );\n            childProcess.on('error', (error: Error) => {\n                if (this.executableNotFound) {\n                    resolve();\n                    return;\n                }\n                let message: string = null;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((error as any).code === 'ENOENT') {\n                    message = `Cannot lint ${textDocument.fileName}. The executable '${executable}' was not found. Use the '${this.linter.languageId}.linter.executablePath' setting to configure the location of the executable`;\n                } else {\n                    message = error.message\n                        ? error.message\n                        : `Failed to run executable using path: ${executable}. Reason is unknown.`;\n                }\n                this.logger.log(`[linter] ${message}`);\n                vscode.window.showInformationMessage(message);\n                this.executableNotFound = true;\n                resolve();\n            });\n\n            const onDataEvent = (data: Buffer) => {\n                decoder.write(data);\n            };\n            const onEndEvent = () => {\n                decoder.end();\n                const lines = decoder.getLines();\n                if (lines && lines.length > 0) {\n                    diagnostics = this.linter.process(lines);\n                }\n                this.diagnosticCollection.set(textDocument.uri, diagnostics);\n                resolve();\n            };\n\n            if (childProcess.pid) {\n                if (\n                    RunTrigger.from(this.linterConfiguration.runTrigger) ===\n                    RunTrigger.onType\n                ) {\n                    childProcess.stdin.write(textDocument.getText());\n                    childProcess.stdin.end();\n                }\n                childProcess.stderr.on('data', onDataEvent);\n                childProcess.stderr.on('end', onEndEvent);\n                childProcess.stdout.on('data', onDataEvent);\n                childProcess.stdout.on('end', onEndEvent);\n            } else {\n                resolve();\n            }\n        });\n    }\n}\n", "export interface ITask<T> {\n    (): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tvar throttler = new Throttler();\n * \t\tvar letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Throttler<T> {\n    private activePromise: Promise<T>;\n    private queuedPromise: Promise<T>;\n    private queuedPromiseFactory: ITask<Promise<T>>;\n\n    constructor() {\n        this.activePromise = null;\n        this.queuedPromise = null;\n        this.queuedPromiseFactory = null;\n    }\n\n    public queue(promiseFactory: ITask<Promise<T>>): Promise<T> {\n        if (this.activePromise) {\n            this.queuedPromiseFactory = promiseFactory;\n\n            if (!this.queuedPromise) {\n                const onComplete = () => {\n                    this.queuedPromise = null;\n\n                    const result = this.queue(this.queuedPromiseFactory);\n                    this.queuedPromiseFactory = null;\n\n                    return result;\n                };\n\n                this.queuedPromise = new Promise<T>(resolve => {\n                    this.activePromise\n                        .then(onComplete, onComplete)\n                        .then(resolve);\n                });\n            }\n\n            return new Promise<T>((resolve, reject) => {\n                this.queuedPromise.then(resolve, reject);\n            });\n        }\n\n        this.activePromise = promiseFactory();\n\n        return new Promise<T>((resolve, reject) => {\n            this.activePromise.then(\n                (result: T) => {\n                    this.activePromise = null;\n                    resolve(result);\n                },\n                (err: unknown) => {\n                    this.activePromise = null;\n                    reject(err);\n                }\n            );\n        });\n    }\n}\n\n/**\n * A helper to delay execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so the he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tvar delayer = new Delayer(WAITING_PERIOD);\n * \t\tvar letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> {\n    public defaultDelay: number;\n    private timeout: NodeJS.Timer;\n    private completionPromise: Promise<T>;\n    private onResolve: (value: T | Thenable<T>) => void;\n    private task: ITask<T>;\n\n    constructor(defaultDelay: number) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = null;\n        this.completionPromise = null;\n        this.onResolve = null;\n        this.task = null;\n    }\n\n    public trigger(\n        task: ITask<T>,\n        delay: number = this.defaultDelay\n    ): Promise<T> {\n        this.task = task;\n        this.cancelTimeout();\n\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise<T>(resolve => {\n                this.onResolve = resolve;\n            }).then(() => {\n                this.completionPromise = null;\n                this.onResolve = null;\n\n                const result = this.task();\n                this.task = null;\n\n                return result;\n            });\n        }\n\n        this.timeout = setTimeout(() => {\n            this.timeout = null;\n            this.onResolve(null);\n        }, delay);\n\n        return this.completionPromise;\n    }\n\n    public isTriggered(): boolean {\n        return this.timeout !== null;\n    }\n\n    public cancel(): void {\n        this.cancelTimeout();\n\n        if (this.completionPromise) {\n            this.completionPromise = null;\n        }\n    }\n\n    private cancelTimeout(): void {\n        if (this.timeout !== null) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    }\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * Simply combine the two mail man strategies from the Throttler and Delayer\n * helpers, for an analogy.\n */\nexport class ThrottledDelayer<T> extends Delayer<Promise<T>> {\n    private throttler: Throttler<T>;\n\n    constructor(defaultDelay: number) {\n        super(defaultDelay);\n\n        this.throttler = new Throttler();\n    }\n\n    public trigger(\n        promiseFactory: ITask<Promise<T>>,\n        delay?: number\n    ): Promise<Promise<T>> {\n        return super.trigger(() => this.throttler.queue(promiseFactory), delay);\n    }\n}\n", "import {StringDecoder} from 'string_decoder';\n\nexport class LineDecoder {\n    private stringDecoder: StringDecoder;\n    private remaining: string;\n    private lines: string[];\n\n    constructor(encoding = 'utf8') {\n        const input = encoding as BufferEncoding;\n        this.stringDecoder = new StringDecoder(input);\n        this.remaining = null;\n        this.lines = [];\n    }\n\n    public write(buffer: Buffer): string[] {\n        const result: string[] = [];\n        const value = this.remaining\n            ? this.remaining + this.stringDecoder.write(buffer)\n            : this.stringDecoder.write(buffer);\n\n        if (value.length < 1) {\n            this.lines = this.lines.concat(value);\n            return result;\n        }\n        let start = 0;\n        let ch: number;\n        while (\n            start < value.length &&\n            ((ch = value.charCodeAt(start)) === 13 || ch === 10)\n        ) {\n            start++;\n        }\n        let idx = start;\n        while (idx < value.length) {\n            ch = value.charCodeAt(idx);\n            if (ch === 13 || ch === 10) {\n                result.push(value.substring(start, idx));\n                idx++;\n                while (\n                    idx < value.length &&\n                    ((ch = value.charCodeAt(idx)) === 13 || ch === 10)\n                ) {\n                    idx++;\n                }\n                start = idx;\n            } else {\n                idx++;\n            }\n        }\n        this.remaining = start < value.length ? value.substr(start) : null;\n        this.lines = this.lines.concat(result);\n        return result;\n    }\n\n    public end(): string {\n        if (this.remaining && this.remaining.length > 0) {\n            this.lines = this.lines.concat(this.remaining);\n        }\n        return this.remaining;\n    }\n\n    public getLines(): string[] {\n        return this.lines;\n    }\n}\n", "import * as vscode from 'vscode';\nimport container from '../inversify.config';\nimport {TYPES} from '../types';\nimport {Configuration} from '../util/configuration';\nimport {Logger} from '../util/logger';\nimport {Python} from '../util/python';\nimport RstLintingProvider from './rstLinter';\n\nexport async function activate(\n    context: vscode.ExtensionContext,\n    python: Python,\n    logger: Logger\n) {\n    let rstlintToDisable = false;\n    const configuration = container.get<Configuration>(TYPES.Configuration);\n    const disabled = configuration.getLinterDisabled();\n    if (disabled.indexOf('doc8') === -1) {\n        const doc8Path = configuration.getDoc8Path();\n        if (doc8Path || (await python.checkDoc8Install())) {\n            const doc8 = new RstLintingProvider(\n                'doc8',\n                'doc8.main',\n                doc8Path,\n                configuration.getDoc8ExtraArgs(),\n                logger,\n                python\n            );\n            doc8.activate(context.subscriptions);\n            rstlintToDisable = true; // doc8 supersedes rst-lint.\n            logger.log('Enabled doc8 linting...');\n        }\n    }\n\n    if (disabled.indexOf('rstcheck') === -1) {\n        const rstcheckPath = configuration.getRstCheckPath();\n        if (rstcheckPath || (await python.checkRstCheckInstall())) {\n            const rstcheck = new RstLintingProvider(\n                'rstcheck',\n                'rstcheck',\n                rstcheckPath,\n                configuration.getRstCheckExtraArgs(),\n                logger,\n                python\n            );\n            rstcheck.activate(context.subscriptions);\n            logger.log('Enabled rstcheck linting...');\n        }\n    }\n\n    if (disabled.indexOf('rst-lint') === -1 && !rstlintToDisable) {\n        const rstlintPath = configuration.getRstLintPath();\n        if (rstlintPath || (await python.checkRstLintInstall())) {\n            const rstlint = new RstLintingProvider(\n                'rst-lint',\n                'restructuredtext_lint.cli',\n                rstlintPath,\n                configuration.getRstLintExtraArgs(),\n                logger,\n                python\n            );\n            rstlint.activate(context.subscriptions);\n            logger.log('Enabled rst-lint linting...');\n        }\n    }\n}\n", "import vscode = require('vscode');\n\nexport async function updateActivationCount(context: vscode.ExtensionContext) {\n    // Read the activation count from the globalState\n    let activationCount =\n        context.globalState.get<number>('activationCount') || 0;\n\n    // Increment the activation count\n    activationCount++;\n\n    // Update the globalState with the incremented activation count\n    await context.globalState.update('activationCount', activationCount);\n\n    // Prompt the user for rating if needed\n    await promptForRating(context, activationCount);\n}\n\nasync function promptForRating(\n    context: vscode.ExtensionContext,\n    activationCount: number\n) {\n    // Check if the user has already provided a rating; if so, do not prompt again\n    if (isRatingProvided(context)) {\n        return;\n    }\n\n    if (activationCount % 20 === 0) {\n        const rateButton = 'Rate Extension';\n        const response = await vscode.window.showInformationMessage(\n            'You have used this extension for a while. Would you like to rate it in Visual Studio Code Marketplace?',\n            rateButton\n        );\n\n        if (response === rateButton) {\n            const extensionId = encodeURIComponent(context.extension.id);\n            const marketplaceUrl = `https://marketplace.visualstudio.com/items?itemName=${extensionId}&ssr=false#review-details`;\n            vscode.env.openExternal(vscode.Uri.parse(marketplaceUrl));\n\n            // Set the \"rating provided\" flag in the extension's global storage\n            setRatingProvided(context);\n        }\n    }\n}\n\nfunction isRatingProvided(context: vscode.ExtensionContext): boolean {\n    const ratingProvided = context.globalState.get<boolean>('ratingProvided');\n    return ratingProvided || false;\n}\n\nfunction setRatingProvided(context: vscode.ExtensionContext): void {\n    context.globalState.update('ratingProvided', true);\n}\n"],
  "mappings": "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K,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,KAAK,MAAM,IAAG;MACjC,EAAE,OAAO,KAAK,KAAK,MAAM,MAAM,IAAG;MAClC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,KAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,MAAM,MAAM,IAAG;MACnC,EAAE,OAAO,MAAM,KAAK,OAAO,MAAM,IAAG;MACpC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,KAAI;MACtC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,KAAI;MACtC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,OAAO,MAAM,IAAG;MACrC,EAAE,OAAO,OAAO,KAAK,QAAQ,MAAM,IAAG;MACtC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MAAM,IAAG;MACvC,EAAE,OAAO,QAAQ,KAAK,QAAQ,MA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",
  "names": ["Binding", "MetadataReader", "container", "Context", "container", "Metadata", "Plan", "LazyServiceIdentifer", "QueryableString", "Target", "inject", "Request", "container", "FactoryType", "container", "container", "BindingWhenSyntax", "BindingOnSyntax", "BindingWhenOnSyntax", "BindingInSyntax", "BindingInWhenOnSyntax", "BindingToSyntax", "self", "named", "ContainerSnapshot", "Lookup", "ModuleActivationStore", "Container", "container", "module", "named", "ContainerModule", "AsyncContainerModule", "m", "injectable", "named", "inject", "interfaces", "module", "isPlainObject", "module", "isString", "obj", "seen", "path", "module", "module", "module", "module", "Rollbar", "module", "path", "module", "module", "module", "module", "module", "module", "module", "module", "url", "require_telemetry", "module", "self", "require_async", "module", "global", "exports", "reject", "applyEach", "index", "once", "promiseCallback", "filter", "module", "path", "sourceFile", "needle", "section", "path", "fs", "fs", "callback", "err", "lines", "module", "regexp", "regexes", "document", "module", "configuration", "module", "i", "path", "module", "require_transforms", "module", "module", "messageIsIgnored", "module", "JSON", "indent", "container", "key", "require_rollbar", "module", "Rollbar", "logger", "self", "err", "require_util", "fs", "spawn", "exec", "i", "exec", "fs", "error", "stdout", "lines", "cmd", "exec", "fs", "apps", "error", "stdout", "exec", "fs", "i", "stdout", "error", "cpu", "exec", "fs", "error", "stdout", "module", "exec", "fs", "exec", "cmd", "error", "stdout", "exec", "fs", "error", "stdout", "lines", "devices", "exec", "fs", "element", "file", "result", "error", "stdout", "lines", "process", "exec", "fs", "path", "exec", "srv", "error", "stdout", "i", "exec", "error", "stdout", "exec", "module", "data", "data", "container", "result", "process", "exec", "res", "require_lib", "module", "module", "module", "module", "path", "res", "module", "require_lib", "module", "isDomainOrSubdomain", "fetch", "abort", "abortAndFinalize", "computeWidth", "module", "module", "module", "module", "module", "module", "module", "activate", "vscode", "vscode", "document", "path", "vscode", "vscode", "vscode", "vscode", "vscode", "document", "vscode", "Reflect", "hasOwn", "MapIterator", "Map", "Set", "WeakMap", "import_inversify", "vscode", "Trace", "import_inversify", "vscode", "configuration", "path", "import_inversify", "vscode", "vscode", "vscode", "path", "Configuration", "import_vscode", "Configuration", "configuration", "selectedCell", "lineText", "vscode", "fetch", "vscode", "import_vscode", "document", "vscode", "configuration", "tableSizeIsSelected", "tableIsSelected", "listExistsOneLineAbove", "activate", "import_vscode", "vscode", "RunTrigger", "configuration", "module", "path", "configuration", "activate", "configuration", "vscode", "activate", "configuration"]
}
